searchState.loadedDescShard("embedder_traits", 0, "Show a message.\nWhether or not to allow a pipeline to load a url.\nWhether or not to allow script to open a new tab/browser\nWether or not to unload a document\nAlerts the embedder that the current page has changed its …\nThe variant of CompositorEvent that was delivered to a …\nA cursor for the window. This is different from a CSS …\nPrompt was dismissed\n…\nSends messages to the embedder.\nThe port that the embedder receives messages on.\nThe given event was delivered to a pipeline in the given …\nFilter for file selection; the <code>String</code> content is expected …\nhttps://w3.org/TR/gamepad/#dom-gamepadhapticeffecttype\nGets system clipboard contents\nOpen dialog to select bluetooth device.\n<code>&lt;head&gt;</code> tag finished parsing\nRequest to hide the IME when the editable element is …\nThe history state has changed.\nAsk the user to enter text.\nUsed to specify the kind of input method editor …\nSends an unconsumed key event back to the embedder.\nThe load of a page has completed\nThe load of a page has begun\nhttps://w3c.github.io/mediasession/#mediametadata\n…\nType of events sent from script to the embedder about the …\nNotifies the embedder about media session events (i.e. …\n…\nMove the window to a point\nA favicon was detected\nThe browsing context does not specify whether it’s …\nAsk a Ok/Cancel question.\nReport the status of Devtools Server with a token that can …\nA pipeline panicked. First string is the reason, second …\nThe browsing context has paused media and it can be …\nEnum with variants that match the DOM PermissionName enum\nInformation required to display a permission prompt\nStatus for prompting user for permission.\nRequest to play a haptic effect on a connected gamepad.\nIndicates that the playback state has changed.\nThe browsing context is currently playing media and it can …\nPrompt was closed by clicking on the primary button …\nShow dialog to user\nOpen interface to request permission specified by prompt.\nNotify the embedder that it needs to present a new frame.\nReport a complete sampled profile\nResize the window to size\nPrompt was closed by clicking on the secondary button …\nOpen file dialog to select files. Set boolean flag to true …\nSets system clipboard contents\nChanges the cursor.\nEnter or exit fullscreen\nIndicates that the media metadata is available.\nIndicates that the position state is set.\nShow a context menu to the user\nRequest to present an IME to the user when an editable …\nServo has shut down\nA status message to be displayed by the browser chrome.\nRequest to stop a haptic effect on a connected gamepad.\nPrompt is triggered from Servo (ask for permission, show …\nPrompt is triggered from content …\nAll webviews lost focus for keyboard events.\nA webview was destroyed.\nA webview gained focus for keyboard events.\nA webview was created.\nAsk a Yes/No question.\nAlbum\nArtist\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTitle\nA HTML page to display when <code>SslValidation</code> network error is …\nA list of GATT services that are blocked from being used …\nA placeholder HTML page to display when the code …\nA HTML page to display when a directory listing is …\nA list of domain names that are considered public …\nA preloaded list of HTTP Strict Transport Security. It can …\nA CSS file to style the media controls. It can be empty …\nA JS file to control the media controls. It can be empty …\nA HTML page to display when any network error occurs that …\nA json file of <code>Preferences</code> configuration. It can be empty …\nA CSS file to style the presentational hints. It can be …\nA CSS file to style the quirks mode. It can be empty but …\nA placeholder image to display if we couldn’t get the …\nA CSS file to style the Servo browser. It can be empty but …\nA CSS file to style the user agent stylesheet. It can be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBake all of our resources into this crate for tests, …")