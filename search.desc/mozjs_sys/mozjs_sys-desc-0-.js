searchState.loadedDescShard("mozjs_sys", 0, "Rust wrappers for mozjs’s glue module\nConfigure a panic hook to redirect rust panics to MFBT’s …\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlias things that can modify the DOM but nothing else.  …\nAlias the world.  Calling this can change arbitrary values …\nAlias nothing: a constant value, getting it can’t affect …\nMust be last.\nCalled when the transferring objects are checked. If this …\nCalled when freeing a transferable handled by the …\nDo not free any Transferables within this buffer when …\nAdd a property named by id to obj.\nThe C-style API calls to read and write structured clones …\nDelete a property named by id in obj.\nThe old-style JSClass.enumerate op should define all lazy …\nBase class that implements parts shared by JSErrorReport …\nCallback used to intercept JavaScript errors.\nNotes associated with JSErrorReport.\nUniquePtr is a smart pointer that wholly owns a resource.  …\nDescribes a single error or warning that occurs in the …\nPossible exception types. These types are part of a …\nEach external string has a pointer to …\nCalled at the end of collection when everything has been …\nCalled after sweeping a group of zones. All dead GC things …\nCalled when preparing to sweep a group of zones, before …\nCalled after preparing to sweep a group of zones. Weak …\nFinalize obj, which the garbage collector has determined …\nThe type of ObjectOps::funToString.  This callback allows …\nLower limit for collecting a zone (MB).\nWhether balanced heap limits are enabled.\nAmount of bytes allocated by the GC.\nThe chunk size in bytes for this system.\nWhether compacting GC is enabled.\nWhether to automatically generate missing allocation sites …\nHeap growth parameter for balanced heap limit calculation.\nThe number of background threads to use for parallel GC …\nThe number of background threads to use for parallel GC …\nHeap growth factor for large heaps in the high-frequency …\nHeap growth factor for small heaps in the high-frequency …\nGCs less than this far apart in milliseconds will be …\nWhether incremental GC is enabled. If not, GC will always …\nWhether incremental weakmap marking is enabled.\nLimit of how far over the incremental trigger threshold we …\nLower limit for classifying a heap as large (MB).\nHeap growth factor for low frequency GCs.\nA number that is incremented on every major GC slice.\nRetained size base value for calculating malloc heap …\nGet the number of threads used for parallel marking.\nMaximum nominal heap before last ditch GC.\nWe never keep more than this many unused chunks in the …\nThe maximum number of background threads to use for …\nSet the maximum number of threads to use for parallel …\nMaximum size of the generational GC nurseries.\nA number that is incremented on every minor GC.\nWe try to keep at least this many unused chunks in the …\nThe minimum time to allow between triggering last ditch …\nMinimum size of the generational GC nurseries.\nNumber of times GC has been invoked. Includes both major …\nThe delay (in heapsize kilobytes) between slices of an …\nFree space bytes threshold for eager nursery collection.\nFree space fraction threshold for eager nursery …\nJS::MaybeRunNurseryCollection will collect the nursery if …\nWhether parallel marking is enabled.\nThe heap size above which to use parallel marking.\nWhether per-zone GC is enabled. If not, all zones are …\nWhether the semispace nursery is enabled.\nA number that is incremented every GC slice.\nMax milliseconds to spend in an incremental GC slice.\nLimit of how far over the incremental trigger threshold we …\nUpper limit for classifying a heap as small (MB).\nThe system page size in KB.\nTotal number of allocated GC chunks.\nNumber of cached empty GC chunks.\nIn an incremental GC, this determines the point at which …\nThe delay (in heapsize kilobytes) between slices of an …\nA class, expected to be passed by value, which represents …\nThis struct contains metadata passed from the DOM to the …\nAn enum that describes what this getter/setter/method …\nA class, expected to be passed by value, which represents …\nA class with a resolve hook can optionally have a …\nWrapper to relace JSNative for JSPropertySpecs and …\nThe type of ObjectOps::enumerate. This callback overrides …\nThe property is visible in for/in loops.\nThe property is non-configurable: it can’t be deleted, …\nThe property is non-writable.  This flag is only valid for …\nResolve hooks and enumerate hooks must pass this flag when …\nCallback used by the wrap hook to ask the embedding to …\nDescription of a property. JS_DefineProperties and …\nResolve a lazy property named by id in obj by defining it …\nJSStructuredCloneData represents structured clone data …\nFunction type for trace operation of the class called to …\nCallback used to ask the embedding for the cross …\nused in debug builds to catch tracing errors\nA JS context always has an “owner thread”. The owner …\nRegister externally maintained GC roots.\nEquivalent to <code>Object.assign(target, src)</code>: Copies the …\nPerform the method call <code>rval = obj[name](args)</code>.\nCall a function, passing a this-value and arguments. This …\nConvert chars into a jsid.\nConcatenate two strings, possibly resulting in a rope. See …\nCopies all own properties and private fields from |obj| to …\nCopies the string’s characters to a null-terminated …\nFor JS_DecodeBytes, set *dstlenp to the size of the …\nFreeze obj, and all objects it refers to, recursively. …\nOther property-defining functions\nAdd various profiling-related functions as properties of …\nDefine a property on obj.\nDefine a property on obj, throwing a TypeError if the …\nDelete a property. This is the C++ equivalent of …\nDelete a property, ignoring strict failures. This is the …\nDO NOT USE, only present for Rust bindings as a temporary …\na hole in a native object’s elements\nWhen an error object is created without the error cause …\nDEPRECATED\nEncode string into a buffer. The function does not stores …\nDEPRECATED\nDEPRECATED\nGet an array of the non-symbol enumerable properties of …\nIf the given object is an exception object, the exception …\nEvaluate a script in the scope of the current global of cx.\nAs above, but providing an explicit scope chain.  envChain …\nGet the value of the property <code>obj[id]</code>, or undefined if no …\nPerform the same property assignment as …\nFreezes an object; see ES5’s Object.freeze(obj) method.\nA variant of JS_ShutDown for process which used …\nexception value thrown when closing a generator\nfor local use\nReturn the ArrayBuffer or SharedArrayBuffer underlying an …\nMore generic name for JS_GetTypedArrayByteLength to cover …\nMore generic name for JS_GetTypedArrayByteOffset to cover …\nSame as above, but for any kind of ArrayBufferView. Prefer …\nReturn a “fixed” pointer (one that will not move …\nReturn the ‘callbacks’ arg passed to …\nReturn a function’s display name as <code>name</code> out-parameter.\nReturn the function’s identifier as a JSString, or null …\nAlmost same as JS_GetFunctionDisplayId.\nAlmost same as JS_GetFunctionId.\nGet the value of the property <code>obj[id]</code>, or undefined if no …\nGet the prototype of |obj|, storing it in |proto|.\nIf |obj| (underneath any functionally-transparent wrapper …\nGet number of bytes in the string encoding (without …\nReturn the byte length of a typed array.\nReturn the byte offset from the start of an ArrayBuffer to …\nReturn the number of elements in a typed array.\nReturn the isShared flag of a typed array, which denotes …\nSpidermonkey does not have a good way of keeping track of …\nsee class js::HashableValue\nDetermine whether obj has an own property with the key <code>id</code>.\nCompute the expression <code>id in obj</code>.\nexception value thrown when interrupting irregexp\nmissing recover instruction result\nerror while running Ion code\nmagic value passed to natives to indicate construction\nConvert a uint32_t index into a jsid.\nDefines a builtin constructor and prototype. Returns the …\nAdd ‘Reflect.parse’, a SpiderMonkey extension, to the …\nCopy the own properties of src to dst in a fast way.  src …\nCheck whether obj supports JS_GetArrayBufferView* APIs. …\nTrue iff fun is the global eval function.\nTrue iff fun is the Function constructor.\nReturn whether the given function is a valid constructor.\nDetermine whether the given object is backed by a …\nDetermine whether obj is extensible. Extensible objects …\nTest if the given string is a valid ECMAScript identifier\nTest whether the given chars + length are a valid …\nCheck whether obj supports JS_GetTypedArray* APIs. Note …\nThis function calls |compartmentCallback| on every …\nThis function calls |compartmentCallback| on every …\nSet up ctor.prototype = proto and proto.constructor = ctor …\narguments object can’t be created because environment is …\nMark a jsid after entering a new compartment. Different …\nIf value stores a jsid (an atomized string or symbol), …\nIf the bufSize passed to JS_GetArrayBufferViewFixedData is …\nthere is not a pending iterator value\nCreate a new DataView using the given buffer for storage. …\nCreates a new dead wrapper object in the given scope. To …\nCreate a dependent string, i.e., a string that owns no …\nFill “properties” with a list of standard class names …\nFill “properties” with a list of standard class names. …\nCreate a new JSString whose chars member refers to …\nCreate a new JSString whose chars member may refer to …\nSimilar to JS_NewMaybeExternalStringLatin1.\nA constructor can request that the JS engine create a …\nUnlike JS_NewObject, JS_NewObjectWithGivenProto does not …\nAllocate an object in exactly the same way as …\nCreates a new plain object, like <code>new Object()</code>, with …\nMicroseconds since the epoch, midnight, January 1, 1970 …\noptimized out slot\nInfallible predicate to test whether obj is a function …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nAttempt to make |obj| non-extensible.\nImplements StructuredDeserialize and …\nUndo a call to JS_AddExtraGCRootsTracer.\nComplain when an allocation size overflows the maximum …\nReport an exception represented by the sprintf-like …\nComplain when out of memory.\nResolve id, which must contain either a string or an int, …\nan empty subnode in the AST serializer\nAssign ‘undefined’ to all of the object’s …\nThis function can be used to track memory used by ICU.  If …\nAttempt to make the [[Prototype]] of |obj| immutable, such …\nSet the size of the native stack that should not be …\nPerform the assignment <code>obj[id] = v</code>.\nChange the prototype of obj.\nDestroy free-standing resources allocated by SpiderMonkey, …\nPerforms the JSON.stringify operation, as specified by …\nuninitialized lexical bindings that produce ReferenceError …\nGiven a buffer, return false if the buffer might become a …\nWhen an error object is created without the error cause …\nImplements StructuredSerialize, …\nA wrapper for |js_free(p)| that may delay |js_free(p)| …\nSame as above, but for buffers that will be used with the …\nMozRefCountType is Mozilla’s reference count type.\nA buffer that cannot contain Transferables at all. This …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nThe buffer owns any Transferables that it might contain, …\nRead structured data from the reader r. This hook is used …\nThis is called when JS_ReadStructuredClone receives a …\nCalled when a SharedArrayBuffer (including one owned by a …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis is called when serialization or deserialization …\nCalled when JS_WriteStructuredClone receives a …\nStructured data serialization hook. The engine can write …\nalready_AddRefed cooperates with reference counting smart …\nThe number of arguments to expand in the formatted error …\nOne of the JSExnType constants above.\nThe error format string in ASCII.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nThe error message name in ASCII.\nA DOM static method, used for Promise wrappers\nIf IsIncrementalGCInProgress(cx), this call aborts the …\nAdvise the GC of external memory owned by a JSObject. This …\nAdd and remove nursery collection callbacks for the given …\nUnforgeable, optimized version of the JS builtin …\nUnforgeable, optimized version of the JS builtin …\nCapture all frames.\nCopy data from one array buffer to another.\nCopy data from one array buffer to another.\nReturn true if the ArrayBuffer |obj| contains any data, …\nAsserts (in debug and release builds) that <code>obj</code> belongs to …\nAssert that code is only ever called from a GC callback, …\nDiagnostic assert (see MOZ_DIAGNOSTIC_ASSERT) that GC …\n[SMDOC] Protecting the debuggee’s job/microtask queue …\nEnsure that generational GC is disabled within some scope.\nPass a subclass of this “abstract” class to callees to …\nEnumeratedArray is a fixed-size array container for use …\nSave and later restore the current exception state of a …\nSupply an alternative stack to incorporate into captured …\nA simple RAII class that clears the registered warning …\nSame as BigIntFits(), but checks if the value fits inside …\nReturn true if the given BigInt is negative.\nConvert the given BigInt to a Number value as if calling …\nConvert the given BigInt to a String value as if …\nUniquePtr deleter for external buffer contents.\nVector of characters used for holding build ids.\nReturn the buildId (represented as a sequence of …\nGiven a SavedFrame JSObject stack, stringify it in the …\nCalls the current compartment’s original Promise.reject …\nCalls the current compartment’s original Promise.resolve …\nCreate a Promise with the given fulfill/reject handlers, …\nCapture the current call stack as a chain of SavedFrame …\nCheck whether the given source is a valid regexp. If the …\nClear kept alive objects in JS WeakRef. …\nClear the private value associated with a source text …\nData for tracking JIT-code memory usage.\nAn enum that JSIterateCompartmentCallback can return to …\nSpecification for which compartment/zone a newly created …\nCompile the provided script using the given options.  …\nCompile the provided script using the given options.  …\nCompile a function with envChain plus the global as its …\nCompile a function with envChain plus the global as its …\nIdentical to the CompileFunction overload above for UTF-8, …\nParse the given source buffer as a JSON module in the …\nParse the given source buffer as a module in the scope of …\nParse the given source buffer as a module in the scope of …\nCompilation options stored on the stack. An instance of …\nCompile the UTF-8 contents of the given file into a …\nCompile the UTF-8 contents of the file at the given path …\nInvoke a constructor. This is the C++ equivalent of …\nInvoke a constructor. This is the C++ equivalent of …\nReturns true if there are any live SharedArrayBuffer …\nGiven a SavedFrame object, convert it and its transitive …\nCreate a new ArrayBuffer, whose bytes are set to the …\nCreate memory mapped ArrayBuffer contents. Caller must …\nGet the current realm’s global. Returns nullptr if no …\nCustom rooting behavior for internal and external clients.\nDetach an ArrayBuffer, causing all associated views to no …\nWhen writing, this means we’re writing for an audience …\nHandle a backwards-compatibility case with IndexedDB (bug …\nIncremental GC defaults to enabled, but may be disabled …\nAttempt to disable Wasm’s usage of reserving a large …\nCallback to dispatch a JS::Dispatchable to a JSContext’s …\nThe Dispatchable interface allows the embedding to call …\nEncode a narrow multibyte character string to a UTF-8 …\nEncode a UTF-8 string to a narrow multibyte character …\nEncode a UTF-8 string to a wide string.\nEncode a wide string to a UTF-8 string.\nInstall an context wide callback that implements the …\nNB: This API is infallible; a nullptr return value does …\nType representing a JS error or exception. At the moment …\nEvaluate the given source buffer in the scope of the …\nAs above, but providing an explicit scope chain.  envChain …\nEvaluate the provided UTF-8 data in the scope of the …\nEvaluate the UTF-8 contents of the file at the given path, …\nIf the given object is an exception object (or an …\nExecute a regexp on a given input, starting from |indexp|. …\nExecute a regexp on a given input, starting from |indexp|. …\nDo true ephemeron marking with a weak key lookup marking …\nGet a statically allocated C string explaining the given …\nInstall a process-wide callback to validate script …\nThis must be called after a dynamic import operation is …\nIf IsIncrementalGCInProgress(cx), this call finishes the …\nCapture the first frame with the given principals. By …\nA convenience class for imitating a JS for-of loop. …\nSet all of the uninitialized lexicals on an object to …\nA GC pointer, tagged with the trace kind.\nA nursery collection callback receives the progress of the …\nDescribes the progress of an observed nursery collection.\nData for tracking GC memory usage.\nReturns the base size in bytes of the GC thing of kind …\nReturns a static string equivalent of |kind|.\nThe nursery collection is ending.\nThe nursery collection is starting.\nReturn the available byte length of an ArrayBuffer.\nReturn a pointer to the start of the data referenced by a …\nReturn a pointer to the start of the array buffer’s …\nGet the length, sharedness, and data from an …\nStore |*lengthp = ToLength(obj.length)| and return true on …\nDetermine the ECMAScript “class” – Date, String, …\nIf args.get(0) is one of the strings “string”, “…\nGet the HostImportModuleDynamically hook for the runtime.\nGet the hook for populating the import.meta metadata …\nGet the HostResolveImportedModule hook for the runtime.\nGet the global object associated with an object’s realm. …\nAttempt to unwrap |obj| as an ArrayBuffer.\nReturns a js::SavedFrame linked list of the stack that …\nReturns the current compartment’s original Promise …\nReturns the given Promise’s process-unique ID.\nReturns whether the given promise’s rejection is already …\nReturns the current compartment’s original …\nReturns the given Promise’s state as a JS::PromiseState …\nReturns the given Promise’s activation behavior state …\nReturn the source text for a RegExp object (or a wrapper …\nGiven a SavedFrame JSObject, get its asyncCause string. …\nGiven a SavedFrame JSObject, get its asyncParent …\nGiven a SavedFrame JSObject, get its column property. …\nGiven a SavedFrame JSObject, get its functionDisplayName …\nGiven a SavedFrame JSObject, get its line property …\nGiven a SavedFrame JSObject, get its parent SavedFrame …\nGiven a SavedFrame JSObject, get its source property. …\nGiven a SavedFrame JSObject, get an ID identifying its …\nReturn the SymbolCode telling what sort of symbol <code>symbol</code> …\nGet the [[Description]] attribute of the given symbol.\nSymbol.for as specified in ES6.\nUnforgeable version of the JS builtin Promise.all.\nGet one of the well-known symbols defined by ES6. A single …\nGet one of the well-known symbols defined by ES6 as …\nMeasurements that not associated with any individual …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nA generic handle to an array of rooted values.\nInforms the JS engine that the scripted caller should be …\nReturn whether an incremental GC has work to do on the …\nPerform a slice of an ongoing incremental collection. When …\nSubset of CompileOptions fields used while instantiating …\nReturn true if the GC reason is internal to the JS engine.\nES6 7.2.2.\nIdentical to IsArray above, but the nature of the object …\nThe answer to a successful query as to whether an object …\nCheck whether obj supports the …\nReturn the isShared flag of a ArrayBufferView subtypes, …\nDetermine whether |value| is an Array object or a wrapper …\nDetermine whether |obj| is an Array object or a wrapper …\nReturns true if capturing stack trace data to associate …\nReturn true if the given object is callable. In ES6 terms, …\nReturn true if the given object is a constructor. In ES6 …\nCheck whether the obj is a detached ArrayBufferObject. …\nWhether we are poisoning unused/released data for error …\nReturns true if any zone in the system has been scheduled …\nReturns true if generational allocation and collection is …\nReturns true if incremental GC is enabled. Simply having …\nReturns true while an incremental GC is ongoing, both when …\nReturns true while an incremental GC is ongoing, both when …\nReturns whether the passed array buffer is ‘large’: …\nOn success, returns true, setting |*isMap| to true if …\nCheck whether the obj is ArrayBufferObject and memory …\nReturn true iff the given object is either a SavedFrame …\nReturns true if the given object is an unwrapped …\nReturns true if the given object is a ReadableStream …\nReturns true if the given object is a …\nReturns true if the given object is a …\nReturns whether the passed array buffer is resizable or …\nOn success, returns true, setting |*isSet| to true if …\nCheck whether obj supports the JS::GetSharedArrayBuffer* …\nReturn true iff the given object is a SavedFrame object …\nReturns true if the given text is valid JSON.\nThis function calls |realmCallback| on every realm. Beware …\nLike IterateRealms, but only iterates realms in …\nLike IterateRealms, but only call the callback for realms …\nHandler with callbacks for JS::ParseJSONWithHandler.\nTiming information for telemetry purposes\nAbstract base class for an ECMAScript Job Queue: …\nInform the runtime that the job queue is empty and the …\nInform the runtime that job queue is no longer empty. The …\nA saved job queue, represented however the JobQueue …\nIf a large allocation fails when calling pod_…\nStore |v1 == v2| to |*equal| – loose equality, which may …\nCapture at most this many frames.\nCheck whether the nursery should be eagerly collected as …\nThe HostImportModuleDynamically hook.\nThe module metadata hook.\nThe HostResolveImportedModule hook.\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nCreate a new ArrayBuffer with the given byte length.\nMarker enum to notify callers that the buffer contents …\nCreate a new ArrayBuffer with the given non-null …\nCreate an Array from the current realm with the given …\nCreate an Array from the current realm with the given …\nCreate a new Date object for a …\nCreate a new function based on the given JSFunctionSpec, *…\nSame as above, but without an id arg, for callers who don…\nCreate a new mapped ArrayBuffer with the given memory …\nReturns a new instance of the Promise builtin class in the …\nReturns a new instance of the ReadableStream builtin class …\nReturns a new instance of the ReadableStream builtin class …\nCreate a new RegExp for the given Latin-1-encoded bytes …\nCreate a new SharedArrayBuffer with the given byte length. …\nCreate a new Symbol with the given description. This …\nCreate a new RegExp for the given source and flags.\nPerforms a non-incremental collection of all selected …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nHolds data about a notable class (one whose combined …\nHolds data about a notable script source file (one whose …\nHolds data about a notable string (one which, counting all …\nCreate a BigInt from a floating-point value. If the number …\nStore in |out| the null-terminated, base-10 result of …\nOn success, returns true, setting |*isDate| to true if …\nOn success, returns true, setting |*isRegExp| to true if …\nPer ES6, the [[DefineOwnProperty]] internal method has …\nDuring global creation, we fire notifications to callbacks …\nThe ConsumeStreamCallback is called from an active …\nES6 draft 20141224, 7.1.1, second algorithm.\nUnlike the error reporter, which is only called if the …\nCompilation options, with dynamic lifetime. An instance of …\nPerforms the JSON.parse operation as specified by …\nA copyable, assignable global GC root type with arbitrary …\nA copyable, assignable global GC root type with arbitrary …\nA copyable, assignable global GC root type with arbitrary …\nSchedule all zones to be collected in the next GC.\nWhen performing an incremental GC, the zones that were …\nSchedule the given zone to be collected as part of the …\nA structure that represents a property on an object, or …\nCreate a jsid that does not need to be marked for GC.\nThe class representing a full set of compile options.\nSubset of CompileOptions fields used while decoding …\nCancels the given ReadableStream with the given reason and …\nClose the given ReadableStream. This is equivalent to …\nC++ equivalent of the <code>reader.read()</code> method on default …\nEnqueues the given chunk in the given ReadableStream.\nErrors the given ReadableStream, causing all future …\nRetrieves the desired combined size of additional chunks …\nReturns the embedding-provided underlying source of the …\nReturns the stream’s ReadableStreamMode. If the mode is …\nCreates a reader of the type specified by the mode option …\nReturns true if the given ReadableStream is disturbed, …\nReturns true if the given ReadableStream is locked, false …\nReturns true if the given ReadableStream is readable, …\nC++ equivalent of <code>reader.cancel(reason)</code> (both …\nReturns true if the given ReadableStream reader is locked, …\nC++ equivalent of <code>reader.releaseLock()</code> (both …\nBreak the cycle between this object and the …\nReleases the embedding-provided underlying source of the …\nTees the given ReadableStream and stores the two resulting …\nAbstract base class for external underlying sources.\nUpdate the amount of data available at the underlying …\nRealmBehaviors specifies behaviors of a realm that can be …\nRealmCreationOptions specifies options relevant to …\nRealmOptions specifies realm characteristics: both those …\nRegular expression flag values, suitable for initializing …\nAll regular expression flags.\nAct globally and find <em>all</em> matches (rather than stopping …\nAdd .indices property to the match result, i.e. /d\nInterpret regular expression source text …\nTreat ^ and $ as begin and end of line, i.e. /m.\nNo regular expression flags.\nOnly match starting from .lastIndex, i.e. /y.\nUse Unicode semantics, i.e. /u.\nUse Unicode Sets semantics, i.e. /v.\nA collection of regular expression flags.  Individual flag …\nRejects the given <code>promise</code> with the given <code>rejectionValue</code>.\nRelease the allocated resource of mapped ArrayBuffer …\nAdvise the GC that external memory reported by …\nRe-query the system to determine the current time zone …\nResolves the given Promise with the given <code>resolutionValue</code>.\n<code>Result</code> is intended to be the return type of JSAPI calls …\nEnumeratedArray is a fixed-size array container for use …\nLocal variable of type T whose value is always rooted. …\nLocal variable of type T whose value is always rooted. …\nLocal variable of type T whose value is always rooted. …\nThese measurements relate directly to the JSRuntime, and …\nData is embedding-specific. The engine can free it by …\nAll enum values at least this large are owned by the clone …\nData is a memory mapped pointer.\nTransferable data has not been filled in yet.\nStructured clone buffer does not yet own the data.\nSame as SCTAG_TMO_CUSTOM, but the embedding can also use …\nSafelyInitialized::create() creates a safely-initialized …\nThe most restrictive scope, with greatest efficiency and …\nStores |SameValue(v1, v2)| to |*equal| – using the …\nHooks called when references to a script private value are …\nThis class holds information about the memory taken up by …\nSpan - slices for C++\nThese are the measurements used by Servo.\nPerform |obj.length = length| as if in strict mode code, …\nTransition the cx to a mode where failures that would …\nCalled when generating a GC slice budget. It allows the …\nThe purge gray callback is called after any …\nThe GC slice callback is called at the beginning and end …\nTell SpiderMonkey to use <code>queue</code> to schedule promise …\nSet the HostImportModuleDynamically hook for the runtime …\nSet the hook for populating the import.meta metadata …\nSet a private value associated with a source text module …\nSet the HostResolveImportedModule hook for the runtime to …\nEmbedder hook to set the buildId-generating function.\nTell JS engine whether Profile Timeline Recording is …\nSets the callback that’s invoked whenever a Promise is …\nSets the given Promise’s activation behavior state flag …\nSet a private value associated with a script. Note that …\nSet the script private finalize hook for the runtime to …\nWhen a JSRuntime is destroyed it implicitly cancels all …\nCreate a BigInt by parsing a string consisting of an …\nDo not trace into weak map keys or values during …\nUndoes the effect of the Prepare methods above. The given …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nmozilla::Variant\nBegin an incremental collection and perform one slice …\nSteal the contents of the given ArrayBuffer. The …\nStore |v1 === v2| to |*equal| – strict equality, which …\nThis class holds information about the memory taken up by …\nCreate a BigInt by parsing a string using the ECMAScript …\nIndicates the “scope of validity” of serialized data.\nThe TenuredHeap class is similar to the Heap class above …\nConvert a JS::Value to a BigInt using the ECMAScript …\nConvert the given BigInt, modulo 2**64, to a signed 64-bit …\nConvert the given BigInt, modulo 2**64, to an unsigned …\nGenerate getter/setter id for given id, by adding “get …\nPerforms the JSON.stringify operation, as specified by …\nAn API akin to JS_Stringify but with the goal of not …\nConvert obj to a primitive value. On success, store the …\nTrace through to all keys and values, irrespective of …\nTrace through to all values, irrespective of whether the …\nValues used to describe the ownership individual …\nThe common base class for the CompileOptions hierarchy.\nExisting code wants to be able to create an uninitialized …\nThis scope is used when the deserialization context is …\nUnsets the gray bit for anything reachable from |thing|. …\n[SMDOC] JS::Value type\nCheck whether the nursery should be eagerly collected, …\nReport a warning represented by the sprintf-like …\nReport a warning represented by the sprintf-like …\nReport a warning represented by the sprintf-like …\nReturns true if the most recent GC ran incrementally.\nThe WasmModule interface allows the embedding to hold a …\ncode_ is either one of the special codes OkCode or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n|introductionType| is a statically allocated C string. See …\nThe length in code units of |units_|.\nThe Web Platform allows scripts to be loaded from …\nWhether this owns |units_| or merely observes source units …\nSet this ObjectOpResult to true and return true.\n|char16_t| or |Utf8Unit| source units of uncertain …\nSpecial type that is a uint8_t, but assignments are …\nSpecial type that is a uint8_t, but assignments are …\nSpecial type that is a uint8_t, but assignments are …\nTypes that don’t have their own TypedArray equivalent, …\nTypes that don’t have their own TypedArray equivalent, …\nTypes that don’t have their own TypedArray equivalent, …\nSpecial type that is a uint8_t, but assignments are …\nReturns byte size of Type (if possible to determine)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis layout is shared by all native objects. For …\nAtomic implementation for integral types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new ArrayBuffer with the given contents. The …\nCallback for the creation of constructor and prototype …\nDetect whether the internal date value is NaN.\nEnumeration describing possible values of the [[Class]] …\nEnqueue |job| on the internal job queue.\nCallback for custom post-processing after class …\nGet the metadata associated with an object.\nA JSErrorCallback suitable for passing to …\nGet an error type name from a JSExnType constant. Returns …\nGet the first SavedFrame object in this SavedFrame stack …\nGet or set function’s reserved slot value. <code>fun</code> should be …\nThis function only reports GC heap memory, and not malloc …\nThis function reports memory used by a zone in bytes, this …\nAdd some or all property keys of obj to the id vector *…\nThis hash policy avoids flattening ropes (which perturbs …\nReturns true iff <code>obj</code> has the WindowProxy Class (see …\nInvoke cellCallback on every gray JSObject in the given …\nGet the script private value associated with an object, if …\nIn memory reporting, we have concept of “sundries”, …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nHint that we expect a crash. Currently, the only thing …\nNone of the above.\nInstruct the runtime to restart draining the internal job …\nPrepareScriptEnvironmentAndInvoke asserts the embedder has …\nSpecify a callback to invoke when creating each JS object …\nAssociates a WindowProxy with a Window (global object). …\nTell the JS engine which Class is used for WindowProxy …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nInstruct the runtime to stop draining the internal job …\nDetermine whether the given string is an array index in …\nOverload of StringIsArrayIndex taking a (char16_t*,length) …\nIf <code>obj</code> is a WindowProxy, get its associated Window (the …\nUse the runtime’s internal handling of job queues for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional hook called when an object is moved by …\nUniquePtr is a smart pointer that wholly owns a resource.  …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn object like std::bitset but which provides access to …\nAn object like std::bitset but which provides access to …\nAtomic implementation for integral types.\nCreate an object providing access to the garbage collector…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLinkedList supports refcounted elements using this adapter …\nInstances of this class represent the length of an …\nPlatform-specific implementation details of …\nCompactPair is the logical concatenation of an instance of …\nThis class is designed to cause crashes when various kinds …\nA version of CorruptionCanary that is suitable as a member …\nDebugOnly contains a value of type T, but only in debug …\nA default deletion policy using plain old operator delete.\nEnumSet&lt;T, U&gt; is a set of values defined by an …\nA tag used to differentiate between GenericErrorResult …\nAn unsigned integral type suitable for accessing the …\nOpaque is a replacement for integral T in cases where only …\nA type that auto-converts to an error Result. This is like …\nA pseudorandom function mapping 32-bit integers to 32-bit …\nLinkedList supports refcounted elements using this adapter …\nLinkedList supports refcounted elements using this adapter …\nAn enum of memory ordering possibilities for atomics.\nNo value.\nEmpty struct, indicating success for operations that have …\nOpaque is a replacement for integral T in cases where only …\nResult&lt;V, E&gt; represents the outcome of an operation that …\nSome value of type <code>T</code>.\nSpecialization of BaseTimeDuration that uses …\nPerform arithmetic operations on the value of a …\nUniquePtr is a smart pointer that wholly owns a resource.  …\nA code unit within a UTF-8 encoded string.  (A code unit …\nmozilla::Variant\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen built with PRIntervalTime, a value of 0 means this …\nAsVariantTemporary stores a value of type T to allow …\nLinkedList supports refcounted elements using this adapter …\nSelectVariantType takes a type T and a list of variant …\nSelectVariantTypeHelper is used in the implementation of …\nUniquePtr is a smart pointer that wholly owns a resource.  …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the number of bits in the given unsigned type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMethods for a CustomAutoRooter\nA trait for types which can place appropriate GC barriers.\nHeap values encapsulate GC concerns of an on-heap …\nTrait for things that can be converted to handles For any …\nA trait for JS types that can be registered as roots.\nRootedValueArray roots an internal fixed-size array of …\nThe type of the handle\nA fixed-size array of values, for use inside Rooted&lt;&gt;.\nThis creates a <code>Box</code>-wrapped Heap value. Setting a value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves a Handle to the underlying value.\nCreate a default value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this object to a handle.\nConvert this object to a mutable handle.\nPlace a post-write barrier\nReturns the rooting kind for <code>Self</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")