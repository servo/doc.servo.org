searchState.loadedDescShard("webxr_api", 0, "This crate defines the Rust API for WebXR. It is …\nInput source connected\nA stand-in type for “the space isn’t statically known …\nThe coordinate space of a secondary capture view\nThe coordinate space of the back frustrum of a cubemap\nThe coordinate space of the bottom frustrum of a cubemap\nThe coordinate space of the left frustrum of a cubemap\nThe coordinate space of the right frustrum of a cubemap\nThe coordinate space of the top frustrum of a cubemap\nA trait for using an XR device\nA trait for discovering XR devices\nThe normalized device coordinate space, where the display …\nSelection ended <em>without</em> it being a contiguous select event\n…\nVec, but better\n…\nErrors that can be produced by XR.\nConvenience structure for buffering up events when no …\nThe coordinate space of the floor …\nThe per-frame data that is provided by the device. …\nSession not visible\n…\nThe coordinate space of a hit test result\nMono view for inline VR, viewport and projection matrices …\nThe coordinate space of an input device\nInput from an input source has changed\n…\nThe coordinate space of the left eye …\nDevices that need to can run sessions on the main thread.\nA trait for discovering mock XR devices\nThe native 3D coordinate space of the device This is not …\nhttps://immersive-web.github.io/hit-test/#xrray\nReceiving end of a channel using serialized messages.\nReference space has changed\nInput source disconnected\nThe coordinate space of the right eye …\nSelection started / ended\nSelection ended <em>with</em> it being a contiguous select event\nSending end of a channel using serialized messages.\nAn object that represents an XR session. This is owned by …\nA type for building XR sessions\nSession ended by device\n…\nhttps://www.w3.org/TR/webxr/#xrsessionmode-enum\nFor devices that want to do their own thread management, …\nPattern-match on eyes\nSelection started\nhttps://immersive-web.github.io/layers/#xrsubimagetype\nNote: SelectEvent::Select here refers to a complete Select …\nInput updated (this is a disconnect+reconnect)\nFor each eye, the pose of that eye, its projection onto …\nThe coordinate space of the viewer …\nThe unnormalized device coordinate space, where the display\nA list of viewports per-eye in the order of fields in …\nWhether a device is mono or stereo, and the views it …\nSession focused/blurred/etc\nSession fully displayed to user\nSession still visible, but is not the primary focus\nBegin an animation frame.\nCreate a connected IpcSender and IpcReceiver that transfer …\nCreate an IpcSender connected to a previously defined …\nCreate a new layer\nDestroy a layer\nTraits to be implemented by backends\nThe direction of the ray. Must be normalized.\nEnd an animation frame, render the layer to the device, …\nEvents that occur with the frame.\nSecondary views are enabled with the <code>secondary-view</code> feature\nThe transform from native coordinates to the floor.\nfield of view values, in radians\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hit test results for this frame, if any\nInputs registered with the device on initialization. More …\nFrame information for each connected input source\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe origin of the ray\nThe pose information of the viewer\nThe average point in time this XRFrame is expected to be …\nQuit the session\nBlocking receive.\nSend data across the channel to the receiver.\nSets the event handling channel\nThe subimages to render to\nErase the type of the channel.\nThe transform from the viewer to native coordinates\nNon-blocking receive\nBlocks for up to the specified duration attempting to …\nThis crate uses <code>euclid</code>’s typed units, and exposes …\nA trait for using an XR device\nA trait for discovering XR devices\nBegin an animation frame.\nCreate a new layer\nDestroy a layer\nEnd an animation frame, render the layer to the device, …\nThe transform from native coordinates to the floor.\nInputs registered with the device on initialization. More …\nQuit the session\nSets the event handling channel\nErrors that can be produced by XR.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInput source connected\nConvenience structure for buffering up events when no …\nSession not visible\nInput from an input source has changed\nReference space has changed\nInput source disconnected\nSelection started / ended\nSession ended by device\nInput updated (this is a disconnect+reconnect)\nSession focused/blurred/etc\nSession fully displayed to user\nSession still visible, but is not the primary focus\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe per-frame data that is provided by the device. …\nEvents that occur with the frame.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hit test results for this frame, if any\nFrame information for each connected input source\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe pose information of the viewer\nThe average point in time this XRFrame is expected to be …\nThe subimages to render to\nThe transform from the viewer to native coordinates\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nVec, but better\n…\nThe coordinate space of a hit test result\nhttps://immersive-web.github.io/hit-test/#xrray\nThe direction of the ray. Must be normalized.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe origin of the ray\nSelection ended <em>without</em> it being a contiguous select event\nSelection ended <em>with</em> it being a contiguous select event\nSelection started\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nhttps://immersive-web.github.io/layers/#xrsubimagetype\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA trait for discovering mock XR devices\nNote: SelectEvent::Select here refers to a complete Select …\nfield of view values, in radians\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nDevices that need to can run sessions on the main thread.\nAn object that represents an XR session. This is owned by …\nA type for building XR sessions\n…\nhttps://www.w3.org/TR/webxr/#xrsessionmode-enum\nFor devices that want to do their own thread management, …\nDestroy a layer\nSecondary views are enabled with the <code>secondary-view</code> feature\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA resolution large enough to contain all the viewports. …\nFor devices that need to run on the main thread.\nFor devices which are happy to hand over thread management …\nHelper function for validating a list of requested …\nA stand-in type for “the space isn’t statically known …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHolds on to hit tests\nConstruct a projection matrix given the four angles from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct matrix given the actual extent of the viewing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks for and clears the pending update flag\nWas there an update that needs propagation to the client?\nThe coordinate space of a secondary capture view\nThe coordinate space of the back frustrum of a cubemap\nThe coordinate space of the bottom frustrum of a cubemap\nThe coordinate space of the left frustrum of a cubemap\nThe coordinate space of the right frustrum of a cubemap\nThe coordinate space of the top frustrum of a cubemap\nThe normalized device coordinate space, where the display …\nThe coordinate space of the floor …\nMono view for inline VR, viewport and projection matrices …\nThe coordinate space of an input device\nThe coordinate space of the left eye …\nThe native 3D coordinate space of the device This is not …\nThe coordinate space of the right eye …\nPattern-match on eyes\nFor each eye, the pose of that eye, its projection onto …\nThe coordinate space of the viewer …\nThe unnormalized device coordinate space, where the display\nA list of viewports per-eye in the order of fields in …\nWhether a device is mono or stereo, and the views it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")