searchState.loadedDescShard("gstreamer_base", 0, "gstreamer-rs crates.io pipeline status\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: GObject with reference counted clone semantics.\nGLib type: Shared boxed type with reference counted clone …\nGLib type: GObject with reference counted clone semantics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGLib type: GObject with reference counted clone semantics.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nEquality for two GObjects.\nReturns the argument unchanged.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nPartial comparison for two GObjects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGLib type: Shared boxed type with reference counted clone …\nReturn the inner pointer to the underlying C value.\nMakes a clone of this shared reference.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows the underlying C value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")