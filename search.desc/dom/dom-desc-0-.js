searchState.loadedDescShard("dom", 0, "The mouse is down on this element. …\nNon-standard &amp; undocumented.\nNon-standard &amp; undocumented.\nNon-standard: …\nContent is checked. …\nhttps://html.spec.whatwg.org/multipage/#selector-default\nhttps://html.spec.whatwg.org/multipage/#selector-defined\nInitially used for the devtools highlighter, but now …\nSome convenience unions.\nContent is disabled. …\nNon-standard: …\nEvent-based document states.\nContent is enabled (and can be disabled). …\nEvent-based element states.\nThis element has focus. …\n…\n…\n…\nState that HTML elements that have a “dir” attr are in.\nState that HTML  elements without a valid-valued “dir” …\nState that HTML elements with dir=“ltr” (or something …\nState that HTML elements with dir=“rtl” (or something …\nThe mouse is hovering over this element. …\nNon-standard &amp; undocumented.\n…\nhttps://html.spec.whatwg.org/multipage/#inert-subtrees\nhttps://html.spec.whatwg.org/multipage/#selector-in-range\nhttps://html.spec.whatwg.org/multipage/#selector-invalid\n:dir matching; the states are used for dynamic change …\nLTR locale: specific to the XUL localedir attribute\nAll the above  bits in one place.\nState for modal elements: …\nNon-standard &amp; undocumented.\nhttps://html.spec.whatwg.org/multipage/#selector-optional …\n…\n…\nhttps://html.spec.whatwg.org/#selector-popover-open Match …\nhttps://html.spec.whatwg.org/multipage/#selector-read-only\nhttps://html.spec.whatwg.org/multipage/#selector-read-write\nhttps://html.spec.whatwg.org/multipage/#selector-required\nFor :-moz-revealed.\nState that elements that match :dir(rtl) are in.\nRTL locale: specific to the XUL localedir attribute\nUsed for the devtools style editor. Probably should go …\nNon-standard &amp; undocumented.\nNon-standard &amp; undocumented.\nState for the topmost modal element in top layer\nhttps://html.spec.whatwg.org/multipage/#selector-link\nhttps://html.spec.whatwg.org/multipage/#selector-target\nhttps://drafts.csswg.org/selectors-4/#user-invalid-pseudo\nhttps://drafts.csswg.org/selectors-4/#user-valid-pseudo\nhttps://html.spec.whatwg.org/multipage/#selector-valid\nAll the validity bits at once.\nFor :-moz-value-empty (to show widgets like the reveal …\nhttps://html.spec.whatwg.org/multipage/#selector-visited\nhttps://drafts.csswg.org/selectors-4/#the-any-link-pseudo\nWindow activation status\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.")