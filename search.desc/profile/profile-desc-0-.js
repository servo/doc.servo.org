searchState.loadedDescShard("profile", 0, "Memory profiling functions.\nTiming functions.\nA module for writing time profiler traces out to a self …\nA collection of ReportsTrees. It represents the data from …\nA collection of one or more reports with the same initial …\nChild nodes.\nFor leaf nodes, this is the count of all reports that …\nInstant at which this profiler was created.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe segment from the report path that maps to this node.\nThe port through which messages are received.\nRegistered memory reporters.\nFor leaf nodes, this is the sum of the sizes of all …\nCollects global measurements from the OS and heap …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet tuple (mean, median, min, max) for profiler statistics.\nCalls <code>U::from(self)</code>.\nAn RAII class for writing the HTML trace dump.\nWrite the epilogue of the trace dump HTML file out to disk …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new TraceDump and write the prologue of the HTML …\nWrite one trace to the trace dump file.")