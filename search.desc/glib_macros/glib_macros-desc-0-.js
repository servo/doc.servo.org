searchState.loadedDescShard("glib_macros", 0, "Derive macro for defining a <code>BoxedType</code><code>::type_</code> function and …\nMacro for deriving implementations of …\nDerive macro for register a Rust enum in the GLib type …\nDerive macro for defining a GLib error domain and its …\nThis macro enables you to derive object properties in a …\nDerive macro for defining a <code>SharedType</code><code>::get_type</code> function …\nExample\nDerive macro for serializing/deserializing custom …\nMacro for passing variables as strong or weak references …\nMacro for creating a <code>Closure</code> object. This is a wrapper …\nThe same as <code>closure!</code> but uses <code>Closure::new_local</code> as a …\nWhen applied to <code>ObjectImpl</code>\nAttribute macro for defining flags using the <code>bitflags</code> …\nMacro for boilerplate of <code>ObjectInterface</code> implementations.\nMacro for boilerplate of <code>ObjectSubclass</code> implementations.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis function derives a weak type for a given strong enum …\nParts needed to derive Downgrade and Upgrade …\nThis function generates parts needed to derive Downgrade …\nDestructuring pattern\nDowngrade code\nTerm needed to finish declaration. It is usually blank but …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUpgrade code\nInner part of weak type declaration\nThis function derives a weak type for a given strong …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a glib property name to a correct rust ident\nStrips out raw identifier prefix (<code>r#</code>) from literal string …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")