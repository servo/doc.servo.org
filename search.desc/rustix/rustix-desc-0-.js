searchState.loadedDescShard("rustix", 0, "<code>rustix</code> provides efficient memory-safe and I/O-safe …\nThe linux_raw backend.\nThe <code>bitcast</code> and <code>bitflags_bits</code> macros.\nUtilities to help with buffering.\nMacro for defining the amount of space to allocate in a …\nA macro for <code>CStr</code> literals.\nEvent operations.\nExport the <code>*Fd</code> types and traits that are used in rustix’…\nUtilities related to FFI bindings.\nFilesystem operations.\nI/O operations.\nUnsafe <code>ioctl</code> API.\nImports from <code>std</code> that would be polyfilled for <code>no_std</code> …\nLinux <code>mount</code> API.\nNetwork-related operations.\nFilesystem path operations.\nThe <code>Pid</code> type.\n<code>pipe</code> and related APIs.\nHelper functions for <code>prctl</code> syscalls.\nProcess-associated operations.\nPOSIX shared memory\nUname and other system-level functions.\nThread-associated operations.\nTime-related operations.\n<code>Timespec</code> and related types, which are used by multiple …\nUser and Group ID types.\nMiscellaneous minor utilities.\nSupport for “weak linkage” to symbols on Unix\nThe maximum number of buffers that can be passed into a …\nArchitecture-specific syscall code.\nAdapt the Linux API to resemble a POSIX-style libc API.\nConvert values to <code>ArgReg</code> and from <code>RetReg</code>.\nEncapsulation for system call arguments and return values.\nParse the Linux vDSO.\nImplement syscalls using the vDSO.\nx86-64 Linux system calls.\nLike <code>syscall</code>, but adds the <code>readonly</code> attribute to the …\nEquivalent to C’s <code>void</code> type when used as a pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the exit status or signal number recorded in a …\nConvert a <code>c_int</code> into an <code>ArgReg</code>.\nConvert a <code>c_uint</code> into an <code>ArgReg</code>.\nDeliberately pass <code>-1</code> to a file-descriptor argument, for …\nConvert an optional mutable reference into a <code>usize</code> for …\nPass an arbitrary <code>usize</code> value.\nPass a raw file-descriptor argument. Most users should use …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>c_int</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>c_uint</code> returned from a syscall that effectively …\nConvert the return value of <code>dup2</code> and <code>dup3</code>.\nConvert a <code>usize</code> returned from a syscall that doesn’t …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nConvert a <code>usize</code> returned from a syscall that effectively …\nPass the <code>mem::size_of</code> of a type.\nPass a zero, or null, argument.\nConvert an <code>OFlags</code> into a <code>u64</code> for use in the <code>open_how</code> …\nlinux_raw syscalls supporting <code>rustix::event</code>.\n<code>EPOLL_CLOEXEC</code>\n<code>EPOLL_*</code> for use with <code>epoll::create</code>.\n<code>EPOLLERR</code>\n<code>EPOLLET</code>\n<code>EPOLLEXCLUSIVE</code>\n<code>EPOLL*</code> for use with <code>epoll::add</code>.\n<code>EPOLLHUP</code>\n<code>EPOLLIN</code>\n<code>EPOLLMSG</code>\n<code>EPOLLONESHOT</code>\n<code>EPOLLOUT</code>\n<code>EPOLLPRI</code>\n<code>EPOLLRDBAND</code>\n<code>EPOLLRDHUP</code>\n<code>EPOLLRDNORM</code>\n<code>EPOLLWAKEUP</code>\n<code>EPOLLWRBAND</code>\n<code>EPOLLWRNORM</code>\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\n<code>POLLERR</code>\n<code>POLLHUP</code>\n<code>POLLIN</code>\n<code>POLLNVAL</code>\n<code>POLLOUT</code>\n<code>POLLPRI</code>\n<code>struct pollfd</code>—File descriptor and flags for use with <code>poll</code>…\n<code>POLL*</code> flags for use with <code>poll</code>.\n<code>POLLRDBAND</code>\n<code>POLLRDHUP</code>\n<code>POLLRDNORM</code>\n<code>POLLWRBAND</code>\n<code>POLLWRNORM</code>\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nClears the ready events.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConstructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nConstructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nReturns the ready events.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the contained file descriptor to <code>fd</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\n<code>EFD_CLOEXEC</code>\n<code>EFD_*</code> flags for use with <code>eventfd</code>.\n<code>EFD_NONBLOCK</code>\n<code>EFD_SEMAPHORE</code>\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nA trait to borrow the file descriptor from an underlying …\nA trait to extract the raw file descriptor from an …\nA borrowed file descriptor.\nA trait to express the ability to construct an object from …\nA trait to express the ability to consume an object and …\nAn owned file descriptor.\nRaw file descriptors.\nBorrows the file descriptor.\nExtracts the raw file descriptor.\nConstructs a new instance of <code>Self</code> from the given raw file …\nConsumes this object, returning the raw underlying file …\ninotify support for working with inotify objects.\nlinux_raw syscalls supporting <code>rustix::fs</code>.\n<code>DIR*</code>\n<code>struct dirent</code>\nHave we seen any errors in this iteration?\nThe buffer for <code>linux_dirent64</code> entries.\n<code>fchdir(self)</code>\nThe <code>OwnedFd</code> that we read directory entries from.\nReturns the file name of this directory entry.\nReturns the type of this directory entry.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the inode number of this directory entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of <code>fd</code> and construct a <code>Dir</code> that reads …\nWhere we are in the buffer.\n<code>readdir(self)</code>, where <code>None</code> means the end of the directory.\nBorrow <code>fd</code> and construct a <code>Dir</code> that reads entries from the …\n<code>rewinddir(self)</code>\nShould we rewind the stream on the next iteration?\n<code>fstat(self)</code>\n<code>fstatfs(self)</code>\n<code>fstatvfs(self)</code>\n<code>IN_ACCESS</code>\n<code>IN_ACCESS</code>\n<code>IN_ALL_EVENTS</code>\n<code>IN_ATTRIB</code>\n<code>IN_ATTRIB</code>\n<code>IN_CLOEXEC</code>\n<code>IN_CLOSE</code>\n<code>IN_CLOSE_NOWRITE</code>\n<code>IN_CLOSE_NOWRITE</code>\n<code>IN_CLOSE_WRITE</code>\n<code>IN_CLOSE_WRITE</code>\n<code>IN_CREATE</code>\n<code>IN_CREATE</code>\n<code>IN_*</code> for use with <code>inotify::init</code>.\n<code>IN_DELETE</code>\n<code>IN_DELETE</code>\n<code>IN_DELETE_SELF</code>\n<code>IN_DELETE_SELF</code>\n<code>IN_DONT_FOLLOW</code>\n<code>IN_EXCL_UNLINK</code>\n<code>IN_IGNORED</code>\n<code>IN_ISDIR</code>\n<code>IN_MASK_ADD</code>\n<code>IN_MASK_CREATE</code>\n<code>IN_MODIFY</code>\n<code>IN_MODIFY</code>\n<code>IN_MOVE</code>\n<code>IN_MOVED_FROM</code>\n<code>IN_MOVED_FROM</code>\n<code>IN_MOVED_TO</code>\n<code>IN_MOVED_TO</code>\n<code>IN_MOVE_SELF</code>\n<code>IN_MOVE_SELF</code>\n<code>IN_NONBLOCK</code>\n<code>IN_ONESHOT</code>\n<code>IN_ONLYDIR</code>\n<code>IN_OPEN</code>\n<code>IN_OPEN</code>\n<code>IN_Q_OVERFLOW</code>\n<code>IN*</code> for use with <code>inotify::Reader</code>.\n<code>IN_UNMOUNT</code>\n<code>IN*</code> for use with <code>inotify::add_watch</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\n<code>O_ACCMODE</code>\n<code>STATX_ALL</code>\n<code>MFD_ALLOW_SEALING</code>\n<code>O_APPEND</code>\n<code>STATX_ATIME</code>\n<code>*_OK</code> constants for use with <code>accessat</code>.\n<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.\n<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …\n<code>STATX_BASIC_STATS</code>\n<code>RESOLVE_BENEATH</code>\n<code>STATX_BLOCKS</code>\n<code>STATX_BTIME</code>\n<code>S_IFBLK</code>\n<code>RESOLVE_CACHED</code> (since Linux 5.12)\n<code>O_CLOEXEC</code>\n<code>MFD_CLOEXEC</code>\n<code>FALLOC_FL_COLLAPSE_RANGE</code>\n<code>O_CREAT</code>\n<code>STATX_CTIME</code>\n<code>S_IFCHR</code>\n<code>STATX_DIOALIGN</code> (since Linux 6.1)\n<code>O_DIRECT</code>\n<code>O_DIRECTORY</code>\n<code>O_DSYNC</code>.\n<code>dev_t</code>\n<code>S_IFDIR</code>\n<code>POSIX_FADV_DONTNEED</code>\n<code>AT_EACCESS</code>\n<code>AT_EMPTY_PATH</code>\n<code>RENAME_EXCHANGE</code>\n<code>O_EXCL</code>\n<code>MFD_EXEC</code> (since Linux 6.3)\n<code>X_OK</code>\n<code>F_OK</code>\n<code>O_FSYNC</code>.\n<code>F_SEAL_FUTURE_WRITE</code> (since Linux 5.1)\n<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.\n<code>S_IFIFO</code>\n<code>S_IF*</code> constants for use with <code>mknodat</code> and <code>Stat</code>’s <code>st_mode</code> …\n<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.\n<code>__fsword_t</code>\n<code>STATX_GID</code>\n<code>F_SEAL_GROW</code>.\n<code>MFD_HUGETLB</code> (since Linux 4.14)\n<code>MFD_HUGE_16GB</code>\n<code>MFD_HUGE_16MB</code>\n<code>MFD_HUGE_1GB</code>\n<code>MFD_HUGE_1MB</code>\n<code>MFD_HUGE_256MB</code>\n<code>MFD_HUGE_2GB</code>\n<code>MFD_HUGE_2MB</code>\n<code>MFD_HUGE_32MB</code>\n<code>MFD_HUGE_512KB</code>\n<code>MFD_HUGE_512MB</code>\n<code>MFD_HUGE_64KB</code>\n<code>MFD_HUGE_8MB</code>\n<code>STATX_INO</code>\n<code>FALLOC_FL_INSERT_RANGE</code>\n<code>RESOLVE_IN_ROOT</code>\n<code>FALLOC_FL_KEEP_SIZE</code>\n<code>O_LARGEFILE</code>\n<code>LOCK_EX</code>\n<code>LOCK_SH</code>\n<code>ST_MANDLOCK</code>\n<code>STATX_MNT_ID</code> (since Linux 5.8)\n<code>STATX_MODE</code>\n<code>STATX_MTIME</code>\n<code>MFD_*</code> constants for use with <code>memfd_create</code>.\n<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.\n<code>STATX_NLINK</code>\n<code>O_NOATIME</code>\n<code>ST_NOATIME</code>\n<code>O_NOCTTY</code>\n<code>ST_NODEV</code>\n<code>ST_NODIRATIME</code>\n<code>ST_NOEXEC</code>\n<code>MFD_NOEXEC_SEAL</code> (since Linux 6.3)\n<code>O_NOFOLLOW</code>\n<code>O_NONBLOCK</code>\n<code>RENAME_NOREPLACE</code>\n<code>ST_NOSUID</code>\n<code>AT_NO_AUTOMOUNT</code>\n<code>FALLOC_FL_NO_HIDE_STALE</code>\n<code>RESOLVE_NO_MAGICLINKS</code>\n<code>RESOLVE_NO_SYMLINKS</code>\n<code>RESOLVE_NO_XDEV</code>\n<code>POSIX_FADV_NOREUSE</code>\n<code>LOCK_EX | LOCK_NB</code>\n<code>LOCK_SH | LOCK_NB</code>\n<code>LOCK_UN | LOCK_NB</code>\n<code>POSIX_FADV_NORMAL</code>\n<code>O_*</code> constants for use with <code>openat</code>.\n<code>O_PATH</code>\n<code>FALLOC_FL_PUNCH_HOLE</code>\n<code>O_RDONLY</code>\n<code>ST_RDONLY</code>\n<code>O_RDWR</code>\n<code>R_OK</code>\n<code>ST_RELATIME</code>\n<code>AT_REMOVEDIR</code>\n<code>S_IRGRP</code>\n<code>S_IROTH</code>\n<code>O_RSYNC</code>.\n<code>S_IRUSR</code>\nSimilar to <code>ACCMODE</code>, but just includes the read/write …\n<code>S_IRWXG</code>\n<code>S_IRWXO</code>\n<code>S_IRWXU</code>\n<code>POSIX_FADV_RANDOM</code>\n<code>mode_t</code>\n<code>S_IFREG</code>\n<code>RENAME_*</code> constants for use with <code>renameat_with</code>.\n<code>RESOLVE_*</code> constants for use with <code>openat2</code>.\n<code>F_SEAL_SEAL</code>.\n<code>S_ISGID</code>\n<code>F_SEAL_SHRINK</code>.\n<code>STATX_SIZE</code>\n<code>AT_STATX_DONT_SYNC</code>\n<code>AT_STATX_FORCE_SYNC</code>\n<code>AT_STATX_SYNC_AS_STAT</code>\n<code>S_ISUID</code>\n<code>S_ISVTX</code>\n<code>AT_SYMLINK_FOLLOW</code>\n<code>AT_SYMLINK_NOFOLLOW</code>\n<code>O_SYNC</code>\n<code>ST_SYNCHRONOUS</code>\n<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …\n<code>POSIX_FADV_SEQUENTIAL</code>\n<code>S_IFSOCK</code>\n<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.\n<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.\n<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.\n<code>ST_*</code> constants for use with <code>StatVfs</code>.\n<code>struct statx</code> for use with <code>statx</code>.\n<code>STATX_*</code> constants for use with <code>statx</code>.\n<code>struct statx_timestamp</code> for use with <code>Statx</code>.\n<code>S_IFLNK</code>\n<code>O_TMPFILE</code>\n<code>O_TRUNC</code>\n<code>STATX_TYPE</code>\n<code>STATX_UID</code>\n<code>FALLOC_FL_UNSHARE_RANGE</code>\nAn unknown filesystem object.\n<code>LOCK_UN</code>\n<code>S_IWGRP</code>\n<code>RENAME_WHITEOUT</code>\n<code>S_IWOTH</code>\n<code>F_SEAL_WRITE</code>.\n<code>W_OK</code>\n<code>O_WRONLY</code>\n<code>S_IWUSR</code>\n<code>POSIX_FADV_WILLNEED</code>\n<code>S_IXGRP</code>\n<code>S_IXOTH</code>\n<code>S_IXUSR</code>\n<code>FALLOC_FL_ZERO_RANGE</code>\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nConstruct an <code>st_mode</code> value from a <code>Mode</code>.\nConstruct an <code>st_mode</code> value from a <code>FileType</code>.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nSupport conversions from <code>Mode</code> to raw mode values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSupport conversions from raw mode values to <code>Mode</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConstruct a <code>FileType</code> from the <code>d_type</code> field of a <code>c::dirent</code>.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nConstruct a <code>Mode</code> from the mode bits of the <code>st_mode</code> field …\nConstruct a <code>FileType</code> from the <code>S_IFMT</code> bits of the <code>st_mode</code> …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe <code>rustix</code> <code>Errno</code> type.\nlinux_raw syscalls supporting <code>rustix::io</code>.\n<code>EACCES</code>\n<code>EADDRINUSE</code>\n<code>EADDRNOTAVAIL</code>\n<code>EADV</code>\n<code>EAFNOSUPPORT</code>\n<code>EAGAIN</code>\n<code>EALREADY</code>\n<code>EBADE</code>\n<code>EBADF</code>\n<code>EBADFD</code>\n<code>EBADMSG</code>\n<code>EBADR</code>\n<code>EBADRQC</code>\n<code>EBADSLT</code>\n<code>EBFONT</code>\n<code>EBUSY</code>\n<code>ECANCELED</code>\n<code>ECHILD</code>\n<code>ECHRNG</code>\n<code>ECOMM</code>\n<code>ECONNABORTED</code>\n<code>ECONNREFUSED</code>\n<code>ECONNRESET</code>\n<code>EDEADLK</code>\n<code>EDEADLOCK</code>\n<code>EDESTADDRREQ</code>\n<code>EDOM</code>\n<code>EDOTDOT</code>\n<code>EDQUOT</code>\n<code>EEXIST</code>\n<code>errno</code>—An error code.\n<code>EFAULT</code>\n<code>EFBIG</code>\n<code>EHOSTDOWN</code>\n<code>EHOSTUNREACH</code>\n<code>EHWPOISON</code>\n<code>EIDRM</code>\n<code>EILSEQ</code>\n<code>EINPROGRESS</code>\n<code>EINTR</code>.\n<code>EINVAL</code>\n<code>EIO</code>\n<code>EISCONN</code>\n<code>EISDIR</code>\n<code>EISNAM</code>\n<code>EKEYEXPIRED</code>\n<code>EKEYREJECTED</code>\n<code>EKEYREVOKED</code>\n<code>EL2HLT</code>\n<code>EL2NSYNC</code>\n<code>EL3HLT</code>\n<code>EL3RST</code>\n<code>ELIBACC</code>\n<code>ELIBBAD</code>\n<code>ELIBEXEC</code>\n<code>ELIBMAX</code>\n<code>ELIBSCN</code>\n<code>ELNRNG</code>\n<code>ELOOP</code>\n<code>EMEDIUMTYPE</code>\n<code>EMFILE</code>\n<code>EMLINK</code>\n<code>EMSGSIZE</code>\n<code>EMULTIHOP</code>\n<code>ENAMETOOLONG</code>\n<code>ENAVAIL</code>\n<code>ENETDOWN</code>\n<code>ENETRESET</code>\n<code>ENETUNREACH</code>\n<code>ENFILE</code>\n<code>ENOANO</code>\n<code>ENOBUFS</code>\n<code>ENOCSI</code>\n<code>ENODATA</code>\n<code>ENODEV</code>\n<code>ENOENT</code>\n<code>ENOEXEC</code>\n<code>ENOKEY</code>\n<code>ENOLCK</code>\n<code>ENOLINK</code>\n<code>ENOMEDIUM</code>\n<code>ENOMEM</code>\n<code>ENOMSG</code>\n<code>ENONET</code>\n<code>ENOPKG</code>\n<code>ENOPROTOOPT</code>\n<code>ENOSPC</code>\n<code>ENOSR</code>\n<code>ENOSTR</code>\n<code>ENOSYS</code>\n<code>ENOTBLK</code>\n<code>ENOTCONN</code>\n<code>ENOTDIR</code>\n<code>ENOTEMPTY</code>\n<code>ENOTNAM</code>\n<code>ENOTRECOVERABLE</code>\n<code>ENOTSOCK</code>\n<code>ENOTSUP</code>\n<code>ENOTTY</code>\n<code>ENOTUNIQ</code>\n<code>ENXIO</code>\n<code>EOPNOTSUPP</code>\n<code>EOVERFLOW</code>\n<code>EOWNERDEAD</code>\n<code>EPERM</code>\n<code>EPFNOSUPPORT</code>\n<code>EPIPE</code>\n<code>EPROTO</code>\n<code>EPROTONOSUPPORT</code>\n<code>EPROTOTYPE</code>\n<code>ERANGE</code>\n<code>EREMCHG</code>\n<code>EREMOTE</code>\n<code>EREMOTEIO</code>\n<code>ERESTART</code>\n<code>ERFKILL</code>\n<code>EROFS</code>\n<code>ESHUTDOWN</code>\n<code>ESOCKTNOSUPPORT</code>\n<code>ESPIPE</code>\n<code>ESRCH</code>\n<code>ESRMNT</code>\n<code>ESTALE</code>\n<code>ESTRPIPE</code>\n<code>ETIME</code>\n<code>ETIMEDOUT</code>\n<code>E2BIG</code>\n<code>ETOOMANYREFS</code>\n<code>ETXTBSY</code>\n<code>EUCLEAN</code>\n<code>EUNATCH</code>\n<code>EUSERS</code>\n<code>EWOULDBLOCK</code>\n<code>EXDEV</code>\n<code>EXFULL</code>\nReturns the argument unchanged.\nConvert from a C <code>errno</code> value (which is positive) to an …\nExtract an <code>Errno</code> value from a <code>std::io::Error</code>.\nConstruct an <code>Errno</code> from a raw OS error number.\nCalls <code>U::from(self)</code>.\nShorthand for <code>std::io::Error::from(self).kind()</code>.\nExtract the raw OS error number from this error.\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which does …\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which …\nCheck for an error from the result of a syscall which …\n<code>RWF_APPEND</code> (since Linux 4.16)\n<code>FD_CLOEXEC</code>\n<code>O_CLOEXEC</code>\n<code>RWF_DSYNC</code> (since Linux 4.7)\n<code>O_*</code> constants for use with <code>dup2</code>.\n<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.\n<code>RWF_HIPRI</code> (since Linux 4.6)\n<code>RWF_NOWAIT</code> (since Linux 4.14)\n<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.\n<code>RWF_SYNC</code> (since Linux 4.7)\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nlinux_raw syscalls supporting <code>rustix::mount</code>.\n<code>MS_BIND</code>\n<code>MNT_DETACH</code>\n<code>MS_DIRSYNC</code>\n<code>MNT_EXPIRE</code>\n<code>MNT_FORCE</code>\n<code>MS_LAZYTIME</code>\n<code>MS_*</code> constants for use with <code>mount</code>.\n<code>MS_*</code> constants for use with <code>mount_change</code>.\n<code>MS_NOATIME</code>\n<code>MS_NODEV</code>\n<code>MS_NODIRATIME</code>\n<code>MS_NOEXEC</code>\n<code>UMOUNT_NOFOLLOW</code>\n<code>MS_NOSUID</code>\n<code>MS_NOSYMFOLLOW</code>\n<code>MS_MANDLOCK</code>\n<code>MS_PRIVATE</code>\n<code>MS_RDONLY</code>\n<code>MS_REC</code>\n<code>MS_REC</code>\n<code>MS_RELATIME</code>\n<code>MS_SHARED</code>\n<code>MS_SILENT</code>\n<code>MS_SILENT</code>\n<code>MS_SLAVE</code>\n<code>MS_STRICTATIME</code>\n<code>MS_SYNCHRONOUS</code>\n<code>MS_UNBINDABLE</code>\n<code>MNT_*</code> constants for use with <code>unmount</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSocket address utilities.\nUtilities for dealing with message headers.\nWrappers for netdevice ioctls.\nThe BSD sockets API requires us to read the <code>ss_family</code> …\nlinux_raw syscalls supporting <code>rustix::net::sockopt</code>.\nlinux_raw syscalls supporting <code>rustix::net</code>.\nThe BSD sockets API requires us to read the <code>ss_family</code> …\n<code>struct sockaddr_storage</code> as a raw struct.\n<code>struct sockaddr_un</code>\nFor an abstract address, return the identifier.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new Unix-domain address from a filesystem path.\nConstruct a new abstract Unix-domain address from a byte …\nReturn the offset of the <code>sun_path</code> field of <code>sockaddr_un</code>.\nFor a filesystem path address, return the path.\nCreate a message header intended to send without an …\nCreate a message header intended to receive a datagram.\nCreate a message header intended to send with a Unix …\nCreate a message header intended to send with an IPv4 …\nCreate a message header intended to send with an IPv6 …\nCreate a message header intended to send with an XDP …\nCreate a zero-initialized message header struct value.\nReturns the argument unchanged.\nSet the <code>ss_family</code> field of a socket address to <code>AF_UNSPEC</code>, …\nCalls <code>U::from(self)</code>.\nRead an optional socket address returned from the OS.\nRead a socket address encoded in a platform-specific …\nRead a socket address returned from the OS.\nRead the <code>ss_family</code> field from a socket address returned …\n<code>MSG_CMSG_CLOEXEC</code>\n<code>MSG_CONFIRM</code>\n<code>MSG_DONTROUTE</code>\n<code>MSG_DONTWAIT</code>\n<code>MSG_DONTWAIT</code>\n<code>MSG_EOR</code>\nDeprecated alias for <code>EOR</code>.\n<code>MSG_ERRQUEUE</code>\n<code>MSG_MORE</code>\n<code>MSG_NOSIGNAL</code>\n<code>MSG_OOB</code>\n<code>MSG_OOB</code>\n<code>MSG_PEEK</code>\n<code>MSG_*</code> flags for use with <code>recv</code>, <code>recvfrom</code>, and related …\n<code>MSG_*</code> flags for use with <code>send</code>, <code>sendto</code>, and related …\n<code>MSG_TRUNC</code>\n<code>MSG_WAITALL</code>\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nLike <code>duration_from_linux</code> but uses Linux’s old 32-bit …\nConvert a <code>__linux_sock_timeval</code> to a Rust <code>Option&lt;Duration&gt;</code>.\nLike <code>duration_to_linux</code> but uses Linux’s old 32-bit …\nConvert a Rust <code>Option&lt;Duration&gt;</code> to a <code>__kernel_sock_timeval</code>.\nConvert to seconds, rounding up if necessary.\nSame as <code>get_socket_timeout</code> but uses <code>__kernel_old_timeval</code> …\nSame as <code>set_socket_timeout</code> but uses <code>__kernel_old_timeval</code> …\nLinux auxv support, using libc.\n<code>AT_SYSINFO_EHDR</code> isn’t present on all platforms in all …\nlinux_raw syscalls for PIDs\nlinux_raw syscalls supporting <code>rustix::pipe</code>.\n<code>O_CLOEXEC</code>\n<code>O_DIRECT</code>\n<code>SPLICE_F_GIFT</code>\nA buffer type for use with <code>vmsplice</code>.\n<code>SPLICE_F_MORE</code>\n<code>SPLICE_F_MOVE</code>\n<code>O_NONBLOCK</code>\n<code>SPLICE_F_NONBLOCK</code>\n<code>O_*</code> constants for use with <code>pipe_with</code>.\n<code>SPLICE_F_*</code> constants for use with <code>splice</code>, <code>vmsplice</code>, and <code>tee</code>…\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new <code>IoSlice</code> wrapping a mutable byte slice.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nlinux_raw syscalls supporting modules that use <code>prctl</code>.\nRust implementation of the <code>CPU_*</code> macro API.\nlinux_raw syscalls supporting <code>rustix::process</code>.\nConvert a <code>siginfo_t</code> to a <code>WaitidStatus</code>.\nConvert a C <code>rlimit64</code> to a Rust <code>Rlimit</code>.\nConvert a Rust <code>Rlimit</code> to a C <code>rlimit64</code>.\n<code>RLIMIT_AS</code>\n<code>RLIMIT_CORE</code>\n<code>RLIMIT_CPU</code>\n<code>RLIMIT_DATA</code>\n<code>RLIMIT_FSIZE</code>\n<code>MEMBARRIER_CMD_GLOBAL</code>\n<code>MEMBARRIER_CMD_GLOBAL_EXPEDITED</code>\n<code>RLIMIT_LOCKS</code>\nA command for use with <code>membarrier</code> and <code>membarrier_cpu</code>.\n<code>RLIMIT_MEMLOCK</code>\n<code>RLIMIT_MSGQUEUE</code>\n<code>RLIMIT_NICE</code>\n<code>RLIMIT_NOFILE</code>\n<code>RLIMIT_NPROC</code>\n<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED</code>\n<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ</code> (since Linux 5.10)\n<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE</code>\nA CPU identifier as a raw integer.\n<code>MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED</code>\n<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED</code>\n<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ</code> (since …\n<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE</code>\nA resource value for use with <code>getrlimit</code>, <code>setrlimit</code>, and …\n<code>RLIMIT_RSS</code>\n<code>RLIMIT_RTPRIO</code>\n<code>RLIMIT_RTTIME</code>\n<code>RLIMIT_SIGPENDING</code>\n<code>RLIMIT_STACK</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSyscall arguments use register-sized types. We use a …\nTo preserve provenance, syscall arguments and return …\nSyscall return values use register-sized types. We use a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>raw</code> from a value produced by a syscall machine …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEncode a system call number (a <code>__NR_*</code> constant) as a …\nSeal our various traits using the technique documented here…\nEncode a system call argument as an <code>ArgReg</code>.\nConvert <code>self</code> to a <code>usize</code> ready to be passed to a syscall …\n<code>O_CREAT</code>\n<code>O_EXCL</code>\n<code>O_RDONLY</code>\n<code>O_RDWR</code>\n<code>O_*</code> constants for use with <code>shm::open</code>.\n<code>O_TRUNC</code>\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nlinux_raw syscalls supporting <code>rustix::system</code>.\n<code>sysinfo</code>\nlinux_raw syscalls supporting <code>rustix::thread</code>.\n<code>FUTEX_CLOCK_REALTIME</code>\n<code>FUTEX_CMP_REQUEUE</code>\n<code>FUTEX_CMP_REQUEUE</code>\n<code>FUTEX_CMP_REQUEUE_PI</code>\n<code>FUTEX_FD</code>\n<code>FUTEX_FD</code>\n<code>FUTEX_*</code> flags for use with the functions in <code>futex</code>.\n<code>FUTEX_*</code> operations for use with the <code>futex</code> function.\n<code>FUTEX_LOCK_PI</code>\n<code>FUTEX_LOCK_PI</code>\n<code>FUTEX_LOCK_PI2</code>\n<code>FUTEX_OWNER_DIED</code>\n<code>FUTEX_*</code> operations for use with the futex syscall wrappers.\n<code>FUTEX_PRIVATE_FLAG</code>\n<code>FUTEX_REQUEUE</code>\n<code>FUTEX_REQUEUE</code>\n<code>FUTEX_TRYLOCK_PI</code>\n<code>FUTEX_TRYLOCK_PI</code>\n<code>FUTEX_UNLOCK_PI</code>\n<code>FUTEX_UNLOCK_PI</code>\n<code>FUTEX_WAITERS</code>\n<code>FUTEX_WAIT</code>\n<code>FUTEX_WAIT</code>\n<code>FUTEX_WAIT_BITSET</code>\n<code>FUTEX_WAIT_BITSET</code>\n<code>FUTEX_WAIT_REQUEUE_PI</code>\n<code>FUTEX_WAKE</code>\n<code>FUTEX_WAKE</code>\n<code>FUTEX_WAKE_BITSET</code>\n<code>FUTEX_WAKE_OP</code>\n<code>FUTEX_WAKE_OP</code>\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSafety\nSafety\nlinux_raw syscalls supporting <code>rustix::time</code>.\n<code>TFD_TIMER_ABSTIME</code>\n<code>CLOCK_BOOTTIME</code>—Like <code>Monotonic</code>, but advances while …\n<code>CLOCK_BOOTTIME_ALARM</code>—Like <code>Boottime</code>, but wakes a …\n<code>TFD_TIMER_CANCEL_ON_SET</code>\n<code>TFD_CLOEXEC</code>\n<code>struct itimerspec</code> for use with <code>timerfd_gettime</code> and …\n<code>CLOCK_MONOTONIC</code>—A clock that tells an abstract time.\n<code>TFD_NONBLOCK</code>\n<code>CLOCK_REALTIME</code>—A clock that tells the “real” time.\n<code>CLOCK_REALTIME_ALARM</code>—Like <code>Realtime</code>, but wakes a …\n<code>CLOCK_*</code> constants for use with <code>timerfd_create</code>.\n<code>TFD_*</code> flags for use with <code>timerfd_create</code>.\n<code>TFD_TIMER_*</code> flags for use with <code>timerfd_settime</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nlinux_raw syscalls for UIDs and GIDs\nTranslate an ELF-address-space address into a usable …\nAdd the given address to the vDSO base address.\nReturns the argument unchanged.\nCreate a <code>Vdso</code> value by parsing the vDSO at the <code>sysinfo_ehdr</code>…\nCalls <code>U::from(self)</code>.\nCheck the version for a symbol.\nParse the vDSO.\nLook up a symbol in the vDSO.\n<code>AtomicPtr</code> can’t hold a <code>fn</code> pointer, so we use a <code>*</code> pointer …\nReturns the argument unchanged.\nInitialize <code>CLOCK_GETTIME</code> and return its value.\nInitialize <code>GETCPU</code> and return its value.\nCalls <code>U::from(self)</code>.\nReturn a <code>bitcast</code> of the value of <code>$x.bits()</code>, where <code>$x</code> is a …\nSplit an uninitialized byte slice into initialized and …\n<code>CLOCK_BOOTTIME</code>\n<code>CLOCK_BOOTTIME</code>\n<code>CLOCK_BOOTTIME_ALARM</code>\n<code>CLOCK_BOOTTIME_ALARM</code>\n<code>CLOCK_*</code> constants for use with <code>clock_gettime</code>.\nLinux dynamic clocks.\n<code>CLOCK_*</code> constants for use with <code>clock_gettime_dynamic</code>.\n<code>ClockId</code> values that are always supported at runtime.\n<code>CLOCK_MONOTONIC</code>\n<code>CLOCK_MONOTONIC_COARSE</code>\n<code>CLOCK_MONOTONIC_RAW</code>\n<code>CLOCK_PROCESS_CPUTIME_ID</code>\n<code>CLOCK_REALTIME</code>\n<code>CLOCK_REALTIME_ALARM</code>\n<code>CLOCK_REALTIME_ALARM</code>\n<code>CLOCK_REALTIME_COARSE</code>\n<code>CLOCK_TAI</code>, available on Linux ≥ 3.10\n<code>CLOCK_THREAD_CPUTIME_ID</code>\n<code>EFD_*</code> flags for use with <code>eventfd</code>.\n<code>struct pollfd</code>—File descriptor and flags for use with <code>poll</code>…\n<code>POLL*</code> flags for use with <code>poll</code>.\nLinux <code>epoll</code> support.\n<code>eventfd(initval, flags)</code>—Creates a file descriptor for …\n<code>pause()</code>\n<code>poll(self.fds, timeout)</code>\n<code>EPOLL_*</code> for use with <code>epoll::create</code>.\nA record of an event that occurred.\nData associated with an <code>epoll::Event</code>. This can either be a …\n<code>EPOLL*</code> for use with <code>epoll::add</code>.\nA vector of <code>epoll::Event</code>s, plus context for interpreting …\nAn iterator over the <code>epoll::Event</code>s in an <code>epoll::EventVec</code>.\n<code>epoll_ctl(self, EPOLL_CTL_ADD, data, event)</code>—Adds an …\nA 64-bit integer value.\nReturns the current <code>epoll::Event</code> capacity of this …\nClears all the <code>epoll::Events</code> out of this <code>epoll::EventVec</code>.\n<code>epoll_create1(flags)</code>—Creates a new epoll object.\nUser data.\n<code>epoll_ctl(self, EPOLL_CTL_DEL, target, NULL)</code>—Removes an …\nWhich specific event(s) occurred.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an <code>epoll::EventVec</code> from raw pointer, length, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTests whether this <code>epoll::EventVec</code> is logically empty.\nReturns an iterator over the <code>epoll::Event</code>s in this …\nUse <code>Copied</code> to copy the struct, since <code>Event</code> is <code>packed</code> on …\nReturns the number of <code>epoll::Event</code>s logically contained in …\n<code>epoll_ctl(self, EPOLL_CTL_MOD, target, event)</code>—Modifies …\nConstruct a new value containing a <code>*mut c_void</code>.\nConstruct a new value containing a <code>u64</code>.\nReturn the value as a <code>*mut c_void</code>.\nReserves enough memory for at least <code>additional</code> more …\nReserves enough memory for exactly <code>additional</code> more …\nShrinks the capacity of this <code>epoll::EventVec</code> as much as …\nA <code>*mut c_void</code> which preserves pointer provenance, extended …\nReturn the value as a <code>u64</code>.\n<code>epoll_wait(self, events, timeout)</code>—Waits for registered …\nConstructs an <code>epoll::EventVec</code> with memory for <code>capacity</code> …\n<code>eventfd(initval, flags)</code>—Creates a file descriptor for …\n<code>pause()</code>\n<code>poll(self.fds, timeout)</code>\nA trait to borrow the file descriptor from an underlying …\nA trait to extract the raw file descriptor from an …\nA borrowed file descriptor.\nA trait to express the ability to construct an object from …\nA trait to express the ability to consume an object and …\nAn owned file descriptor.\nRaw file descriptors.\nBorrows the file descriptor.\nExtracts the raw file descriptor.\nReturn a <code>BorrowedFd</code> holding the given raw file descriptor.\nTakes ownership of a <code>ChildStderr</code>’s file descriptor.\nTakes ownership of a <code>UnixDatagram</code>’s socket file …\nTakes ownership of a <code>UnixStream</code>’s socket file descriptor.\nTakes ownership of a <code>File</code>’s underlying file descriptor.\nReturns the argument unchanged.\nTakes ownership of a <code>TcpListener</code>’s socket file …\nTakes ownership of a <code>ChildStdin</code>’s file descriptor.\nTakes ownership of a <code>ChildStdout</code>’s file descriptor.\nTakes ownership of a <code>UnixListener</code>’s socket file …\nTakes ownership of a <code>TcpStream</code>’s socket file descriptor.\nTakes ownership of a <code>UdpSocket</code>’s file descriptor.\nReturns the argument unchanged.\nConstructs a new instance of <code>Self</code> from the given raw file …\nConstructs a new instance of <code>Self</code> from the given raw file …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this object, returning the raw underlying file …\nCreates a new <code>OwnedFd</code> instance that shares the same …\nCreates a new <code>OwnedFd</code> instance that shares the same …\nRepresentation of a borrowed C string.\nA type representing an owned, C-compatible, nul-terminated …\nAn error indicating that a nul byte was not in the …\nAn error indicating that an interior nul byte was found.\nReturns the contents of this <code>CString</code> as a slice of bytes.\nEquivalent to <code>CString::as_bytes()</code> except that the returned …\nExtracts a <code>CStr</code> slice containing the entire string.\nReturns the inner pointer to this C string.\nIterates over the bytes in this C string.\nEquivalent to C’s <code>char</code> type.\nReturns the length of <code>self</code>. Like C’s <code>strlen</code>, this does …\nCreates an empty <code>CString</code>.\nConverts a &amp;CStr into a <code>CString</code> by copying the contents …\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a C string wrapper from a byte slice with any …\nCreates a C string wrapper from a byte slice with exactly …\nUnsafely creates a C string wrapper from a byte slice.\nWraps a raw C string with a safe C string wrapper.\nRetakes ownership of a <code>CString</code> that was transferred to C …\nCreates a C-compatible string by consuming a byte vector, …\nAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.\nConverts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>CString</code> into a boxed <code>CStr</code>.\nConsumes the <code>CString</code> and returns the underlying byte …\nEquivalent to <code>CString::into_bytes()</code> except that the …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConsumes the <code>CString</code> and transfers ownership of the string …\nConverts the <code>CString</code> into a <code>String</code> if it contains valid …\nConsumes this error, returning the underlying vector of …\nReturns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.\nCreates a new C-compatible string from a container of …\nReturns the position of the nul byte in the slice that …\nConverts this C string to a byte slice.\nConverts this C string to a byte slice containing the …\nYields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.\nConverts a <code>CStr</code> into a Cow&lt;str&gt;.\n<code>*_OK</code> constants for use with <code>accessat</code>.\n<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.\n<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …\n<code>S_IFBLK</code>\n<code>AT_FDCWD</code>—A handle representing the current working …\n<code>S_IFCHR</code>\nSets the offset to the current position plus the specified …\nSets the offset to the current position plus the specified …\n<code>dev_t</code>\n<code>DIR*</code>\n<code>struct dirent</code>\nRe-export types common to POSIX-ish platforms. …\n<code>S_IFDIR</code>\n<code>POSIX_FADV_DONTNEED</code>\nSets the offset to the size of this object plus the …\n<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.\n<code>S_IFIFO</code>\nRe-export types common to POSIX-ish platforms. …\n<code>S_IF*</code> constants for use with <code>mknodat</code> and <code>Stat</code>’s <code>st_mode</code> …\nRe-export types common to POSIX-ish platforms. …\n<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.\n<code>__fsword_t</code>\n<code>gid_t</code>—A Unix group ID.\nSets the offset to the current position plus the specified …\n<code>FS_*</code> constants for use with <code>ioctl_getflags</code>.\n<code>LOCK_EX</code>\n<code>LOCK_SH</code>\n<code>MFD_*</code> constants for use with <code>memfd_create</code>.\nRe-export types common to POSIX-ish platforms. …\n<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.\nThe filesystem magic number for NFS.\n<code>POSIX_FADV_NOREUSE</code>\n<code>LOCK_EX | LOCK_NB</code>\n<code>LOCK_SH | LOCK_NB</code>\n<code>LOCK_UN | LOCK_NB</code>\n<code>POSIX_FADV_NORMAL</code>\nA type for the <code>tv_sec</code> field of <code>Timespec</code>.\n<code>O_*</code> constants for use with <code>openat</code>.\nRe-export types common to POSIX-ish platforms. …\nThe filesystem magic number for procfs.\nA <code>Uid</code> corresponding to the root user (uid 0).\nA <code>Gid</code> corresponding to the root group (gid 0).\n<code>POSIX_FADV_RANDOM</code>\nA directory iterator implemented with getdents.\nA raw directory entry, similar to <code>std::fs::DirEntry</code>.\n<code>mode_t</code>\n<code>S_IFREG</code>\n<code>RENAME_*</code> constants for use with <code>renameat_with</code>.\n<code>RESOLVE_*</code> constants for use with <code>openat2</code>.\n<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …\nA type for the <code>tv_sec</code> field of <code>Timespec</code>.\nEnumeration of possible methods to seek within an I/O …\n<code>POSIX_FADV_SEQUENTIAL</code>\n<code>S_IFSOCK</code>\nSets the offset to the provided number of bytes.\n<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.\nExtension trait for accessing timestamp fields of <code>Stat</code>.\n<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.\n<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.\n<code>ST_*</code> constants for use with <code>StatVfs</code>.\n<code>struct statx</code> for use with <code>statx</code>.\n<code>STATX_*</code> constants for use with <code>statx</code>.\n<code>struct statx_timestamp</code> for use with <code>Statx</code>.\n<code>S_IFLNK</code>\n<code>struct timespec</code>\nTimestamps used by <code>utimensat</code> and <code>futimens</code>.\n<code>UTIME_NOW</code> for use with <code>utimensat</code>.\n<code>UTIME_OMIT</code> for use with <code>utimensat</code>.\n<code>uid_t</code>—A Unix user ID.\nAn unknown filesystem object.\n<code>LOCK_UN</code>\n<code>POSIX_FADV_WILLNEED</code>\n<code>XATTR_*</code> constants for use with <code>setxattr</code>, and other …\nPOSIX-style filesystem functions which operate on bare …\n<code>access(path, access)</code>—Tests permissions for a file or …\n<code>faccessat(dirfd, path, access, flags)</code>—Tests permissions …\nHave we seen any errors in this iteration?\nConverts a <code>Uid</code> into a <code>RawUid</code>.\nConverts a <code>Gid</code> into a <code>RawGid</code>.\nPOSIX-style <code>*at</code> functions.\nReturn the value of the <code>st_atime</code> field, casted to the …\nReturns the last access time of the file, in seconds since …\nReturns the last access time of the file, in nanoseconds …\nReturns the block size for filesystem I/O.\nReturns the number of blocks allocated to the file, in …\nThe buffer for <code>linux_dirent64</code> entries.\n<code>chmod(path, mode)</code>—Sets file or directory permissions.\n<code>fchmodat(dirfd, path, mode, flags)</code>—Sets file or …\n<code>chown(path, owner, group)</code>—Sets open file or directory …\n<code>fchownat(dirfd, path, owner, group, flags)</code>—Sets file or …\nFilesystem API constants, translated into <code>bitflags</code> …\n<code>copy_file_range(fd_in, off_in, fd_out, off_out, len, 0)</code>…\nReturn the value of the <code>st_ctime</code> field, casted to the …\nReturns the last status change time of the file, in …\nReturns the last status change time of the file, in …\nPass custom flags to the <code>flags</code> argument of <code>open</code>.\nThe <code>cwd</code> function, representing the current working …\nReturn the value of <code>CWD</code>.\nReturns the ID of the device containing the file.\n<code>Dir</code> and <code>DirEntry</code>.\n<code>ioctl(fd, EXT4_IOC_RESIZE_FS, blocks)</code>—Resize ext4 …\n<code>posix_fadvise(fd, offset, len, advice)</code>—Declares an …\n<code>fallocate(fd, mode, offset, len)</code>—Adjusts file allocation.\n<code>fchmod(fd, mode)</code>—Sets open file or directory permissions.\n<code>fchown(fd, owner, group)</code>—Sets open file or directory …\nThe Unix <code>fcntl</code> function is effectively lots of different …\n<code>fcntl(fd, F_ADD_SEALS)</code>\n<code>fcntl(fd, F_GET_SEALS)</code>\n<code>fcntl(fd, F_GETFL)</code>—Returns a file descriptor’s access …\n<code>fcntl(fd, F_SETLK)</code>—Acquire or release an <code>fcntl</code>-style …\n<code>fcntl(fd, F_SETFL, flags)</code>—Sets a file descriptor’s …\nFunctions which operate on file descriptors.\nThe <code>OwnedFd</code> that we read directory entries from.\n<code>fdatasync(fd)</code>—Ensures that file data is written to the …\n<code>fgetxattr(fd, name, value.as_ptr(), value.len())</code>—Get …\n<code>flistxattr(fd, list.as_ptr(), list.len())</code>—List extended …\n<code>flock(fd, operation)</code>—Acquire or release an advisory lock …\n<code>fremovexattr(fd, name)</code>—Remove an extended filesystem …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RawUid</code> into a <code>Uid</code>.\nConverts a <code>RawGid</code> into a <code>Gid</code>.\n<code>fsetxattr(fd, name, value.as_ptr(), value.len(), flags)</code>…\n<code>fstat(fd)</code>—Queries metadata for an open file or directory.\n<code>fstatfs(fd)</code>—Queries filesystem statistics for an open …\n<code>fstatvfs(fd)</code>—Queries filesystem statistics for an open …\n<code>fsync(fd)</code>—Ensures that file data and metadata is written …\n<code>ftruncate(fd, length)</code>—Sets the length of a file.\n<code>futimens(fd, times)</code>—Sets timestamps for an open file or …\n<code>getxattr(path, name, value.as_ptr(), value.len())</code>—Get …\nReturns the group ID of the owner of this file.\nReturns the inode number.\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\ninotify support for working with inotify objects.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFilesystem-oriented <code>ioctl</code> functions.\n<code>ioctl(fd, BLKPBSZGET)</code>—Returns the physical block size of …\n<code>ioctl(fd, BLKSSZGET)</code>—Returns the logical block size of a …\n<code>ioctl(fd, FICLONE, src_fd)</code>—Share data between open files.\n<code>ioctl(fd, FS_IOC_GETFLAGS)</code>—Returns the inode flags …\n<code>ioctl(fd, FS_IOC_SETFLAGS)</code>—Modify the inode flags …\nReturns <code>true</code> if this file type is a block device.\nReturns <code>true</code> if this file type is a char device.\nReturns <code>true</code> if this file type is a fifo.\n<code>fcntl(fd, F_GETFL) &amp; O_ACCMODE</code>\nTest whether this uid represents the root user (uid 0).\nTest whether this gid represents the root group (gid 0).\nReturns <code>true</code> if this file type is a socket.\nThe timestamp of the last access to a filesystem object.\nThe timestamp of the last modification of a filesystem …\n<code>lgetxattr(path, name, value.as_ptr(), value.len())</code>—Get …\n<code>link(old_path, new_path)</code>—Creates a hard link.\n<code>linkat(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…\n<code>listxattr(path, list.as_ptr(), list.len())</code>—List extended …\n<code>llistxattr(path, list.as_ptr(), list.len())</code>—List …\n<code>lremovexattr(path, name)</code>—Remove an extended filesystem …\n<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…\n<code>lstat(path)</code>—Queries metadata for a file or directory, …\n<code>major(dev)</code>\n<code>makedev(maj, min)</code>\n<code>memfd_create(name, flags)</code>\n<code>minor(dev)</code>\n<code>mkdir(path, mode)</code>—Creates a directory.\n<code>mkdirat(fd, path, mode)</code>—Creates a directory.\n<code>mknodat(dirfd, path, mode, dev)</code>—Creates special or …\nSets the mode bits that a new file will be created with.\nReturns the rights applied to this file.\nLinux <code>mount</code>.\nReturn the value of the <code>st_mtime</code> field, casted to the …\nReturns the last modification time of the file, in seconds …\nReturns the last modification time of the file, in …\nReturns the number of hard links pointing to this file.\n<code>open(path, oflags, mode)</code>—Opens a file.\n<code>openat(dirfd, path, oflags, mode)</code>—Opens a file.\n…\nWhere we are in the buffer.\n<code>RawDir</code> and <code>RawDirEntry</code>.\nReturns the device ID of this file (if it is a special …\nReads a number of bytes starting from a given offset.\nReads the exact number of bytes required to fill <code>buf</code> from …\nLike <code>read_at</code>, except that it reads into a slice of buffers.\n<code>readlink(path)</code>—Reads the contents of a symlink.\n<code>readlinkat(fd, path)</code>—Reads the contents of a symlink.\n<code>readlinkat(fd, path)</code>—Reads the contents of a symlink, …\n<code>removexattr(path, name)</code>—Remove an extended filesystem …\n<code>rename(old_path, new_path)</code>—Renames a file or directory.\n<code>renameat(old_dirfd, old_path, new_dirfd, new_path)</code>…\n<code>renameat2(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…\nShould we rewind the stream on the next iteration?\n<code>rmdir(path)</code>—Removes a directory.\n<code>lseek(fd, offset, whence)</code>—Repositions a file descriptor …\nThe following is derived from Rust’s …\n<code>sendfile(out_fd, in_fd, offset, count)</code>\n<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…\nReturns the total size of this file in bytes.\n<code>stat(path)</code>—Queries metadata for a file or directory.\n<code>fstatat(dirfd, path, flags)</code>—Queries metadata for a file …\n<code>statfs</code>—Queries filesystem metadata.\n<code>statvfs</code>—Queries filesystem metadata, POSIX version.\nLinux <code>statx</code>.\n<code>statx(dirfd, path, flags, mask, statxbuf)</code>\n<code>symlink(old_path, new_path)</code>—Creates a symlink.\n<code>symlinkat(old_path, new_dirfd, new_path)</code>—Creates a …\n<code>sync</code>—Flush cached filesystem data for all filesystems.\n<code>syncfs(fd)</code>—Flush cached filesystem data.\n<code>lseek(fd, 0, SEEK_CUR)</code>—Returns the current position …\nReturns the user ID of the owner of this file.\n<code>unlink(path)</code>—Unlinks a file.\n<code>unlinkat(fd, path, flags)</code>—Unlinks a file or remove a …\n<code>utimensat(dirfd, path, times, flags)</code>—Sets file or …\nAttempts to write an entire buffer starting from a given …\nWrites a number of bytes starting from a given offset.\nLike <code>write_at</code>, except that it writes from a slice of …\n<code>access(path, access)</code>—Tests permissions for a file or …\n<code>chmod(path, mode)</code>—Sets file or directory permissions.\n<code>chown(path, owner, group)</code>—Sets open file or directory …\n<code>link(old_path, new_path)</code>—Creates a hard link.\n<code>lstat(path)</code>—Queries metadata for a file or directory, …\n<code>mkdir(path, mode)</code>—Creates a directory.\n<code>open(path, oflags, mode)</code>—Opens a file.\n<code>readlink(path)</code>—Reads the contents of a symlink.\n<code>rename(old_path, new_path)</code>—Renames a file or directory.\n<code>rmdir(path)</code>—Removes a directory.\n<code>stat(path)</code>—Queries metadata for a file or directory.\n<code>statfs</code>—Queries filesystem metadata.\n<code>statvfs</code>—Queries filesystem metadata, POSIX version.\n<code>symlink(old_path, new_path)</code>—Creates a symlink.\n<code>unlink(path)</code>—Unlinks a file.\n<code>UTIME_NOW</code> for use with <code>utimensat</code>.\n<code>UTIME_OMIT</code> for use with <code>utimensat</code>.\n<code>faccessat(dirfd, path, access, flags)</code>—Tests permissions …\n<code>fchmodat(dirfd, path, mode, flags)</code>—Sets file or …\n<code>fchownat(dirfd, path, owner, group, flags)</code>—Sets file or …\n<code>linkat(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…\n<code>mkdirat(fd, path, mode)</code>—Creates a directory.\n<code>mknodat(dirfd, path, mode, dev)</code>—Creates special or …\n<code>openat(dirfd, path, oflags, mode)</code>—Opens a file.\n<code>readlinkat(fd, path)</code>—Reads the contents of a symlink.\n<code>readlinkat(fd, path)</code>—Reads the contents of a symlink, …\n<code>renameat(old_dirfd, old_path, new_dirfd, new_path)</code>…\n<code>renameat2(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…\n<code>fstatat(dirfd, path, flags)</code>—Queries metadata for a file …\n<code>symlinkat(old_path, new_dirfd, new_path)</code>—Creates a …\n<code>unlinkat(fd, path, flags)</code>—Unlinks a file or remove a …\n<code>utimensat(dirfd, path, times, flags)</code>—Sets file or …\n<code>copy_file_range(fd_in, off_in, fd_out, off_out, len, 0)</code>…\n<code>AT_FDCWD</code>—A handle representing the current working …\nReturn the value of <code>CWD</code>.\n<code>posix_fadvise(fd, offset, len, advice)</code>—Declares an …\n<code>fcntl(fd, F_ADD_SEALS)</code>\n<code>fcntl(fd, F_GET_SEALS)</code>\n<code>fcntl(fd, F_GETFL)</code>—Returns a file descriptor’s access …\n<code>fcntl(fd, F_SETLK)</code>—Acquire or release an <code>fcntl</code>-style …\n<code>fcntl(fd, F_SETFL, flags)</code>—Sets a file descriptor’s …\nThe filesystem magic number for NFS.\nThe filesystem magic number for procfs.\nTimestamps used by <code>utimensat</code> and <code>futimens</code>.\n<code>fallocate(fd, mode, offset, len)</code>—Adjusts file allocation.\n<code>fchmod(fd, mode)</code>—Sets open file or directory permissions.\n<code>fchown(fd, owner, group)</code>—Sets open file or directory …\n<code>fdatasync(fd)</code>—Ensures that file data is written to the …\n<code>flock(fd, operation)</code>—Acquire or release an advisory lock …\nReturns the argument unchanged.\n<code>fstat(fd)</code>—Queries metadata for an open file or directory.\n<code>fstatfs(fd)</code>—Queries filesystem statistics for an open …\n<code>fstatvfs(fd)</code>—Queries filesystem statistics for an open …\n<code>fsync(fd)</code>—Ensures that file data and metadata is written …\n<code>ftruncate(fd, length)</code>—Sets the length of a file.\n<code>futimens(fd, times)</code>—Sets timestamps for an open file or …\nCalls <code>U::from(self)</code>.\n<code>fcntl(fd, F_GETFL) &amp; O_ACCMODE</code>\nThe timestamp of the last access to a filesystem object.\nThe timestamp of the last modification of a filesystem …\n<code>lseek(fd, offset, whence)</code>—Repositions a file descriptor …\n<code>syncfs(fd)</code>—Flush cached filesystem data.\n<code>lseek(fd, 0, SEEK_CUR)</code>—Returns the current position …\n<code>IN_*</code> for use with <code>inotify::init</code>.\nAn inotify event.\n<code>IN*</code> for use with <code>inotify::Reader</code>.\nAn inotify event iterator implemented with the read …\n<code>IN*</code> for use with <code>inotify::add_watch</code>.\n<code>inotify_add_watch(self, path, flags)</code>—Adds a watch to …\nReturns the unique cookie associating related events.")