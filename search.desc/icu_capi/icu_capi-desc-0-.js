searchState.loadedDescShard("icu_capi", 0, "This crate contains the source of truth for the Diplomat…\nAn ICU4X Bidi object, containing loaded bidi data\nAn object containing bidi information for a given string, …\nBidi information for a single processed paragraph\nThin wrapper around a vector that maps visual indices to …\nGet this as a slice/array of indices\nCreates a new <code>ICU4XBidi</code> from locale data.\nThe primary direction of this paragraph\nUse the data loaded in this object to process a string and …\nUse the data loaded in this object to process a string and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet element at <code>index</code>. Returns 0 when out of bounds (note …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this map is empty\nThe length of this map\nGet the BIDI level at a particular byte index in the full …\nGet the BIDI level at a particular byte index in this …\nCheck if a Level returned by level_at is an LTR level.\nCheck if a Level returned by level_at is an RTL level.\nGet a simple LTR Level value\nGet a basic RTL Level value\nGet the nth paragraph, returning <code>None</code> if out of bounds\nThe number of paragraphs contained here\nThe end index of this paragraph within the source text\nThe start index of this paragraph within the source text\nReorder a line based on display order. The ranges are …\nUtility function for producing reorderings given a list of …\nGiven a paragraph index <code>n</code> within the surrounding text, …\nThe number of bytes in this full text\nThe number of bytes in this paragraph\nThe kind of a Buddhist calendar\nThe kind of a Chinese calendar\nThe kind of a Coptic calendar\nThe kind of a Dangi calendar\nThe kind of an Ethiopian calendar, with Amete Mihret era\nThe kind of an Ethiopian calendar, with Amete Alem era\nThe kind of a Gregorian calendar\nThe kind of a Hebrew calendar\nThe various calendar types currently supported by …\nThe kind of a Indian calendar\nThe kind of a Islamic civil calendar\nThe kind of a Islamic observational calendar\nThe kind of a Islamic tabular calendar\nThe kind of a Islamic Umm al-Qura calendar\nThe kind of an Iso calendar\nThe kind of a Japanese calendar with modern eras\nThe kind of a Japanese calendar with modern and historic …\nThe kind of a Persian calendar\nThe kind of a Roc calendar\nObtain the string suitable for use in the -u-ca- extension …\nCreates a new <code>ICU4XCalendar</code> from the specified date and …\nCreates a new <code>ICU4XCalendar</code> from the specified date and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nObtain the calendar type given a BCP-47 -u-ca- extension …\nRead the calendar type off of the -u-ca- extension on a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the kind of this calendar\nAdds all simple case mappings and the full case folding …\nAdds all simple case mappings and the full case folding …\nFinds all characters and strings which may casemap to <code>s</code> as …\nConstruct a new ICU4XCaseMapper instance\nConstruct a new ICU4XCaseMapper instance\nConstruct a new <code>ICU4XTitlecaseMapper</code> instance\nCase-folds the characters in the given string\nCase-folds the characters in the given string using Turkic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the full lowercase mapping of the given string\nReturns the simple casefolding of the given character.\nReturns the simple casefolding of the given character in …\nReturns the simple lowercase mapping of the given …\nReturns the simple titlecase mapping of the given …\nReturns the simple uppercase mapping of the given …\nReturns the full titlecase mapping of the given string\nReturns the full titlecase mapping of the given string, …\nReturns the full uppercase mapping of the given string\nCompare two strings.\nCompare two strings.\nCompare two strings.\nCompare two strings.\nConstruct a new Collator instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe resolved options showing how the default options, the …\nAdd a single character to the set\nAdd an inclusive range of characters to the set\nDeprecated, use <code>add_inclusive_range</code>.\nAdd all elements that belong to the provided set to the set\nDeprecated, use <code>add_char</code>.\nBuild this into a set\nComplements this set\nComplement a single character to the set\nComplement an inclusive range of characters from the set\nComplement all elements that belong to the provided set …\nMake a new set builder containing nothing\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether this set is empty\nRemove a single character to the set\nRemove an inclusive range of characters from the set\nRemove all elements that belong to the provided set from …\nRemoves all elements from the set except a single character\nRemoves all elements from the set except an inclusive …\nRemoves all elements from the set except all elements in …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic data struct to be used by ICU4X\nConstruct a new DecimalSymbolsV1 data struct.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn ICU4X Date object capable of containing a date and time …\nAn ICU4X Date object capable of containing a ISO-8601 date\nReturns the <code>ICU4XCalendar</code> object backing this date\nCreates a new <code>ICU4XIsoDate</code> from the specified date and …\nCreates a new <code>ICU4XIsoDate</code> representing January 1, 1970.\nCreates a new <code>ICU4XDate</code> from the given codes, which are …\nCreates a new <code>ICU4XDate</code> representing the ISO date and time …\nReturns the 1-indexed day in the month for this date\nReturns the 1-indexed day in the month for this date\nReturns the day in the week for this day\nReturns the day in the week for this day\nReturns the 1-indexed day in the year for this date\nReturns the 1-indexed day in the year for this date\nReturns the number of days in the month represented by …\nReturns the number of days in the month represented by …\nReturns the number of days in the year represented by this …\nReturns the number of days in the year represented by this …\nReturns the era for this date,\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the year is a leap year for this date\nReturns 1-indexed number of the month of this date in its …\nReturns the month code for this date. Typically something …\nReturns the number of months in the year represented by …\nReturns the number of months in the year represented by …\nReturns 1-indexed number of the month of this date in its …\nConvert this date to one in a different calendar\nConvert this date to one in a different calendar\nConverts this date to ISO\nReturns the week number in this month, 1-indexed, based on …\nReturns the week number in this month, 1-indexed, based on …\nReturns the week number in this year, using week data\nReturns the week number in this year, using week data\nReturns the year number for this date\nReturns the year number in the current era for this date\nAn ICU4X DateTime object capable of containing a date and …\nAn ICU4X DateTime object capable of containing a ISO-8601 …\nReturns the <code>ICU4XCalendar</code> object backing this date\nCreates a new <code>ICU4XIsoDateTime</code> from an <code>ICU4XIsoDate</code> and …\nCreates a new <code>ICU4XIsoDateTime</code> from the specified date and …\nCreates a new <code>ICU4XDateTime</code> from the given codes, which …\nCreates a new <code>ICU4XDateTime</code> from an <code>ICU4XDate</code> and <code>ICU4XTime</code>…\nCreates a new <code>ICU4XDateTime</code> representing the ISO date and …\nConstruct from the minutes since the local unix epoch for …\nGets the date contained in this object\nGets a copy of the date contained in this object\nReturns the 1-indexed day in the month for this date\nReturns the 1-indexed day in the month for this date\nReturns the day in the week for this day\nReturns the day in the week for this day\nReturns the 1-indexed day in the year for this date\nReturns the 1-indexed day in the year for this date\nReturns the number of days in the month represented by …\nReturns the number of days in the month represented by …\nReturns the number of days in the year represented by this …\nReturns the number of days in the year represented by this …\nReturns the era for this date,\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the hour in this time\nReturns the hour in this time\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this date is in a leap year\nCreates a new <code>ICU4XIsoDateTime</code> of midnight on January 1, …\nReturns the minute in this time\nReturns the minute in this time\nGets the minutes since the local unix epoch for this date …\nReturns 1-indexed number of the month of this date in its …\nReturns the month code for this date. Typically something …\nReturns the number of months in the year represented by …\nReturns the number of months in the year represented by …\nReturns the nanosecond in this time\nReturns the nanosecond in this time\nReturns 1-indexed number of the month of this date in its …\nReturns the second in this time\nReturns the second in this time\nGets the time contained in this object\nGets the time contained in this object\nConverts this to an <code>ICU4XDateTime</code> capable of being mixed …\nConvert this datetime to one in a different calendar\nConvert this datetime to one in a different calendar\nConverts this date to ISO\nReturns the week number in this month, 1-indexed, based on …\nReturns the week number in this month, 1-indexed, based on …\nReturns the week number in this year, using week data\nReturns the week number in this year, using week data\nReturns the year number for this date\nReturns the year number in the current era for this date\nAn ICU4X DateFormatter object capable of formatting a …\nAn ICU4X DateFormatter object capable of formatting a …\nAn ICU4X TypedDateFormatter object capable of formatting a …\nAn ICU4X TypedDateTimeFormatter object capable of …\nAn ICU4X TimeFormatter object capable of formatting an …\nCreates a new <code>ICU4XTimeFormatter</code> from locale data.\nCreates a new <code>ICU4XGregorianDateFormatter</code> from locale data.\nCreates a new <code>ICU4XDateFormatter</code> from locale data.\nCreates a new <code>ICU4XGregorianDateFormatter</code> from locale data.\nCreates a new <code>ICU4XDateTimeFormatter</code> from locale data.\nFormats a <code>ICU4XDate</code> to a string.\nFormats a <code>ICU4XDateTime</code> to a string.\nFormats a <code>ICU4XDateTime</code> to a string.\nFormats a <code>ICU4XDateTime</code> to a string.\nFormats a <code>ICU4XIsoDate</code> to a string.\nFormats a <code>ICU4XIsoDate</code> to a string.\nFormats a <code>ICU4XIsoDateTime</code> to a string.\nFormats a <code>ICU4XIsoDateTime</code> to a string.\nFormats a <code>ICU4XIsoDateTime</code> to a string.\nFormats a <code>ICU4XIsoDateTime</code> to a string.\nFormats a <code>ICU4XIsoDateTime</code> to a string.\nFormats a <code>ICU4XTime</code> to a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn ICU4X Fixed Decimal Format object, capable of …\nCreates a new <code>ICU4XFixedDecimalFormatter</code> from …\nCreates a new <code>ICU4XFixedDecimalFormatter</code> from locale data.\nFormats a <code>ICU4XFixedDecimal</code> to a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempted to construct an invalid data struct\nA common enum for errors that ICU4X may return, organized …\nThe locale or subtag string failed to parse\nThe subtag being requested was not set\nSome input was out of bounds\nThe error is not currently categorized as ICU4XError. …\nInput expected to be UTF-8 was ill-formed\nAn error arising from writing to a string Typically found …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCollection of configurations for the ICU4X fallback …\nAn iterator over the locale under fallback.\nPriority mode for the ICU4X fallback algorithm.\nWhat additional data is required to load when performing …\nAn object that runs the ICU4X locale fallback algorithm.\nAn object that runs the ICU4X locale fallback algorithm …\nCreates a new <code>ICU4XLocaleFallbacker</code> from a data provider.\nCreates a new <code>ICU4XLocaleFallbacker</code> without data for …\nAn empty string is considered <code>None</code>.\nCreates an iterator from a locale with each step of …\nFallback supplement data key to customize fallback rules.\nAssociates this <code>ICU4XLocaleFallbacker</code> with configuration …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a snapshot of the current state of the locale.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA combination of <code>get</code> and <code>step</code>. Returns the value that <code>get</code> …\nChoice of priority mode.\nPerforms one step of the fallback algorithm, mutating the …\nThe sign of a FixedDecimal, as shown in formatting.\nECMA-402 compatible sign display preference.\nIncrement used in a rounding operation.\nA negative sign, e.g., -1729.\nNo sign (implicitly positive, e.g., 1729).\nAn explicit positive sign, e.g., +1729.\nConcatenates <code>other</code> to the end of <code>self</code>.\nConstruct an <code>ICU4XFixedDecimal</code> from an float, with enough …\nConstruct an <code>ICU4XFixedDecimal</code> from an integer-valued float\nConstruct an <code>ICU4XFixedDecimal</code> from an float, with a given …\nConstruct an <code>ICU4XFixedDecimal</code> from an float, for a given …\nConstruct an <code>ICU4XFixedDecimal</code> from an integer.\nConstruct an <code>ICU4XFixedDecimal</code> from an integer.\nConstruct an <code>ICU4XFixedDecimal</code> from a string.\nConstruct an <code>ICU4XFixedDecimal</code> from an integer.\nConstruct an <code>ICU4XFixedDecimal</code> from an integer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMultiply the <code>ICU4XFixedDecimal</code> by a given power of ten.\nZero-pad the <code>ICU4XFixedDecimal</code> on the right to a …\nZero-pad the <code>ICU4XFixedDecimal</code> on the left to a particular …\nTruncate the <code>ICU4XFixedDecimal</code> on the left to a particular …\nSet the sign of the <code>ICU4XFixedDecimal</code>.\nFormat the <code>ICU4XFixedDecimal</code> as a string.\nAn object capable of mapping from a BCP-47 time zone ID to …\nAn object capable of mapping from an IANA time zone ID to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrites out the canonical IANA time zone ID corresponding …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA list of strings\nCreate a new list of strings\nConstruct a new ICU4XListFormatter instance for And …\nConstruct a new ICU4XListFormatter instance for And …\nConstruct a new ICU4XListFormatter instance for And …\nCreate a new list of strings with preallocated space to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this list is empty\nThe number of elements in this list\nPush a string to the list\nAn ICU4X Locale, capable of representing strings like …\nWrite a string representation of the <code>LanguageIdentifier</code> …\nBest effort locale canonicalizer that doesn’t need any …\nClones the <code>ICU4XLocale</code>.\nConstruct an <code>ICU4XLocale</code> from an locale identifier.\nConstruct a default undefined <code>ICU4XLocale</code> “und”.\nReturns the argument unchanged.\nWrite a string representation of the unicode extension to …\nCalls <code>U::from(self)</code>.\nWrite a string representation of <code>ICU4XLocale</code> language to …\nWrite a string representation of <code>ICU4XLocale</code> region to …\nWrite a string representation of <code>ICU4XLocale</code> script to …\nSet the language part of the <code>ICU4XLocale</code>.\nSet the region part of the <code>ICU4XLocale</code>.\nSet the script part of the <code>ICU4XLocale</code>. Pass an empty …\nWrite a string representation of <code>ICU4XLocale</code> to <code>write</code>\nConstruct a new ICU4XLocaleDirectionality instance\nConstruct a new ICU4XLocaleDirectionality instance with a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA locale canonicalizer.\nA locale expander.\nCreate a new <code>ICU4XLocaleCanonicalizer</code>.\nCreate a new <code>ICU4XLocaleExpander</code>.\nCreate a new <code>ICU4XLocaleCanonicalizer</code> with extended data.\nCreate a new <code>ICU4XLocaleExpander</code> with extended data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn object allowing control over the logging used\nReturns the argument unchanged.\nInitialize the logger using <code>simple_logger</code>\nCalls <code>U::from(self)</code>.\nAn object capable of computing the metazone from a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new ICU4XComposingNormalizer instance for NFC\nConstruct a new ICU4XDecomposingNormalizer instance for NFC\nConstruct a new ICU4XComposingNormalizer instance for NFKC\nConstruct a new ICU4XDecomposingNormalizer instance for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a string is normalized\nCheck if a string is normalized\nNormalize a string\nNormalize a string\nLookup of the Canonical_Combining_Class Unicode property\nThe raw canonical composition operation.\nThe raw (non-recursive) canonical decomposition operation.\nThe outcome of non-recursive canonical decomposition of a …\nPerforms canonical composition (including Hangul) on a …\nConstruct a new ICU4XCanonicalCombiningClassMap instance …\nConstruct a new ICU4XCanonicalComposition instance for NFC\nConstruct a new ICU4XCanonicalDecomposition instance for …\nPerforms non-recursive canonical decomposition (including …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet all of the categories needed in the current locale\nGet the category for a given number represented as operands\nConstruct an <code>ICU4XPluralRules</code> for the given locale, for …\nConstruct from a FixedDecimal\nConstruct for a given string representing a number\nConstruct an <code>ICU4XPluralRules</code> for the given locale, for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct from a string in the format specified in TR35\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator over code point ranges, produced by …\nResult of a single iteration of <code>CodePointRangeIterator</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdvance the iterator by one and return the next range.\nAn ICU4X Unicode Map Property object, capable of querying …\nAn ICU4X Unicode Map Property object, capable of querying …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a general category to its corresponding mask value\nGets the value for a code point.\nGets the value for a code point.\nGets the value for a code point (specified as a 32 bit …\nGets the value for a code point (specified as a 32 bit …\nGets a <code>ICU4XCodePointSetData</code> representing all entries in …\nGets a <code>ICU4XCodePointSetData</code> representing all entries in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven a mask value (the nth bit marks property value = n), …\nProduces an iterator over ranges of code points that map …\nProduces an iterator over ranges of code points that map …\nProduces an iterator over ranges of code points that do …\nProduces an iterator over ranges of code points that do …\nA type capable of looking up General Category mask values …\nA type capable of looking up a property value from a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the property value matching the given name, using …\nGet the mask value matching the given name, using loose …\nGet the property value matching the given name, using …\nGet the mask value matching the given name, using strict …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn ICU4X Unicode Set Property object, capable of querying …\nChecks whether the code point is in the set.\nChecks whether the code point (specified as a 32 bit …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProduces an iterator over ranges of code points contained …\nProduces an iterator over ranges of code points not …\nLoads data for a property specified as a string as long as …\nwhich is a mask with the same format as the <code>U_GC_XX_MASK</code> …\nAn ICU4X Unicode Set Property object, capable of querying …\nChecks whether the string is in the set.\nChecks whether the code point (specified as a 32 bit …\nChecks whether the code point is in the set.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn ICU4X data provider, capable of loading ICU4X data keys …\nConstructs an <code>ICU4XDataProvider</code> that uses compiled data.\nConstructs an empty <code>ICU4XDataProvider</code>.\nEnables locale fallbacking for data requests made to this …\nCreates a provider that tries the current provider and …\nSame as <code>fork_by_key</code> but forks by locale instead of key.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn object that represents the Script_Extensions property …\nAn ICU4X ScriptWithExtensions map object, capable of …\nA slightly faster ICU4XScriptWithExtensions object\nBorrow this object for a slightly faster variant with more …\nCheck if the Script_Extensions property of the given code …\nGet the number of scripts contained in here\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuild the CodePointSetData corresponding to a codepoints …\nGet the Script property value for a code point\nGet the Script property value for a code point\nGet the Script property value for a code point\nCheck if the Script_Extensions property of the given code …\nCheck if the Script_Extensions property of the given code …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet a list of ranges of code points that contain this …\nGet script at index\nAn ICU4X grapheme-cluster-break segmenter, capable of …\nConstruct an <code>ICU4XGraphemeClusterSegmenter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nSegments a Latin-1 string.\nSegments a string.\nSegments a string.\nAn ICU4X line-break segmenter, capable of finding …\nConstruct a <code>ICU4XLineSegmenter</code> with default options. It …\nConstruct a <code>ICU4XLineSegmenter</code> with custom options. It …\nConstruct a <code>ICU4XLineSegmenter</code> with default options and …\nConstruct a <code>ICU4XLineSegmenter</code> with custom options and …\nConstruct a <code>ICU4XLineSegmenter</code> with default options and …\nConstruct a <code>ICU4XLineSegmenter</code> with custom options and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nSegments a Latin-1 string.\nSegments a string.\nSegments a string.\nAn ICU4X sentence-break segmenter, capable of finding …\nConstruct an <code>ICU4XSentenceSegmenter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nSegments a Latin-1 string.\nSegments a string.\nSegments a string.\nAn ICU4X word-break segmenter, capable of finding word …\nConstruct an <code>ICU4XWordSegmenter</code> with automatically …\nConstruct an <code>ICU4XWordSegmenter</code> with dictionary payload …\nConstruct an <code>ICU4XWordSegmenter</code> with LSTM payload data for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true when break boundary is word-like such as …\nReturn true when break boundary is word-like such as …\nReturn true when break boundary is word-like such as …\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nFinds the next breakpoint. Returns -1 if at the end of the …\nSegments a Latin-1 string.\nSegments a string.\nSegments a string.\nReturn the status value of break boundary.\nReturn the status value of break boundary.\nReturn the status value of break boundary.\nAn ICU4X Time object representing a time in terms of hour, …\nCreates a new <code>ICU4XTime</code> given field values\nCreates a new <code>ICU4XTime</code> representing midnight (00:00.000).\nReturns the argument unchanged.\nReturns the hour in this time\nCalls <code>U::from(self)</code>.\nReturns the minute in this time\nReturns the nanosecond in this time\nReturns the second in this time\nClears the <code>gmt_offset</code> field.\nClears the <code>metazone_id</code> field.\nClears the <code>time_zone_id</code> field.\nClears the <code>zone_variant</code> field.\nCreates a time zone with no information.\nCreates a time zone from an offset string.\nCreates a time zone for UTC.\nReturns the argument unchanged.\nReturns whether the <code>gmt_offset</code> field has nonzero minutes.\nReturns whether the <code>gmt_offset</code> field has nonzero seconds.\nReturns the value of the <code>gmt_offset</code> field as offset …\nCalls <code>U::from(self)</code>.\nReturns whether the <code>zone_variant</code> field is daylight time.\nReturns whether the <code>gmt_offset</code> field is positive.\nReturns whether the <code>gmt_offset</code> field is zero.\nReturns whether the <code>zone_variant</code> field is standard time.\nSets the metazone based on the time zone and the local …\nWrites the value of the <code>metazone_id</code> field as a string.\nSets the <code>zone_variant</code> field to “daylight” time, which …\nSets the <code>zone_variant</code> field to “standard” time, which …\nWrites the value of the <code>time_zone_id</code> field as a string.\nSets the <code>gmt_offset</code> field from offset seconds.\nSets the <code>time_zone_id</code> field from an IANA string by looking …\nSets the <code>time_zone_id</code> field from an IANA string by looking …\nSets the <code>metazone_id</code> field from a string.\nSets the <code>time_zone_id</code> field from a BCP-47 string.\nSets the <code>zone_variant</code> field from a string.\nWrites the value of the <code>zone_variant</code> field as a string.\nAn ICU4X TimeZoneFormatter object capable of formatting an …\nCreates a new <code>ICU4XTimeZoneFormatter</code> from locale data.\nCreates a new <code>ICU4XTimeZoneFormatter</code> from locale data.\nFormats a <code>ICU4XCustomTimeZone</code> to a string.\nFormats a <code>ICU4XCustomTimeZone</code> to a string, performing no …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads localized GMT format. Example: “GMT-07:00”\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads generic location format. Example: “Los Angeles Time…\nLoads generic non-location long format. Example: “…\nLoads generic non-location short format. Example: “PT”\nLoads ISO-8601 format. Example: “-07:00”\nLoads specific non-location long format. Example: “…\nLoads specific non-location short format. Example: “PST…\nA mapper between IANA time zone identifiers and BCP-47 …\nA mapper between IANA time zone identifiers and BCP-47 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImplements <code>Writeable</code> for [<code>&amp;[u16]</code>] according to the WHATWG …\nImplements <code>Writeable</code> for [<code>&amp;[u8]</code>] according to the WHATWG …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA Week calculator, useful to be passed in to <code>week_of_year()</code>…\nDocuments which days of the week are considered to be a …\nCreates a new <code>ICU4XWeekCalculator</code> from locale data.\nReturns the weekday that starts the week for this object’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe minimum number of days overlapping a year required for …\nAn object capable of formatting a date time with time zone …\nAn object capable of formatting a date time with time zone …\nCreates a new <code>ICU4XGregorianZonedDateTimeFormatter</code> from …\nCreates a new <code>ICU4XZonedDateTimeFormatter</code> from locale data.\nCreates a new <code>ICU4XGregorianZonedDateTimeFormatter</code> from …\nCreates a new <code>ICU4XZonedDateTimeFormatter</code> from locale data.\nFormats a <code>ICU4XDateTime</code> and <code>ICU4XCustomTimeZone</code> to a …\nFormats a <code>ICU4XIsoDateTime</code> and <code>ICU4XCustomTimeZone</code> to a …\nFormats a <code>ICU4XIsoDateTime</code> and <code>ICU4XCustomTimeZone</code> to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")