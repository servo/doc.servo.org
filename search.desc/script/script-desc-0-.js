searchState.loadedDescShard("script", 0, "The script crate contains all matters DOM.\nA trait to allow tracing only DOM sub-objects.\nA trait to provide access to the <code>Reflector</code> for a DOM …\nA trait to allow tracing (only) DOM objects. Types that …\nA trait to initialize the <code>Reflector</code> for a DOM object.\nA struct to store a reference to the reflector of a DOM …\nA timeline module, used to specify an <code>AnimationTimeline</code> …\nThe set of animations for a document.\nTracking of pending loads in a document.\nThe implementation of the DOM.\nInitializes the Reflector\nA safe wrapper for DOM nodes that prevents layout from …\nInfrastructure to initiate network requests for images …\nDefines shared hyperlink behaviour for <code>&lt;link&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;area&gt;</code> …\nUsage:\nRoutines for handling measuring the memory usage of …\nImplementation of microtasks and microtask queues. It is …\nReturns the receiver’s reflector.\nThe script module mod contains common traits and structs …\nThe script runtime contains common traits and structs …\nThe script thread is the thread that owns the DOM in …\nThe service worker manager persists the descriptor of any …\nUsage:\nMachinery for tasks.\nMachinery for task-queue.\nCommon handling of keyboard input and state management for …\nTrace <code>self</code>.\nTrace <code>self</code>.\nA <code>AnimationTimeline</code> which is used to synchronize …\nIncrements the current value of the timeline by a specific …\nReturns the current value of the timeline in seconds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new “normal” timeline, i.e., a “Current” …\nCreates a new “test mode” timeline, with initial time …\nUpdates the value of the <code>AnimationTimeline</code> to the current …\n“The animationcancel event occurs when the animation …\n“The animationend event occurs when the animation …\n“The animationiteration event occurs at the end of each …\n“The animationstart event occurs at the start of the …\nThe set of animations for a document.\n“The transitioncancel event occurs when a transition is …\n“The transitionend event occurs at the completion of the …\nA transition or animation event.\nThe type of transition event to trigger. These are defined …\n“The transitionrun event occurs when a transition is …\n“The transitionstart event occurs when a transition’s …\nCancel animations for the given node, if any exist.\nProcesses any new animations that were discovered after …\nThe elapsed time property to send with this transition …\nThe type of transition event this should trigger.\nWalk through the list of running animations and remove all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSend events for canceled animations. Currently this only …\nWhether or not we have animations that are running.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether or not this event is a transition-related event.\nThe address of the node which owns this transition.\nA list of pending animation-related events.\nThe pipeline id of the layout task that sent this message.\nThe name of the property that is transitioning (in the …\nThe pseudo element for this transition or animation, if …\nEnsure that all nodes with new animations are rooted. This …\nA list of nodes with in-progress CSS transitions or …\nThe map of nodes to their animation states.\nWalk through the list of pending animations and start all …\nThe timeline value at the last time all animations were …\nhttps://fetch.spec.whatwg.org/#body\nThe Dom object, or ReadableStream, that is the source of a …\nThe promise handler used to consume the body, …\nThe stream is done.\nThe stream has errored.\nhttps://fetch.spec.whatwg.org/#concept-bodyinit-extract\nThe result of …\nA ReadableStream comes with a null-source.\nAnother Dom object as source, TODO: store the actual object\nThe reason to stop reading from the body.\nThe IPC route handler for …\nThe handler of read promises of body streams used in …\nThe handler of read promises rejection of body streams …\nhttps://fetch.spec.whatwg.org/#dom-body-body\nStep 5 of …\n…\nContinuing Step 4 of …\nContinuing Step 4 of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhttps://fetch.spec.whatwg.org/#concept-body-mime-type\nIs the data of the stream of this extracted body available …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a request body from the extracted body, to be sent …\nhttps://fetch.spec.whatwg.org/#concept-body-disturbed\nhttps://fetch.spec.whatwg.org/#concept-body-locked\nRe-extract the source to support streaming it again for a …\nReset <code>in_memory_done</code>, called when a stream is re-extracted …\nStep 5 of …\nTake the IPC sender sent by <code>net</code>, so we can send body …\nDrop the IPC sender sent by <code>net</code>\nStep 4 and following of …\nIn case of re-direct, and of a source available in memory, …\nIt is used by DrawImage to calculate the size of the …\nThe base URL for resolving CSS image URL values. Needed …\n…\n…\ndrawImage coordinates explained\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAny missing image URLs.\n…\nCanary value ensuring that manually added blocking loads …\nAdd a load to the list of blocking loads.\nThe document whose load event is blocked by this object …\nInitiate a new fetch that does not block the document load …\nInitiate a new fetch given a response callback.\nMark an in-progress network request complete.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe load that is blocking the document’s load event.\nMark the document’s load event as blocked on this new …\nRemove this load from the associated document’s list of …\nThe code to expose the DOM to JavaScript through IDL …\nDOM bindings for <code>CharacterData</code>.\nElement nodes.\nThe core DOM types. Defines the basic DOM hierarchy as …\nNative representation of JS Promise values.\nThis is an abstraction used by <code>HTMLInputElement</code> and …\nAn implementation of Houdini worklets.\nhttps://dom.spec.whatwg.org/#dom-range-collapsed\nhttps://dom.spec.whatwg.org/#dom-range-endcontainer\nhttps://dom.spec.whatwg.org/#dom-range-endoffset\nhttps://dom.spec.whatwg.org/#dom-range-startcontainer\nhttps://dom.spec.whatwg.org/#dom-range-startoffset\nThis is used in a type assertion to ensure that the source …\nhttps://dom.spec.whatwg.org/#concept-range-bp-position\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCommon variants associated with the script messages\nMessage sent through Worker.postMessage\nMessages used to control the worker event loops\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA ScriptChan that can be cloned freely and will silently …\nA ScriptChan that can be cloned freely and will silently …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait for elements with defined activation behavior\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nthe element that owns this attribute.\nSets the owner element. Should be called after the …\nUsed to swap the attribute’s value without triggering …\nThe AudioBuffer keeps its data either in js_channels or in …\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFloat32Arrays returned by calls to GetChannelData.\n…\n…\n…\nAggregates the data from js_channels. This is <code>Some&lt;T&gt;</code> iff …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEach node has a set of defaults, so this lets us work with …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nControl thread processing state\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFulfills the next in-flight resume promises queue after …\nResume promises which are soon to be fulfilled by a queued …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTells whether this is an OfflineAudioContext or not.\n…\n…\nSet audio context state\n…\nTakes the pending resume promises.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBase classes to work with IDL callbacks.\nA shareable mutable container for the DOM.\nGenerated JS-Rust bindings.\nWebIDL constants.\nConversions of Rust values to and from <code>JSVal</code>.\nUtilities to throw exceptions from Rust bindings.\nMachinery to conditionally expose things.\nThe <code>Castable</code> trait.\nMachinery to initialise interface prototype objects and …\nImplementation of <code>iterable&lt;...&gt;</code> and <code>iterable&lt;..., ...&gt;</code> …\nImplementation of <code>setlike&lt;...&gt;</code> and <code>maplike&lt;..., ...&gt;</code> …\nMachinery to initialise namespace objects.\nThe <code>Finite&lt;T&gt;</code> struct.\nUtilities for the implementation of JSAPI proxy handlers.\nThe <code>Record</code> (open-ended dictionary) type.\nA generic, safe mechanism by which DOM objects can be …\nThe <code>Reflector</code> struct.\nSmart pointers for the JS-managed DOM objects.\nTrait representing the concept of [serializable objects] (…\nThe <code>ByteString</code> struct.\nThis module implements structured cloning, as defined by …\nUtilities for tracing JS-managed values.\nTrait representing the concept of [transferable objects] (…\nVarious utilities to glue JavaScript and the DOM …\nWeak-referenceable JS-managed DOM objects.\nFunctions for validating and extracting qualified XML …\nhttps://webidl.spec.whatwg.org/#BufferSource\nhttps://webidl.spec.whatwg.org/#arraybufferview-create\nPanics if there is any active view\nData views (mutable subslices of data)\nhttps://tc39.es/ecma262/#sec-detacharraybuffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPanics if there is any active view or src data is not same …\nReturns true if two non-inclusive ranges overlap\nReturns error if requested range is already mapped\nA class that performs whatever setup we need to safely …\nA trait to be implemented by concrete IDL callback …\nA common base class for representing IDL callback function …\nA common base class for representing IDL callback …\nA common base class for representing IDL callback function …\nThe exception handling used for a call.\nReport any exception and don’t throw it to the caller …\nThrow any exception to the caller code.\nReturns the underlying <code>JSObject</code>.\nThe underlying <code>JSObject</code>.\nReturns the underlying <code>CallbackObject</code>.\nReturns the underlying <code>CallbackObject</code>.\nReturns the underlying <code>CallbackObject</code>.\nThe <code>JSContext</code> used for the call.\n…\nThe global for reporting exceptions. This is the global …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the property with the given <code>name</code>, if it is a …\nReturns the <code>JSContext</code> used for the call.\nThe exception handling used for the call.\nReturns the “callback context”, that is, the global to …\nThe “callback context”, that is, the global to use as …\n…\nInitialize the callback function with a value. Should be …\nInitialize the callback function with a value. Should be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new CallbackContainer object for the given …\nPerforms the setup needed to make a call.\nCreate a new <code>CallbackFunction</code> for this object.\nCreate a new CallbackInterface object for the given …\nThe realm we were in before the call.\nWraps the reflector for <code>p</code> into the realm of <code>cx</code>.\nA mutable field in the DOM.\nWraps a borrowed reference to a value in a <code>RefCell</code> box. A …\nA mutable memory location with dynamically checked borrow …\nA wrapper type for a mutably borrowed value from a …\nReturns a raw pointer to the underlying data in this cell.\nImmutably borrows the wrapped value.\nImmutably borrows the wrapped value.\nReturn a reference to the contents.  For use in layout …\nBorrow the contents for the purpose of script deallocation.\nMutably borrows the wrapped value.\nMutably borrows the wrapped value.\nMutably borrow a cell for layout. Ideally this would use …\nPanics\nCopies a <code>Ref</code>.\nPanics\nPanics\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nPanics\nMakes a new <code>Ref</code> for an optional component of the borrowed …\nMakes a new <code>RefMut</code> for an optional component of the …\nReturns the argument unchanged.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPanics\nReturns a mutable reference to the underlying data.\nPanics\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nPanics\nConvert into a reference to the underlying data.\nConvert into a mutable reference to the underlying data.\nPanics\nMakes a new <code>Ref</code> for a component of the borrowed data.\nMakes a new <code>RefMut</code> for a component of the borrowed data, …\nSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components …\nSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …\nCreates a new <code>RefCell</code> containing <code>value</code>.\nCreate a new <code>DomRefCell</code> containing <code>value</code>.\nPanics\nMake a new <code>Ref</code> for a optional component of the borrowed …\nReplaces the wrapped value with a new one, returning the …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nImmutably borrows the wrapped value, returning an error if …\nAttempts to immutably borrow the wrapped value.\nMutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value.\nImmutably borrows the wrapped value, returning an error if …\nUndo the effect of leaked guards on the borrow state of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList that ensures correct dynamic root ordering\nThe value to root.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNo value.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo value.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList that ensures correct dynamic root ordering\nThe value to root.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nID used by abstract interfaces.\nID used by interfaces that derive from AbstractRange.\nID used by interfaces that are not castable.\nID used by interfaces that derive from Blob.\nID used by interfaces that derive from CSSRule.\nID used by interfaces that derive from DOMException.\nID used by interfaces that derive from DOMMatrixReadOnly.\nID used by interfaces that derive from DOMPointReadOnly.\nID used by interfaces that derive from DOMRectReadOnly.\nID used by interfaces that derive from Event.\nID used by interfaces that derive from EventTarget.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID used by interfaces that derive from GPUError.\nID used by interfaces that derive from HTMLCollection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nID used by interfaces that derive from NodeList.\nID used by interfaces that derive from PerformanceEntry.\nID used by interfaces that derive from StyleSheet.\nID used by interfaces that derive from TestBinding.\nID used by interfaces that derive from WebGLObject.\nID used by interfaces that derive from XRPose.\nID used by interfaces that derive from XRSubImage.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate the global vtables used by the generated DOM …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>boolean</code> constant.\nRepresentation of an IDL constant.\nRepresentation of an IDL constant value.\n<code>double</code> constant.\n<code>long</code> constant.\n<code>null</code> constant.\n<code>unsigned long</code> constant.\nDefines constants on <code>obj</code>. Fails on JSAPI failure.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>JSVal</code> that represents the value of this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nname of the constant.\nvalue of the constant.\nReturns the constructor object for the element associated …\nClamp into the integer’s range.\nOptional configurable behaviour switch; use () for no …\nBehavior for converting out-of-range integers.\nAn enum to better support enums through …\nThe index of the slot wherein a pointer to the reflected …\nWrap into the integer’s range.\nConvert <code>null</code> to the string <code>&quot;null&quot;</code>.\nA trait to mark an IDL interface as deriving from another …\nConvert <code>null</code> to the empty string.\nThrow an exception.\nConversion failed, without a pending exception.\nA trait to convert <code>JSVal</code>s to Rust types.\nA trait to check whether a given <code>JSObject</code> implements an …\nBehavior for stringification of <code>JSVal</code>s.\nEverything went fine.\nA trait to convert Rust types to <code>JSVal</code>s.\nReturns whether the given DOM class derives that interface.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>val</code> to type <code>Self</code>. Optional configuration of type <code>T</code> …\nGet the <code>DOMClass</code> from <code>obj</code>, or <code>Err(())</code> if <code>obj</code> is not a DOM …\nGet a property from a JS object, and convert it to a Rust …\nGet a property from a JS object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether <code>value</code> is an array-like object (Array, …\nReturns whether <code>obj</code> is a DOM object implemented as a proxy.\nConvert <code>id</code> to a <code>DOMString</code>. Returns <code>None</code> if <code>id</code> is not a …\nConvert the given <code>JSString</code> to a <code>DOMString</code>. Fails if the …\nGet a <code>*const T</code> for a DOM object accessible from a …\nGet a <code>*const T</code> for a DOM object accessible from a <code>JSObject</code>.\nGet a <code>*const T</code> for a DOM object accessible from a <code>JSObject</code>…\nGet the private pointer of a DOM object from a given …\nGet a <code>*const libc::c_void</code> for the given DOM object, …\nGet a <code>*const libc::c_void</code> for the given DOM object, unless …\nGet a <code>DomRoot&lt;T&gt;</code> for a DOM object accessible from a …\nGet a <code>DomRoot&lt;T&gt;</code> for a DOM object accessible from a …\nGet a <code>DomRoot&lt;T&gt;</code> for the given DOM object, unwrapping any …\nGet a <code>DomRoot&lt;T&gt;</code> for the given DOM object, unwrapping any …\nConvert <code>self</code> to a <code>JSVal</code>. JSAPI failure causes a panic.\nGet a <code>DomRoot&lt;T&gt;</code> for a WindowProxy accessible from a …\nAbortError DOMException\nDataError DOMException\nDataCloneError DOMException\nContains the error value\nContains the error value\nDOM exceptions that can be thrown by a native DOM method.\nA struct encapsulating information about a runtime script …\nThe return type for IDL operations that can throw DOM …\nThe return type for IDL operations that can throw DOM …\nHierarchyRequestError DOMException\nInUseAttributeError DOMException\nIndexSizeError DOMException\nInvalidAccessError DOMException\nInvalidCharacterError DOMException\nInvalidModificationError DOMException\nInvalidNodeTypeError DOMException\nInvalidStateError DOMException\nA JavaScript exception is already pending.\nNamespaceError DOMException\nNetworkError DOMException\nNoModificationAllowedError DOMException\nNotFoundError DOMException\nNotReadableError DOMException\nNotSupportedError DOMException\nContains the success value\nContains the success value\nOperationError DOMException\nQuotaExceededError DOMException\nRangeError JavaScript Error\nSecurityError DOMException\nSyntaxError DOMException\nTimeoutError DOMException\nTypeError JavaScript Error\nTypeMismatchError DOMException\nWrongDocumentError DOMException\nThe column number.\nThe file name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe line number.\nThe error message.\nReport a pending exception, thereby clearing it.\nSet a pending exception for the given <code>result</code> on <code>cx</code>.\nThrow an exception to signal that a <code>JSObject</code> can not be …\nConvert this error value to a JS value, consuming it in …\nGeneric finalizer implementations for DOM binding …\nA condition to expose things.\nThe condition is satisfied if the function returns true.\nA container with a list of conditions.\nThe condition is satisfied if the preference is set.\nThe condition is always satisfied.\nExpose the value if the conditions are satisfied.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new guarded value.\nClamp into the integer’s range.\nOptional configurable behaviour switch; use () for no …\nBehavior for converting out-of-range integers.\nAn enum to better support enums through …\nGet the current realm’s global. Returns nullptr if no …\nWrap into the integer’s range.\nThrow an exception.\nConversion failed, without a pending exception.\nA trait to convert <code>JSVal</code>s to Rust types.\nA generic handle to an array of rooted values.\nReturn true if the given object is callable. In ES6 terms, …\nReference to a T that has been rooted elsewhere. This is …\nA single-threaded reference-counting pointer. ‘Rc’ …\nEverything went fine.\nA trait to convert Rust types to <code>JSVal</code>s.\nReturns a reference to the underlying allocator.\nProvides a raw pointer to the data.\nConverts to <code>Rc&lt;[T]&gt;</code>.\nConverts to <code>Rc&lt;T&gt;</code>.\nMakes a clone of the <code>Rc</code> pointer.\nComparison for two <code>Rc</code>s.\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nCreates an empty CStr inside an Rc\nCreates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates an empty <code>[T]</code> inside an Rc\nCreates an empty str inside an Rc\nAttempt to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nDowncasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nCreates a new <code>Weak</code> pointer to this allocation.\nDrops the <code>Rc</code>.\nEquality for two <code>Rc</code>s.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a reference-counted string slice into a byte …\nAllocate a reference-counted slice and move <code>v</code>’s items …\nConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …\nConverts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the …\nCopies the string into a newly allocated Rc&lt;OsStr&gt;.\nConverts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> …\nAllocate a reference-counted slice and fill it by cloning <code>v</code>…\nConverts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.\nConverts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> …\nAllocate a reference-counted string slice and copy <code>v</code> into …\nReturns the argument unchanged.\nAllocate a reference-counted string slice and copy <code>v</code> into …\nCreate a reference-counted pointer from a clone-on-write …\nConverts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>\nMove a boxed object to a new, reference counted, …\nTakes each element in the <code>Iterator</code> and collects it into an …\nConvert <code>val</code> to type <code>Self</code>. Optional configuration of type <code>T</code> …\nConstructs an <code>Rc&lt;T&gt;</code> from a raw pointer.\nConstructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided …\n‘Greater than or equal to’ comparison for two <code>Rc</code>s.\nReturns a mutable reference into the given <code>Rc</code>, if there are\nReturns a mutable reference into the given <code>Rc</code>, without any …\nReturns Some(value) if it is <code>ConversionResult::Success</code>.\nGreater-than comparison for two <code>Rc</code>s.\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner value, if the <code>Rc</code> has exactly one strong …\nConsumes the <code>Rc</code>, returning the wrapped pointer.\nConsumes the <code>Rc</code>, returning the wrapped pointer and …\n‘Less than or equal to’ comparison for two <code>Rc</code>s.\nLess-than comparison for two <code>Rc</code>s.\nMakes a mutable reference into the given <code>Rc</code>.\nIf there is a pending panic, resume unwinding.\nInequality for two <code>Rc</code>s.\nConstructs a new <code>Rc&lt;T&gt;</code>.\nConstructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Rc</code> in the provided allocator.\nConstructs a new <code>Rc</code> with uninitialized contents.\nConstructs a new <code>Rc</code> with uninitialized contents in the …\nConstructs a new reference-counted slice with …\nConstructs a new reference-counted slice with …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new reference-counted slice with …\nConstructs a new reference-counted slice with …\nPartial comparison for two <code>Rc</code>s.\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>…\nManually manage memory through raw pointers.\nReturns <code>true</code> if the two <code>Rc</code>s point to the same allocation …\nGets the number of strong (<code>Rc</code>) pointers to this allocation.\nThrow a <code>TypeError</code> with the given message.\nConvert <code>self</code> to a <code>JSVal</code>. JSAPI failure causes a panic.\nConstructs a new <code>Rc&lt;T&gt;</code>, returning an error if the …\nConstructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, …\nConstructs a new <code>Rc</code> with uninitialized contents, returning …\nConstructs a new <code>Rc</code> with uninitialized contents, in the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nReturns the inner value, if the <code>Rc</code> has exactly one strong …\nIf we have the only reference to <code>T</code> then unwrap it. …\nGets the number of <code>Weak</code> pointers to this allocation.\nA type storing a <code>usize</code> which is a power of two, and thus …\nThe metadata for a <code>Dyn = dyn SomeTrait</code> trait object type.\nThe smallest possible alignment, 1.\nThe type for metadata in pointers and references to <code>Self</code>.\n<code>*mut T</code> but non-zero and covariant.\nProvides the pointer metadata type of any pointed-to type.\nCompares the <em>addresses</em> of the two pointers for equality, …\nCreate a <code>const</code> raw pointer to a place, without creating an …\nCreate a <code>mut</code> raw pointer to a place, without creating an …\nReturns the alignment of the type associated with this …\nReturns the alignment as a NonZero&lt;usize&gt;.\nReturns the alignment as a <code>usize</code>.\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. The …\nCopies <code>count * size_of::&lt;T&gt;()</code> bytes from <code>src</code> to <code>dst</code>. The …\nCreates a new pointer that is dangling, but well-aligned.\nCreates a new pointer that is dangling, but well-aligned.\nExecutes the destructor (if any) of the pointed-to value.\nCompares raw pointers for equality.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a mutable reference to a raw pointer.\nForms a (possibly-wide) raw pointer from a data pointer …\nPerforms the same functionality as <code>from_raw_parts</code>, except …\nConvert a reference to a raw pointer.\nHash a raw pointer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the size and alignment together as a <code>Layout</code>\nReturns the base-2 logarithm of the alignment.\nReturns a bit mask that can be used to match this …\nExtract the metadata component of a pointer.\nCreates an <code>Alignment</code> from a <code>usize</code>, or returns <code>None</code> if it’…\nCreates an <code>Alignment</code> from a power-of-two <code>usize</code>.\nCreates a null raw pointer.\nCreates a null mutable raw pointer.\nReturns the alignment for a type.\nReads the value from <code>src</code> without moving it. This leaves the\nReads the value from <code>src</code> without moving it. This leaves the\nPerforms a volatile read of the value from <code>src</code> without …\nMoves <code>src</code> into the pointed <code>dst</code>, returning the previous <code>dst</code> …\nReturns the size of the type associated with this vtable.\nForms a raw slice from a pointer and a length.\nForms a raw mutable slice from a pointer and a length.\nSwaps the values at two mutable locations of the same …\nSwaps <code>count * size_of::&lt;T&gt;()</code> bytes between the two regions …\nConvert an address back to a pointer, picking up a …\nConvert an address back to a mutable pointer, picking up a …\nCreates a pointer with the given address and no provenance.\nCreates a pointer with the given address and no provenance.\nOverwrites a memory location with the given value without …\nSets <code>count * size_of::&lt;T&gt;()</code> bytes of memory starting at <code>dst</code>…\nOverwrites a memory location with the given value without …\nPerforms a volatile write of a memory location with the …\nAlias things that can modify the DOM but nothing else.  …\nAlias the world.  Calling this can change arbitrary values …\nAlias nothing: a constant value, getting it can’t affect …\nMust be last.\nA type representing an owned, C-compatible, nul-terminated …\nAn RAII guard used to root underlying data in …\nA trait for types which can place appropriate GC barriers.\nGet one of the well-known symbols defined by ES6. A single …\nA class, expected to be passed by value, which represents …\nThis struct contains metadata passed from the DOM to the …\nAn enum that describes what this getter/setter/method …\nA class, expected to be passed by value, which represents …\nWrapper to relace JSNative for JSPropertySpecs and …\nThe property is visible in for/in loops.\nThe property is non-configurable: it can’t be deleted, …\nThe property is non-writable.  This flag is only valid for …\nDescription of a property. JS_DefineProperties and …\nA trait to allow tracing (only) DOM objects. Types that …\nGet the value of the property <code>obj[id]</code>, or undefined if no …\nCompute the expression <code>id in obj</code>.\nCreates a new plain object, like <code>new Object()</code>, with …\n<code>*mut T</code> but non-zero and covariant.\nPer ES6, the [[DefineOwnProperty]] internal method has …\nA structure that represents a property on an object, or …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nRust API for keeping a Rooted value in the context’s …\nA trait to convert Rust types to <code>JSVal</code>s.\nCalculates the offset from a pointer (convenience for …\nGets the “address” portion of the pointer.\nComputes the offset that needs to be applied to the …\nReturns the contents of this <code>CString</code> as a slice of bytes.\nEquivalent to <code>CString::as_bytes()</code> except that the returned …\nExtracts a <code>CStr</code> slice containing the entire string.\nReturns a unique reference to the value. If the value may …\nReturns a raw pointer to the slice’s buffer.\nReturns a non-null pointer to the slice’s buffer.\nAcquires the underlying <code>*mut</code> pointer.\nReturns a shared reference to the value. If the value may …\nReturns a unique references to the value. In contrast to …\nReturns a shared references to the value. In contrast to …\nReturns a shared reference to a slice of possibly …\nReturns a unique reference to a slice of possibly …\nCalculates the offset from a pointer in bytes (convenience …\nCalculates the offset from a pointer in bytes.\nCalculates the distance between two pointers. The returned …\nCalculates the offset from a pointer in bytes (convenience …\nCasts to a pointer of another type.\nUtilities for comparing and ordering values.\ncode_ is either one of the special codes OkCode or …\nCopies <code>count * size_of&lt;T&gt;</code> bytes from <code>src</code> to <code>self</code>. The …\nCopies <code>count * size_of&lt;T&gt;</code> bytes from <code>src</code> to <code>self</code>. The …\nCopies <code>count * size_of&lt;T&gt;</code> bytes from <code>self</code> to <code>dest</code>. The …\nCopies <code>count * size_of&lt;T&gt;</code> bytes from <code>self</code> to <code>dest</code>. The …\nCreates a new <code>NonNull</code> that is dangling, but well-aligned.\nCreates an empty <code>CString</code>.\nExecutes the destructor (if any) of the pointed-to value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>&amp;mut T</code> to a <code>NonNull&lt;T&gt;</code>.\nReturns the argument unchanged.\nConverts a <code>&amp;T</code> to a <code>NonNull&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …\nConverts a &amp;CStr into a <code>CString</code> by copying the contents …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nRetakes ownership of a <code>CString</code> that was transferred to C …\nPerforms the same functionality as <code>std::ptr::from_raw_parts</code>…\nCreates a C-compatible string by consuming a byte vector, …\nAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.\nConverts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …\nReturns a raw pointer to an element or subslice, without …\nCreate a default value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>CString</code> into a boxed <code>CStr</code>.\nConsumes the <code>CString</code> and returns the underlying byte …\nEquivalent to <code>CString::into_bytes()</code> except that the …\nConsumes the <code>CString</code> and transfers ownership of the string …\nConverts the <code>CString</code> into a <code>String</code> if it contains valid …\nReturns whether the pointer is properly aligned for <code>T</code>.\nReturns whether the pointer is aligned to <code>align</code>.\nReturns <code>true</code> if the non-null raw slice has a length of 0.\nReturns the length of a non-null raw slice.\nCreates a new pointer by mapping <code>self</code>’s address to a new …\nCreates a new <code>NonNull</code> if <code>ptr</code> is non-null.\nCreates a new C-compatible string from a container of …\nCreates a new <code>NonNull</code>.\nCalculates the offset from a pointer.\nCalculates the distance between two pointers. The returned …\nPlace a post-write barrier\nA convenience macro for accessing a preference value using …\nReads the value from <code>self</code> without moving it. This leaves …\nReads the value from <code>self</code> without moving it. This leaves …\nPerforms a volatile read of the value from <code>self</code> without …\nReplaces the value at <code>self</code> with <code>src</code>, returning the old …\nCreates a non-null raw slice from a thin pointer and a …\nA DOM static method, used for Promise wrappers\nCalculates the offset from a pointer (convenience for …\nCalculates the distance between two pointers, <em>where it’s </em>…\nSwaps the values at two mutable locations of the same …\nConvert <code>self</code> to a <code>JSVal</code>. JSAPI failure causes a panic.\nDecompose a (possibly wide) pointer into its data pointer …\nTrace <code>self</code>.\nHigh-level, safe bindings for JS typed array APIs. Allows …\nCreates a new pointer with the given address.\nGeneric wrapper for JS engine callbacks panic-catching\nOverwrites a memory location with the given value without …\nInvokes memset on the specified pointer, setting …\nOverwrites a memory location with the given value without …\nPerforms a volatile write of a memory location with the …\nTrait for comparisons corresponding to equivalence …\nDerive macro generating an impl of the trait <code>Eq</code>.\nAn ordering where a compared value is equal to another.\nAn ordering where a compared value is greater than another.\nAn ordering where a compared value is less than another.\nTrait for types that form a total order.\nDerive macro generating an impl of the trait <code>Ord</code>. The …\nAn <code>Ordering</code> is the result of a comparison between two …\nTrait for comparisons using the equality operator.\nDerive macro generating an impl of the trait <code>PartialEq</code>. …\nTrait for types that form a partial order.\nDerive macro generating an impl of the trait <code>PartialOrd</code>. …\nA helper struct for reverse ordering.\nRestrict a value to a certain interval.\nThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nThis method tests for <code>self</code> and <code>other</code> values to be equal, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis method tests greater than or equal to (for <code>self</code> and …\nThis method tests greater than (for <code>self</code> and <code>other</code>) and is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the ordering is the <code>Equal</code> variant.\nReturns <code>true</code> if the ordering is either the <code>Greater</code> or <code>Equal</code>…\nReturns <code>true</code> if the ordering is the <code>Greater</code> variant.\nReturns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> …\nReturns <code>true</code> if the ordering is the <code>Less</code> variant.\nReturns <code>true</code> if the ordering is not the <code>Equal</code> variant.\nThis method tests less than or equal to (for <code>self</code> and <code>other</code>…\nThis method tests less than (for <code>self</code> and <code>other</code>) and is …\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nReturns the maximum of two values with respect to the …\nReturns the element that gives the maximum value from the …\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nReturns the minimum of two values with respect to the …\nReturns the element that gives the minimum value from the …\nCompares and sorts two values, returning minimum and …\nReturns minimum and maximum values with respect to the …\nReturns minimum and maximum values with respect to the …\nThis method tests for <code>!=</code>. The default implementation is …\nThis method returns an ordering between <code>self</code> and <code>other</code> …\nReverses the <code>Ordering</code>.\nChains two orderings.\nChains the ordering with the given function.\nIf IsIncrementalGCInProgress(cx), this call aborts the …\nAdvise the GC of external memory owned by a JSObject. This …\nAdd and remove nursery collection callbacks for the given …\nUnforgeable, optimized version of the JS builtin …\nUnforgeable, optimized version of the JS builtin …\nAlias things that can modify the DOM but nothing else.  …\nAlias the world.  Calling this can change arbitrary values …\nAlias nothing: a constant value, getting it can’t affect …\nMust be last.\nCapture all frames.\nCopy data from one array buffer to another.\nCopy data from one array buffer to another.\nReturn true if the ArrayBuffer |obj| contains any data, …\nAsserts (in debug and release builds) that <code>obj</code> belongs to …\nAssert that code is only ever called from a GC callback, …\nDiagnostic assert (see MOZ_DIAGNOSTIC_ASSERT) that GC …\n[SMDOC] Protecting the debuggee’s job/microtask queue …\nEnsure that generational GC is disabled within some scope.\nPass a subclass of this “abstract” class to callees to …\nEnumeratedArray is a fixed-size array container for use …\nSave and later restore the current exception state of a …\nSupply an alternative stack to incorporate into captured …\nA simple RAII class that clears the registered warning …\nSpecial type that is a uint8_t, but assignments are …\nSame as BigIntFits(), but checks if the value fits inside …\nReturn true if the given BigInt is negative.\nConvert the given BigInt to a Number value as if calling …\nConvert the given BigInt to a String value as if …\nSpecial type that is a uint8_t, but assignments are …\nUniquePtr deleter for external buffer contents.\nVector of characters used for holding build ids.\nReturn the buildId (represented as a sequence of …\nGiven a SavedFrame JSObject stack, stringify it in the …\nCalls the current compartment’s original Promise.reject …\nCalls the current compartment’s original Promise.resolve …\nCreate a Promise with the given fulfill/reject handlers, …\nCalled when the transferring objects are checked. If this …\nCapture the current call stack as a chain of SavedFrame …\nCheck whether the given source is a valid regexp. If the …\nCallback for the creation of constructor and prototype …\nClear kept alive objects in JS WeakRef. …\nClear the private value associated with a source text …\nData for tracking JIT-code memory usage.\nAn enum that JSIterateCompartmentCallback can return to …\nSpecification for which compartment/zone a newly created …\nCompile the provided script using the given options.  …\nCompile the provided script using the given options.  …\nCompile a function with envChain plus the global as its …\nCompile a function with envChain plus the global as its …\nIdentical to the CompileFunction overload above for UTF-8, …\nParse the given source buffer as a JSON module in the …\nParse the given source buffer as a module in the scope of …\nParse the given source buffer as a module in the scope of …\nCompilation options stored on the stack. An instance of …\nCompile the UTF-8 contents of the given file into a …\nCompile the UTF-8 contents of the file at the given path …\nInvoke a constructor. This is the C++ equivalent of …\nInvoke a constructor. This is the C++ equivalent of …\nReturns true if there are any live SharedArrayBuffer …\nGiven a SavedFrame object, convert it and its transitive …\nCreate a new ArrayBuffer, whose bytes are set to the …\nCreate memory mapped ArrayBuffer contents. Caller must …\nGet the current realm’s global. Returns nullptr if no …\nCustom rooting behavior for internal and external clients.\nDetect whether the internal date value is NaN.\nDetach an ArrayBuffer, causing all associated views to no …\nWhen writing, this means we’re writing for an audience …\nHandle a backwards-compatibility case with IndexedDB (bug …\nIncremental GC defaults to enabled, but may be disabled …\nAttempt to disable Wasm’s usage of reserving a large …\nCallback to dispatch a JS::Dispatchable to a JSContext’s …\nThe Dispatchable interface allows the embedding to call …\nEnumeration describing possible values of the [[Class]] …\nEncode a narrow multibyte character string to a UTF-8 …\nEncode a UTF-8 string to a narrow multibyte character …\nEncode a UTF-8 string to a wide string.\nEncode a wide string to a UTF-8 string.\nEnqueue |job| on the internal job queue.\nInstall an context wide callback that implements the …\nNB: This API is infallible; a nullptr return value does …\nType representing a JS error or exception. At the moment …\nEvaluate the given source buffer in the scope of the …\nAs above, but providing an explicit scope chain.  envChain …\nEvaluate the provided UTF-8 data in the scope of the …\nEvaluate the UTF-8 contents of the file at the given path, …\nIf the given object is an exception object (or an …\nExecute a regexp on a given input, starting from |indexp|. …\nExecute a regexp on a given input, starting from |indexp|. …\nDo true ephemeron marking with a weak key lookup marking …\nGet a statically allocated C string explaining the given …\nInstall a process-wide callback to validate script …\nCallback for custom post-processing after class …\nThis must be called after a dynamic import operation is …\nIf IsIncrementalGCInProgress(cx), this call finishes the …\nCapture the first frame with the given principals. By …\nSpecial type that is a uint8_t, but assignments are …\nA convenience class for imitating a JS for-of loop. …\nSet all of the uninitialized lexicals on an object to …\nCalled when freeing a transferable handled by the …\nA GC pointer, tagged with the trace kind.\nA nursery collection callback receives the progress of the …\nDescribes the progress of an observed nursery collection.\nData for tracking GC memory usage.\nReturns the base size in bytes of the GC thing of kind …\nReturns a static string equivalent of |kind|.\nThe nursery collection is ending.\nThe nursery collection is starting.\nGet the metadata associated with an object.\nReturn the available byte length of an ArrayBuffer.\nReturn a pointer to the start of the data referenced by a …\nReturn a pointer to the start of the array buffer’s …\nGet the length, sharedness, and data from an …\nStore |*lengthp = ToLength(obj.length)| and return true on …\nDetermine the ECMAScript “class” – Date, String, …\nA JSErrorCallback suitable for passing to …\nGet an error type name from a JSExnType constant. Returns …\nIf args.get(0) is one of the strings “string”, “…\nGet the first SavedFrame object in this SavedFrame stack …\nGet or set function’s reserved slot value. <code>fun</code> should be …\nThis function only reports GC heap memory, and not malloc …\nThis function reports memory used by a zone in bytes, this …\nGet the HostImportModuleDynamically hook for the runtime.\nGet the hook for populating the import.meta metadata …\nGet the HostResolveImportedModule hook for the runtime.\nGet the global object associated with an object’s realm. …\nAttempt to unwrap |obj| as an ArrayBuffer.\nReturns a js::SavedFrame linked list of the stack that …\nReturns the current compartment’s original Promise …\nReturns the given Promise’s process-unique ID.\nReturns whether the given promise’s rejection is already …\nReturns the current compartment’s original …\nReturns the given Promise’s state as a JS::PromiseState …\nReturns the given Promise’s activation behavior state …\nAdd some or all property keys of obj to the id vector *…\nReturn the source text for a RegExp object (or a wrapper …\nGiven a SavedFrame JSObject, get its asyncCause string. …\nGiven a SavedFrame JSObject, get its asyncParent …\nGiven a SavedFrame JSObject, get its column property. …\nGiven a SavedFrame JSObject, get its functionDisplayName …\nGiven a SavedFrame JSObject, get its line property …\nGiven a SavedFrame JSObject, get its parent SavedFrame …\nGiven a SavedFrame JSObject, get its source property. …\nGiven a SavedFrame JSObject, get an ID identifying its …\nReturn the SymbolCode telling what sort of symbol <code>symbol</code> …\nGet the [[Description]] attribute of the given symbol.\nSymbol.for as specified in ES6.\nUnforgeable version of the JS builtin Promise.all.\nGet one of the well-known symbols defined by ES6. A single …\nGet one of the well-known symbols defined by ES6 as …\nMeasurements that not associated with any individual …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nA generic handle to an array of rooted values.\nInforms the JS engine that the scripted caller should be …\nDo not free any Transferables within this buffer when …\nReturn whether an incremental GC has work to do on the …\nPerform a slice of an ongoing incremental collection. When …\nThis hash policy avoids flattening ropes (which perturbs …\nSubset of CompileOptions fields used while instantiating …\nTypes that don’t have their own TypedArray equivalent, …\nReturn true if the GC reason is internal to the JS engine.\nES6 7.2.2.\nIdentical to IsArray above, but the nature of the object …\nThe answer to a successful query as to whether an object …\nCheck whether obj supports the …\nReturn the isShared flag of a ArrayBufferView subtypes, …\nDetermine whether |value| is an Array object or a wrapper …\nDetermine whether |obj| is an Array object or a wrapper …\nReturns true if capturing stack trace data to associate …\nReturn true if the given object is callable. In ES6 terms, …\nReturn true if the given object is a constructor. In ES6 …\nCheck whether the obj is a detached ArrayBufferObject. …\nWhether we are poisoning unused/released data for error …\nReturns true if any zone in the system has been scheduled …\nReturns true if generational allocation and collection is …\nReturns true if incremental GC is enabled. Simply having …\nReturns true while an incremental GC is ongoing, both when …\nReturns true while an incremental GC is ongoing, both when …\nReturns whether the passed array buffer is ‘large’: …\nOn success, returns true, setting |*isMap| to true if …\nCheck whether the obj is ArrayBufferObject and memory …\nReturn true iff the given object is either a SavedFrame …\nReturns true if the given object is an unwrapped …\nReturns true if the given object is a ReadableStream …\nReturns true if the given object is a …\nReturns true if the given object is a …\nReturns whether the passed array buffer is resizable or …\nOn success, returns true, setting |*isSet| to true if …\nCheck whether obj supports the JS::GetSharedArrayBuffer* …\nReturn true iff the given object is a SavedFrame object …\nReturns true if the given text is valid JSON.\nReturns true iff <code>obj</code> has the WindowProxy Class (see …\nInvoke cellCallback on every gray JSObject in the given …\nThis function calls |realmCallback| on every realm. Beware …\nLike IterateRealms, but only iterates realms in …\nLike IterateRealms, but only call the callback for realms …\nAdd a property named by id to obj.\nThe C-style API calls to read and write structured clones …\nDelete a property named by id in obj.\nThe old-style JSClass.enumerate op should define all lazy …\nBase class that implements parts shared by JSErrorReport …\nCallback used to intercept JavaScript errors.\nNotes associated with JSErrorReport.\nUniquePtr is a smart pointer that wholly owns a resource.  …\nDescribes a single error or warning that occurs in the …\nPossible exception types. These types are part of a …\nEach external string has a pointer to …\nCalled at the end of collection when everything has been …\nCalled after sweeping a group of zones. All dead GC things …\nCalled when preparing to sweep a group of zones, before …\nCalled after preparing to sweep a group of zones. Weak …\nFinalize obj, which the garbage collector has determined …\nThe type of ObjectOps::funToString.  This callback allows …\nLower limit for collecting a zone (MB).\nWhether balanced heap limits are enabled.\nAmount of bytes allocated by the GC.\nThe chunk size in bytes for this system.\nWhether compacting GC is enabled.\nWhether to automatically generate missing allocation sites …\nHeap growth parameter for balanced heap limit calculation.\nThe number of background threads to use for parallel GC …\nThe number of background threads to use for parallel GC …\nHeap growth factor for large heaps in the high-frequency …\nHeap growth factor for small heaps in the high-frequency …\nGCs less than this far apart in milliseconds will be …\nWhether incremental GC is enabled. If not, GC will always …\nWhether incremental weakmap marking is enabled.\nLimit of how far over the incremental trigger threshold we …\nLower limit for classifying a heap as large (MB).\nHeap growth factor for low frequency GCs.\nA number that is incremented on every major GC slice.\nRetained size base value for calculating malloc heap …\nGet the number of threads used for parallel marking.\nMaximum nominal heap before last ditch GC.\nWe never keep more than this many unused chunks in the …\nThe maximum number of background threads to use for …\nSet the maximum number of threads to use for parallel …\nMaximum size of the generational GC nurseries.\nA number that is incremented on every minor GC.\nWe try to keep at least this many unused chunks in the …\nThe minimum time to allow between triggering last ditch …\nMinimum size of the generational GC nurseries.\nNumber of times GC has been invoked. Includes both major …\nThe delay (in heapsize kilobytes) between slices of an …\nFree space bytes threshold for eager nursery collection.\nFree space fraction threshold for eager nursery …\nJS::MaybeRunNurseryCollection will collect the nursery if …\nWhether parallel marking is enabled.\nThe heap size above which to use parallel marking.\nWhether per-zone GC is enabled. If not, all zones are …\nWhether the semispace nursery is enabled.\nA number that is incremented every GC slice.\nMax milliseconds to spend in an incremental GC slice.\nLimit of how far over the incremental trigger threshold we …\nUpper limit for classifying a heap as small (MB).\nThe system page size in KB.\nTotal number of allocated GC chunks.\nNumber of cached empty GC chunks.\nIn an incremental GC, this determines the point at which …\nThe delay (in heapsize kilobytes) between slices of an …\nA class, expected to be passed by value, which represents …\nThis struct contains metadata passed from the DOM to the …\nAn enum that describes what this getter/setter/method …\nA class, expected to be passed by value, which represents …\nA class with a resolve hook can optionally have a …\nWrapper to relace JSNative for JSPropertySpecs and …\nThe type of ObjectOps::enumerate. This callback overrides …\nHandler with callbacks for JS::ParseJSONWithHandler.\nThe property is visible in for/in loops.\nThe property is non-configurable: it can’t be deleted, …\nThe property is non-writable.  This flag is only valid for …\nResolve hooks and enumerate hooks must pass this flag when …\nCallback used by the wrap hook to ask the embedding to …\nDescription of a property. JS_DefineProperties and …\nResolve a lazy property named by id in obj by defining it …\nJSStructuredCloneData represents structured clone data …\nTiming information for telemetry purposes\nFunction type for trace operation of the class called to …\nCallback used to ask the embedding for the cross …\nused in debug builds to catch tracing errors\nA JS context always has an “owner thread”. The owner …\nRegister externally maintained GC roots.\nEquivalent to <code>Object.assign(target, src)</code>: Copies the …\nPerform the method call <code>rval = obj[name](args)</code>.\nCall a function, passing a this-value and arguments. This …\nConvert chars into a jsid.\nConcatenate two strings, possibly resulting in a rope. See …\nCopies all own properties and private fields from |obj| to …\nCopies the string’s characters to a null-terminated …\nFor JS_DecodeBytes, set *dstlenp to the size of the …\nFreeze obj, and all objects it refers to, recursively. …\nOther property-defining functions\nAdd various profiling-related functions as properties of …\nDefine a property on obj.\nDefine a property on obj, throwing a TypeError if the …\nDelete a property. This is the C++ equivalent of …\nDelete a property, ignoring strict failures. This is the …\nDO NOT USE, only present for Rust bindings as a temporary …\na hole in a native object’s elements\nWhen an error object is created without the error cause …\nDEPRECATED\nEncode string into a buffer. The function does not stores …\nDEPRECATED\nDEPRECATED\nGet an array of the non-symbol enumerable properties of …\nIf the given object is an exception object, the exception …\nEvaluate a script in the scope of the current global of cx.\nAs above, but providing an explicit scope chain.  envChain …\nGet the value of the property <code>obj[id]</code>, or undefined if no …\nPerform the same property assignment as …\nFreezes an object; see ES5’s Object.freeze(obj) method.\nA variant of JS_ShutDown for process which used …\nexception value thrown when closing a generator\nfor local use\nReturn the ArrayBuffer or SharedArrayBuffer underlying an …\nMore generic name for JS_GetTypedArrayByteLength to cover …\nMore generic name for JS_GetTypedArrayByteOffset to cover …\nSame as above, but for any kind of ArrayBufferView. Prefer …\nReturn a “fixed” pointer (one that will not move …\nReturn the ‘callbacks’ arg passed to …\nReturn a function’s display name as <code>name</code> out-parameter.\nReturn the function’s identifier as a JSString, or null …\nAlmost same as JS_GetFunctionDisplayId.\nAlmost same as JS_GetFunctionId.\nGet the value of the property <code>obj[id]</code>, or undefined if no …\nGet the prototype of |obj|, storing it in |proto|.\nIf |obj| (underneath any functionally-transparent wrapper …\nGet number of bytes in the string encoding (without …\nReturn the byte length of a typed array.\nReturn the byte offset from the start of an ArrayBuffer to …\nReturn the number of elements in a typed array.\nReturn the isShared flag of a typed array, which denotes …\nSpidermonkey does not have a good way of keeping track of …\nsee class js::HashableValue\nDetermine whether obj has an own property with the key <code>id</code>.\nCompute the expression <code>id in obj</code>.\nexception value thrown when interrupting irregexp\nmissing recover instruction result\nerror while running Ion code\nmagic value passed to natives to indicate construction\nConvert a uint32_t index into a jsid.\nDefines a builtin constructor and prototype. Returns the …\nAdd ‘Reflect.parse’, a SpiderMonkey extension, to the …\nCopy the own properties of src to dst in a fast way.  src …\nCheck whether obj supports JS_GetArrayBufferView* APIs. …\nTrue iff fun is the global eval function.\nTrue iff fun is the Function constructor.\nReturn whether the given function is a valid constructor.\nDetermine whether the given object is backed by a …\nDetermine whether obj is extensible. Extensible objects …\nTest if the given string is a valid ECMAScript identifier\nTest whether the given chars + length are a valid …\nCheck whether obj supports JS_GetTypedArray* APIs. Note …\nThis function calls |compartmentCallback| on every …\nThis function calls |compartmentCallback| on every …\nSet up ctor.prototype = proto and proto.constructor = ctor …\narguments object can’t be created because environment is …\nMark a jsid after entering a new compartment. Different …\nIf value stores a jsid (an atomized string or symbol), …\nIf the bufSize passed to JS_GetArrayBufferViewFixedData is …\nthere is not a pending iterator value\nCreate a new DataView using the given buffer for storage. …\nCreates a new dead wrapper object in the given scope. To …\nCreate a dependent string, i.e., a string that owns no …\nFill “properties” with a list of standard class names …\nFill “properties” with a list of standard class names. …\nCreate a new JSString whose chars member refers to …\nCreate a new JSString whose chars member may refer to …\nSimilar to JS_NewMaybeExternalStringLatin1.\nA constructor can request that the JS engine create a …\nUnlike JS_NewObject, JS_NewObjectWithGivenProto does not …\nAllocate an object in exactly the same way as …\nCreates a new plain object, like <code>new Object()</code>, with …\nMicroseconds since the epoch, midnight, January 1, 1970 …\noptimized out slot\nInfallible predicate to test whether obj is a function …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nPerforms the JSON.parse operation as specified by …\nAttempt to make |obj| non-extensible.\nImplements StructuredDeserialize and …\nUndo a call to JS_AddExtraGCRootsTracer.\nComplain when an allocation size overflows the maximum …\nReport an exception represented by the sprintf-like …\nComplain when out of memory.\nResolve id, which must contain either a string or an int, …\nan empty subnode in the AST serializer\nAssign ‘undefined’ to all of the object’s …\nThis function can be used to track memory used by ICU.  If …\nAttempt to make the [[Prototype]] of |obj| immutable, such …\nSet the size of the native stack that should not be …\nPerform the assignment <code>obj[id] = v</code>.\nChange the prototype of obj.\nDestroy free-standing resources allocated by SpiderMonkey, …\nPerforms the JSON.stringify operation, as specified by …\nuninitialized lexical bindings that produce ReferenceError …\nGiven a buffer, return false if the buffer might become a …\nWhen an error object is created without the error cause …\nImplements StructuredSerialize, …\nA wrapper for |js_free(p)| that may delay |js_free(p)| …\nSame as above, but for buffers that will be used with the …\nAbstract base class for an ECMAScript Job Queue: …\nInform the runtime that the job queue is empty and the …\nInform the runtime that job queue is no longer empty. The …\nA saved job queue, represented however the JobQueue …\nIf a large allocation fails when calling pod_…\nStore |v1 == v2| to |*equal| – loose equality, which may …\nCapture at most this many frames.\nTypes that don’t have their own TypedArray equivalent, …\nGet the script private value associated with an object, if …\nCheck whether the nursery should be eagerly collected as …\nIn memory reporting, we have concept of “sundries”, …\nThe HostImportModuleDynamically hook.\nThe module metadata hook.\nThe HostResolveImportedModule hook.\nMozRefCountType is Mozilla’s reference count type.\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nSimilar to a handle, but the underlying storage can be …\nCreate a new ArrayBuffer with the given byte length.\nMarker enum to notify callers that the buffer contents …\nCreate a new ArrayBuffer with the given non-null …\nCreate an Array from the current realm with the given …\nCreate an Array from the current realm with the given …\nCreate a new Date object for a …\nCreate a new ArrayBuffer with the given contents. The …\nCreate a new function based on the given JSFunctionSpec, *…\nSame as above, but without an id arg, for callers who don…\nCreate a new mapped ArrayBuffer with the given memory …\nReturns a new instance of the Promise builtin class in the …\nReturns a new instance of the ReadableStream builtin class …\nReturns a new instance of the ReadableStream builtin class …\nCreate a new RegExp for the given Latin-1-encoded bytes …\nCreate a new SharedArrayBuffer with the given byte length. …\nCreate a new Symbol with the given description. This …\nCreate a new RegExp for the given source and flags.\nA buffer that cannot contain Transferables at all. This …\nPerforms a non-incremental collection of all selected …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nHolds data about a notable class (one whose combined …\nHolds data about a notable script source file (one whose …\nHolds data about a notable string (one which, counting all …\nHint that we expect a crash. Currently, the only thing …\nCreate a BigInt from a floating-point value. If the number …\nStore in |out| the null-terminated, base-10 result of …\nThis layout is shared by all native objects. For …\nOn success, returns true, setting |*isDate| to true if …\nOn success, returns true, setting |*isRegExp| to true if …\nPer ES6, the [[DefineOwnProperty]] internal method has …\nDuring global creation, we fire notifications to callbacks …\nThe ConsumeStreamCallback is called from an active …\nES6 draft 20141224, 7.1.1, second algorithm.\nNone of the above.\nUnlike the error reporter, which is only called if the …\nCompilation options, with dynamic lifetime. An instance of …\nThe buffer owns any Transferables that it might contain, …\nPerforms the JSON.parse operation as specified by …\nA copyable, assignable global GC root type with arbitrary …\nA copyable, assignable global GC root type with arbitrary …\nA copyable, assignable global GC root type with arbitrary …\nSchedule all zones to be collected in the next GC.\nWhen performing an incremental GC, the zones that were …\nSchedule the given zone to be collected as part of the …\nA structure that represents a property on an object, or …\nCreate a jsid that does not need to be marked for GC.\nThe class representing a full set of compile options.\nSubset of CompileOptions fields used while decoding …\nRead structured data from the reader r. This hook is used …\nThis is called when JS_ReadStructuredClone receives a …\nCancels the given ReadableStream with the given reason and …\nClose the given ReadableStream. This is equivalent to …\nC++ equivalent of the <code>reader.read()</code> method on default …\nEnqueues the given chunk in the given ReadableStream.\nErrors the given ReadableStream, causing all future …\nRetrieves the desired combined size of additional chunks …\nReturns the embedding-provided underlying source of the …\nReturns the stream’s ReadableStreamMode. If the mode is …\nCreates a reader of the type specified by the mode option …\nReturns true if the given ReadableStream is disturbed, …\nReturns true if the given ReadableStream is locked, false …\nReturns true if the given ReadableStream is readable, …\nC++ equivalent of <code>reader.cancel(reason)</code> (both …\nReturns true if the given ReadableStream reader is locked, …\nC++ equivalent of <code>reader.releaseLock()</code> (both …\nBreak the cycle between this object and the …\nReleases the embedding-provided underlying source of the …\nTees the given ReadableStream and stores the two resulting …\nAbstract base class for external underlying sources.\nUpdate the amount of data available at the underlying …\nRealmBehaviors specifies behaviors of a realm that can be …\nRealmCreationOptions specifies options relevant to …\nRealmOptions specifies realm characteristics: both those …\nRegular expression flag values, suitable for initializing …\nAll regular expression flags.\nAct globally and find <em>all</em> matches (rather than stopping …\nAdd .indices property to the match result, i.e. /d\nInterpret regular expression source text …\nTreat ^ and $ as begin and end of line, i.e. /m.\nNo regular expression flags.\nOnly match starting from .lastIndex, i.e. /y.\nUse Unicode semantics, i.e. /u.\nUse Unicode Sets semantics, i.e. /v.\nA collection of regular expression flags.  Individual flag …\nRejects the given <code>promise</code> with the given <code>rejectionValue</code>.\nRelease the allocated resource of mapped ArrayBuffer …\nAdvise the GC that external memory reported by …\nRe-query the system to determine the current time zone …\nResolves the given Promise with the given <code>resolutionValue</code>.\nInstruct the runtime to restart draining the internal job …\n<code>Result</code> is intended to be the return type of JSAPI calls …\nEnumeratedArray is a fixed-size array container for use …\nLocal variable of type T whose value is always rooted. …\nLocal variable of type T whose value is always rooted. …\nLocal variable of type T whose value is always rooted. …\nThese measurements relate directly to the JSRuntime, and …\nData is embedding-specific. The engine can free it by …\nAll enum values at least this large are owned by the clone …\nData is a memory mapped pointer.\nTransferable data has not been filled in yet.\nStructured clone buffer does not yet own the data.\nSame as SCTAG_TMO_CUSTOM, but the embedding can also use …\nSafelyInitialized::create() creates a safely-initialized …\nThe most restrictive scope, with greatest efficiency and …\nStores |SameValue(v1, v2)| to |*equal| – using the …\nPrepareScriptEnvironmentAndInvoke asserts the embedder has …\nHooks called when references to a script private value are …\nThis class holds information about the memory taken up by …\nSpan - slices for C++\nThese are the measurements used by Servo.\nSpecify a callback to invoke when creating each JS object …\nPerform |obj.length = length| as if in strict mode code, …\nTransition the cx to a mode where failures that would …\nCalled when generating a GC slice budget. It allows the …\nThe purge gray callback is called after any …\nThe GC slice callback is called at the beginning and end …\nTell SpiderMonkey to use <code>queue</code> to schedule promise …\nSet the HostImportModuleDynamically hook for the runtime …\nSet the hook for populating the import.meta metadata …\nSet a private value associated with a source text module …\nSet the HostResolveImportedModule hook for the runtime to …\nEmbedder hook to set the buildId-generating function.\nTell JS engine whether Profile Timeline Recording is …\nSets the callback that’s invoked whenever a Promise is …\nSets the given Promise’s activation behavior state flag …\nSet a private value associated with a script. Note that …\nSet the script private finalize hook for the runtime to …\nAssociates a WindowProxy with a Window (global object). …\nTell the JS engine which Class is used for WindowProxy …\nCalled when a SharedArrayBuffer (including one owned by a …\nWhen a JSRuntime is destroyed it implicitly cancels all …\nTypes that don’t have their own TypedArray equivalent, …\nCreate a BigInt by parsing a string consisting of an …\nDo not trace into weak map keys or values during …\nUndoes the effect of the Prepare methods above. The given …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nmozilla::Variant\nBegin an incremental collection and perform one slice …\nSteal the contents of the given ArrayBuffer. The …\nInstruct the runtime to stop draining the internal job …\nStore |v1 === v2| to |*equal| – strict equality, which …\nThis class holds information about the memory taken up by …\nDetermine whether the given string is an array index in …\nOverload of StringIsArrayIndex taking a (char16_t*,length) …\nCreate a BigInt by parsing a string using the ECMAScript …\nThis is called when serialization or deserialization …\nIndicates the “scope of validity” of serialized data.\nThe TenuredHeap class is similar to the Heap class above …\nConvert a JS::Value to a BigInt using the ECMAScript …\nConvert the given BigInt, modulo 2**64, to a signed 64-bit …\nConvert the given BigInt, modulo 2**64, to an unsigned …\nGenerate getter/setter id for given id, by adding “get …\nPerforms the JSON.stringify operation, as specified by …\nAn API akin to JS_Stringify but with the goal of not …\nConvert obj to a primitive value. On success, store the …\nIf <code>obj</code> is a WindowProxy, get its associated Window (the …\nTrace through to all keys and values, irrespective of …\nTrace through to all values, irrespective of whether the …\nCalled when JS_WriteStructuredClone receives a …\nValues used to describe the ownership individual …\nThe common base class for the CompileOptions hierarchy.\nSpecial type that is a uint8_t, but assignments are …\nExisting code wants to be able to create an uninitialized …\nUniquePtr is a smart pointer that wholly owns a resource.  …\nThis scope is used when the deserialization context is …\nUnsets the gray bit for anything reachable from |thing|. …\nUse the runtime’s internal handling of job queues for …\n[SMDOC] JS::Value type\nCheck whether the nursery should be eagerly collected, …\nReport a warning represented by the sprintf-like …\nReport a warning represented by the sprintf-like …\nReport a warning represented by the sprintf-like …\nReturns true if the most recent GC ran incrementally.\nThe WasmModule interface allows the embedding to hold a …\nStructured data serialization hook. The engine can write …\nalready_AddRefed cooperates with reference counting smart …\nThe number of arguments to expand in the formatted error …\ncode_ is either one of the special codes OkCode or …\nOne of the JSExnType constants above.\nThe error format string in ASCII.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n|introductionType| is a statically allocated C string. See …\n…\nThe length in code units of |units_|.\nThe Web Platform allows scripts to be loaded from …\nThe error message name in ASCII.\nOptional hook called when an object is moved by …\nWhether this owns |units_| or merely observes source units …\nA DOM static method, used for Promise wrappers\n|char16_t| or |Utf8Unit| source units of uncertain …\nIf IsIncrementalGCInProgress(cx), this call aborts the …\nAdvise the GC of external memory owned by a JSObject. This …\nAdd and remove nursery collection callbacks for the given …\nUnforgeable, optimized version of the JS builtin …\nUnforgeable, optimized version of the JS builtin …\nCapture all frames.\nCopy data from one array buffer to another.\nCopy data from one array buffer to another.\nReturn true if the ArrayBuffer |obj| contains any data, …\nAsserts (in debug and release builds) that <code>obj</code> belongs to …\nAssert that code is only ever called from a GC callback, …\nDiagnostic assert (see MOZ_DIAGNOSTIC_ASSERT) that GC …\n[SMDOC] Protecting the debuggee’s job/microtask queue …\nEnsure that generational GC is disabled within some scope.\nPass a subclass of this “abstract” class to callees to …\nEnumeratedArray is a fixed-size array container for use …\nSave and later restore the current exception state of a …\nSupply an alternative stack to incorporate into captured …\nA simple RAII class that clears the registered warning …\nSame as BigIntFits(), but checks if the value fits inside …\nReturn true if the given BigInt is negative.\nConvert the given BigInt to a Number value as if calling …\nConvert the given BigInt to a String value as if …\nUniquePtr deleter for external buffer contents.\nVector of characters used for holding build ids.\nReturn the buildId (represented as a sequence of …\nGiven a SavedFrame JSObject stack, stringify it in the …\nCalls the current compartment’s original Promise.reject …\nCalls the current compartment’s original Promise.resolve …\nCreate a Promise with the given fulfill/reject handlers, …\nCapture the current call stack as a chain of SavedFrame …\nCheck whether the given source is a valid regexp. If the …\nClear kept alive objects in JS WeakRef. …\nClear the private value associated with a source text …\nData for tracking JIT-code memory usage.\nAn enum that JSIterateCompartmentCallback can return to …\nSpecification for which compartment/zone a newly created …\nCompile the provided script using the given options.  …\nCompile the provided script using the given options.  …\nCompile a function with envChain plus the global as its …\nCompile a function with envChain plus the global as its …\nIdentical to the CompileFunction overload above for UTF-8, …\nParse the given source buffer as a JSON module in the …\nParse the given source buffer as a module in the scope of …\nParse the given source buffer as a module in the scope of …\nCompilation options stored on the stack. An instance of …\nCompile the UTF-8 contents of the given file into a …\nCompile the UTF-8 contents of the file at the given path …\nInvoke a constructor. This is the C++ equivalent of …\nInvoke a constructor. This is the C++ equivalent of …\nReturns true if there are any live SharedArrayBuffer …\nGiven a SavedFrame object, convert it and its transitive …\nCreate a new ArrayBuffer, whose bytes are set to the …\nCreate memory mapped ArrayBuffer contents. Caller must …\nGet the current realm’s global. Returns nullptr if no …\nCustom rooting behavior for internal and external clients.\nDetach an ArrayBuffer, causing all associated views to no …\nWhen writing, this means we’re writing for an audience …\nHandle a backwards-compatibility case with IndexedDB (bug …\nIncremental GC defaults to enabled, but may be disabled …\nAttempt to disable Wasm’s usage of reserving a large …\nCallback to dispatch a JS::Dispatchable to a JSContext’s …\nThe Dispatchable interface allows the embedding to call …\nEncode a narrow multibyte character string to a UTF-8 …\nEncode a UTF-8 string to a narrow multibyte character …\nEncode a UTF-8 string to a wide string.\nEncode a wide string to a UTF-8 string.\nInstall an context wide callback that implements the …\nNB: This API is infallible; a nullptr return value does …\nType representing a JS error or exception. At the moment …\nEvaluate the given source buffer in the scope of the …\nAs above, but providing an explicit scope chain.  envChain …\nEvaluate the provided UTF-8 data in the scope of the …\nEvaluate the UTF-8 contents of the file at the given path, …\nIf the given object is an exception object (or an …\nExecute a regexp on a given input, starting from |indexp|. …\nExecute a regexp on a given input, starting from |indexp|. …\nDo true ephemeron marking with a weak key lookup marking …\nGet a statically allocated C string explaining the given …\nInstall a process-wide callback to validate script …\nThis must be called after a dynamic import operation is …\nIf IsIncrementalGCInProgress(cx), this call finishes the …\nCapture the first frame with the given principals. By …\nA convenience class for imitating a JS for-of loop. …\nSet all of the uninitialized lexicals on an object to …\nA GC pointer, tagged with the trace kind.\nA nursery collection callback receives the progress of the …\nDescribes the progress of an observed nursery collection.\nData for tracking GC memory usage.\nReturns the base size in bytes of the GC thing of kind …\nReturns a static string equivalent of |kind|.\nThe nursery collection is ending.\nThe nursery collection is starting.\nReturn the available byte length of an ArrayBuffer.\nReturn a pointer to the start of the data referenced by a …\nReturn a pointer to the start of the array buffer’s …\nGet the length, sharedness, and data from an …\nStore |*lengthp = ToLength(obj.length)| and return true on …\nDetermine the ECMAScript “class” – Date, String, …\nIf args.get(0) is one of the strings “string”, “…\nGet the HostImportModuleDynamically hook for the runtime.\nGet the hook for populating the import.meta metadata …\nGet the HostResolveImportedModule hook for the runtime.\nGet the global object associated with an object’s realm. …\nAttempt to unwrap |obj| as an ArrayBuffer.\nReturns a js::SavedFrame linked list of the stack that …\nReturns the current compartment’s original Promise …\nReturns the given Promise’s process-unique ID.\nReturns whether the given promise’s rejection is already …\nReturns the current compartment’s original …\nReturns the given Promise’s state as a JS::PromiseState …\nReturns the given Promise’s activation behavior state …\nReturn the source text for a RegExp object (or a wrapper …\nGiven a SavedFrame JSObject, get its asyncCause string. …\nGiven a SavedFrame JSObject, get its asyncParent …\nGiven a SavedFrame JSObject, get its column property. …\nGiven a SavedFrame JSObject, get its functionDisplayName …\nGiven a SavedFrame JSObject, get its line property …\nGiven a SavedFrame JSObject, get its parent SavedFrame …\nGiven a SavedFrame JSObject, get its source property. …\nGiven a SavedFrame JSObject, get an ID identifying its …\nReturn the SymbolCode telling what sort of symbol <code>symbol</code> …\nGet the [[Description]] attribute of the given symbol.\nSymbol.for as specified in ES6.\nUnforgeable version of the JS builtin Promise.all.\nGet one of the well-known symbols defined by ES6. A single …\nGet one of the well-known symbols defined by ES6 as …\nMeasurements that not associated with any individual …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nReference to a T that has been rooted elsewhere. This is …\nA generic handle to an array of rooted values.\nInforms the JS engine that the scripted caller should be …\nReturn whether an incremental GC has work to do on the …\nPerform a slice of an ongoing incremental collection. When …\nSubset of CompileOptions fields used while instantiating …\nReturn true if the GC reason is internal to the JS engine.\nES6 7.2.2.\nIdentical to IsArray above, but the nature of the object …\nThe answer to a successful query as to whether an object …\nCheck whether obj supports the …\nReturn the isShared flag of a ArrayBufferView subtypes, …\nDetermine whether |value| is an Array object or a wrapper …\nDetermine whether |obj| is an Array object or a wrapper …\nReturns true if capturing stack trace data to associate …\nReturn true if the given object is callable. In ES6 terms, …\nReturn true if the given object is a constructor. In ES6 …\nCheck whether the obj is a detached ArrayBufferObject. …\nWhether we are poisoning unused/released data for error …\nReturns true if any zone in the system has been scheduled …\nReturns true if generational allocation and collection is …\nReturns true if incremental GC is enabled. Simply having …\nReturns true while an incremental GC is ongoing, both when …")