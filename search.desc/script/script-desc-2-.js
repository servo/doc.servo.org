searchState.loadedDescShard("script", 2, "Convert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\n…\n…\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\n…\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nhttps://html.spec.whatwg.org/multipage/#dom-img-decode\nThe context required for asynchronously loading an …\n…\nUsed to mark abort\nThis is used in a type assertion to ensure that the source …\nCollect sequence of code points\nThe document associated with this request\nUpdate the current image with a valid URL.\nStep 15 for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe cache ID for this request.\nReference to the script thread image cache.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\nParse an <code>srcset</code> attribute: …\nStep 13-17 of …\nStep 24 of …\n…\nStep 2-12 of …\ntiming data for this resource\n…\nIndicates whether the request failed, and why\n…\n…\nStep 8-12 of …\nhttps://html.spec.whatwg.org/multipage/#dom-input-files\nThis is used in a type assertion to ensure that the source …\n…\n…\n…\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nWhether any of the loads have failed.\nThis is used in a type assertion to ensure that the source …\n…\nThe <code>fetch and process the linked resource</code> algorithm for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhttps://html.spec.whatwg.org/multipage/#concept-link-obtain\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>&lt;link&gt;</code> element that caused this prefetch operation\n…\nThe number of loads that this link element has triggered …\n…\nThe relations as specified by the “rel” attribute\nThe link relations as they are used in practice.\nA monotonically increasing counter that keeps track of …\n…\nThe url being prefetched\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWe were asked to stop pushing data to the player.\nIndicates the reason why a fetch request was cancelled.\nAn error ocurred while fetching the media data.\n…\n…\n…\nA new request overrode this one.\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nhttps://html.spec.whatwg.org/multipage/#attr-media-autoplay\nURL of the media resource, if the resource is set through …\nSome if the request has been cancelled.\nLatest fetch request context.\n…\n…\n…\nMarks that element as delaying the load event or not.\n…\nhttps://html.spec.whatwg.org/multipage/#dom-media-duration\nThe element that initiated the request.\nhttps://html.spec.whatwg.org/multipage/#dom-media-error\nExpected content length of the media asset being fetched …\nFetch canceller. Allows cancelling the current fetch …\nhttps://html.spec.whatwg.org/multipage/#fire-loadeddata\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFulfills the next in-flight play promises queue after …\nThe generation of the media element when this fetch …\nIncremented whenever tasks associated with this element …\nHandles insertion of <code>source</code> children.\nPlayer Id reported the player thread\nPlay promises which are soon to be fulfilled by a queued …\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#potentially-playing\nIndicates whether the fetched stream is seekable.\nNumber of the last byte fetched from the network for the …\nMedia controls id. In order to workaround the lack of …\nThe response metadata received to date.\nhttps://html.spec.whatwg.org/multipage/#dom-media-muted\n…\nTime of last progress notification.\nTime of last timeupdate notification.\nhttps://html.spec.whatwg.org/multipage/#dom-media-paused\n…\n…\n…\nhttps://html.spec.whatwg.org/multipage/#dom-media-played\nhttps://html.spec.whatwg.org/multipage/#poster-frame\nAppends a promise to the list of pending play promises.\nQueues a task to run the dedicated media source failure …\n…\nTiming data for this resource.\nURL of the media resource, if any.\nThe media player discards all data pushes until the seek …\nhttps://html.spec.whatwg.org/multipage/#dom-media-seeking\nBy default the audio is rendered through the audio sink …\nSets a new value for the show_poster propperty. If the …\nhttps://html.spec.whatwg.org/multipage/#show-poster-flag\nhttps://html.spec.whatwg.org/multipage/#dom-media-srcobject\nTakes the pending play promises.\n…\nhttps://html.spec.whatwg.org/multipage/#time-marches-on\nUrl for the resource.\nhttps://html.spec.whatwg.org/multipage/#dom-media-volume\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nhttps://html.spec.whatwg.org/multipage/#meta-referrer\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nhttps://html.spec.whatwg.org/multipage/#concept-meter-high\nhttps://html.spec.whatwg.org/multipage/#concept-meter-low\n…\n…\n…\nhttps://html.spec.whatwg.org/multipage/#dom-meter-high\nhttps://html.spec.whatwg.org/multipage/#dom-meter-low\n…\nhttps://html.spec.whatwg.org/multipage/#dom-meter-min\nhttps://html.spec.whatwg.org/multipage/#dom-meter-optimum\nhttps://html.spec.whatwg.org/multipage/#dom-meter-value\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nprefetching the image. This method must be called after …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#dom-progress-max\nhttps://html.spec.whatwg.org/multipage/#dom-progress-value\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe context required for asynchronously loading an …\nContains the error value\nContains the success value\nSupported script types as defined by …\nAn unique id for script element.\nhttps://html.spec.whatwg.org/multipage/#already-started\nThis is used in a type assertion to ensure that the source …\nThe (fallback) character encoding argument to the “fetch …\nThe response body received to date.\nThe element that initiated the request.\n…\n…\nThe fetch options of the script\nFinal steps of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique id for each script element\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kind of external script.\nTrack line line_number\nThe response metadata received to date.\nhttps://html.spec.whatwg.org/multipage/#non-blocking\nDocument of the parser that created this element\nhttps://html.spec.whatwg.org/multipage/#parser-inserted\nhttps://html.spec.whatwg.org/multipage/#prepare-a-script\n…\nTiming object for this resource\nhttps://html.spec.whatwg.org/multipage/#run-a-module-script\nSteps 1-2 of …\nIndicates whether the request failed, and why\nThe initial URL requested.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#dom-style-disabled\nhttps://drafts.csswg.org/cssom/#dom-linkstyle-sheet\nhttps://html.spec.whatwg.org/multipage/#dom-style-disabled\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#dom-table-deleterow\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine the index for this <code>HTMLTableRowElement</code> within …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\n…\nhttps://html.spec.whatwg.org/multipage/#template-contents\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nTrue if this response is invalid and should be ignored.\nhttps://html.spec.whatwg.org/multipage/#poster-frame\nThe element that initiated the request.\nhttps://html.spec.whatwg.org/multipage/#poster-frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncremented whenever tasks associated with this element …\nThe cache ID for this request.\nReference to the script thread image cache.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA copy of the last frame\nLoad event blocker. Will block the load event while the …\nPoster frame fetch request canceller.\nTiming data for this resource\nUrl for the resource\n…\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://html.spec.whatwg.org/multipage/#dom-imagedata-data\n…\nhttps://html.spec.whatwg.org/multipage/#dom-imagedata-width\nThis is used in a type assertion to ensure that the source …\nNothing must change the array on the JS side while the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/uievents/#dom-keyboardevent-altkey\nhttps://w3c.github.io/uievents/#dom-keyboardevent-charcode\nhttps://w3c.github.io/uievents/#dom-keyboardevent-code\n…\nhttps://w3c.github.io/uievents/#dom-keyboardevent-ctrlkey\n…\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\n…\nhttps://w3c.github.io/uievents/#dom-keyboardevent-keycode\nhttps://w3c.github.io/uievents/#dom-keyboardevent-location\nhttps://w3c.github.io/uievents/#dom-keyboardevent-metakey\nhttps://w3c.github.io/uievents/#dom-keyboardevent-repeat\nhttps://w3c.github.io/uievents/#dom-keyboardevent-shiftkey\nhttps://w3c.github.io/uievents/#dom-uievent-which\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReload triggered by a declarative refresh.\nThe “<code>Location</code>-object navigate” steps.\nUser-requested navigation (the unlabeled paragraph after …\nThe last step of <code>reload()</code> (<code>reload_triggered == true</code>)\nThis is used in a type assertion to ensure that the source …\nGet this <code>Location</code> object’s relevant <code>Document</code>, or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet this <code>Location</code> object’s relevant url or …\nGet if this <code>Location</code>’s relevant <code>Document</code> is non-null.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNavigate the relevant <code>Document</code>’s browsing context.\nPerform a user-requested reload (the unlabeled paragraph …\nThe common algorithm for <code>Location</code>’s setters and …\nThese are used to generate a event handler which has no …\nDOM struct implementation for simple interfaces inheriting …\nFor use on non-jsmanaged types Use #[derive(JSTraceable)] …\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://drafts.csswg.org/cssom/#dom-medialist-appendmedium\nhttps://drafts.csswg.org/cssom/#dom-medialist-deletemedium\nhttps://drafts.csswg.org/cssom/#dom-medialist-item\nhttps://drafts.csswg.org/cssom/#dom-medialist-item\nhttps://drafts.csswg.org/cssom/#dom-medialist-mediatext\nhttps://drafts.csswg.org/cssom/#dom-medialist-mediatext\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/mediasession/#dom-mediametadata-album\n…\n…\nhttps://w3c.github.io/mediasession/#dom-mediametadata-album\n…\nhttps://w3c.github.io/mediasession/#dom-mediametadata-title\nhttps://w3c.github.io/mediasession/#dom-mediametadata-title\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe media instance controlled by this media session. For …\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#dom-messagechannel\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#dom-messagechannel\nhttps://html.spec.whatwg.org/multipage/#messageevent\n…\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\nThe MessagePort used in the DOM.\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nhttps://html.spec.whatwg.org/multipage/#entangle\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nCreate a new port for an incoming transfer-received one.\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://dom.spec.whatwg.org/#dom-mutationobserver-observe\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://dom.spec.whatwg.org/#notify-mutation-observers\nhttps://dom.spec.whatwg.org/#queueing-a-mutation-record\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://www.w3.org/TR/gamepad/#dom-navigator-getgamepads\n…\n…\n…\nhttps://immersive-web.github.io/webxr/#dom-navigator-xr\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nhttps://www.w3.org/TR/gamepad/#dfn-gamepads\nhttps://www.w3.org/TR/gamepad/#dfn-hasgamepadgesture\nCalls <code>U::from(self)</code>.\n…\nhttps://dom.spec.whatwg.org/#dom-node-appendchild\nhttps://dom.spec.whatwg.org/#dom-node-baseuri\nThe context of the binding to tree of a node.\nSpecifies whether or not there is an authentic click in …\nMutation for when a Text node’s data is modified. This …\nhttps://dom.spec.whatwg.org/#dom-node-childnodes\nSpecifies whether children must be recursively cloned or …\nhttps://dom.spec.whatwg.org/#dom-node-clonenode\n…\nhttps://dom.spec.whatwg.org/#dom-node-contains\nhttps://dom.spec.whatwg.org/#dom-node-firstchild\nhttps://dom.spec.whatwg.org/#dom-node-lastchild\nhttps://dom.spec.whatwg.org/#dom-node-nextsibling\nhttps://dom.spec.whatwg.org/#dom-node-nodevalue\nhttps://dom.spec.whatwg.org/#dom-node-ownerdocument\nhttps://dom.spec.whatwg.org/#dom-node-parentelement\nhttps://dom.spec.whatwg.org/#dom-node-parentnode\nhttps://dom.spec.whatwg.org/#dom-node-previoussibling\nhttps://dom.spec.whatwg.org/#dom-node-getrootnode\nhttps://dom.spec.whatwg.org/#dom-node-textcontent\nWhether this element has already handled the stored …\nSpecifies whether this node needs style recalc on next …\nWhether this element has a snapshot stored due to a style …\nWhether this node has a weird parser insertion mode. i.e …\nhttps://dom.spec.whatwg.org/#dom-node-haschildnodes\nSpecifies whether this node’s shadow-including root is a …\nSpecifies whether this node is in a document.\nWhether this node participates in a shadow tree.\nhttps://dom.spec.whatwg.org/#dom-node-insertbefore\nhttps://dom.spec.whatwg.org/#dom-node-isconnected\nhttps://dom.spec.whatwg.org/#dom-node-isdefaultnamespace\nhttps://dom.spec.whatwg.org/#dom-node-isequalnode\nhttps://dom.spec.whatwg.org/#dom-node-issamenode\nhttps://dom.spec.whatwg.org/#dom-node-lookupnamespaceuri\nhttps://dom.spec.whatwg.org/#dom-node-lookupprefix\nAn HTML node.\nA summary of the changes that happened to a node.\nFlags for node items\nhttps://dom.spec.whatwg.org/#dom-node-nodename\nThe node’s <code>style</code> attribute changed.\nhttps://dom.spec.whatwg.org/#dom-node-nodetype\nhttps://dom.spec.whatwg.org/#dom-node-normalize\nOther parts of a node changed; attributes, text content, …\nSpecifies whether the parser has set an associated form …\nhttps://dom.spec.whatwg.org/#dom-node-removechild\nhttps://dom.spec.whatwg.org/#concept-node-replace\nSpecifies whether this node is focusable and whether it is …\nhttps://dom.spec.whatwg.org/#dom-node-nodevalue\nhttps://dom.spec.whatwg.org/#dom-node-textcontent\nWhether a tree traversal should pass shadow tree …\nsuppress observers flag …\nThe context of the unbinding from a tree of a node when …\nA node’s unique ID, for devtools.\nHelper trait to insert an element into vector whose …\nAdds a new child to the end of this node’s list of …\nAdd a new mutation observer for a given node.\nhttps://dom.spec.whatwg.org/#concept-node-adopt\nhttps://dom.spec.whatwg.org/#dom-childnode-after\nGet a flags value with all known bits set.\nhttps://dom.spec.whatwg.org/#dom-parentnode-append\nThis is used in a type assertion to ensure that the source …\nhttps://dom.spec.whatwg.org/#dom-childnode-before\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe Uuid of that unique ID.\nReturns the rendered bounding content box if the element …\nThe live list of children return by .childNodes.\nhttps://html.spec.whatwg.org/multipage/#child-text-content\nThe live count of children of this node.\nClear the style and opaque layout data of this node.\nhttps://dom.spec.whatwg.org/#concept-node-clone\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nClean up flags and unbind from tree.\nWhether all set bits in a source flags value are also set …\nReturns a string that describes this node.\nUsed by <code>HTMLTableSectionElement::DeleteRow</code> and …\n…\nThe intersection of a source flags value with the …\nDumps the subtree rooted at this node, for debugging.\nDumps the node tree, for debugging, with indentation.\nGet a flags value with all bits unset.\n…\nThe JavaScript reflector for this node.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nhttps://html.spec.whatg.org/#fire_a_synthetic_mouse_event\nThe first child of this node.\nIterate through <code>nodes</code> until we find a <code>Node</code> that is not in …\nA bitfield of flags for node items.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nIf the given untrusted node address represents a valid DOM …\nIf the given untrusted node address represents a valid DOM …\nReturns true if this node has a parent.\n…\nThe maximum version number of this node’s descendants, …\nThe maximum version of any inclusive descendant of this …\nThe index of the inclusive ancestor that was removed from …\nhttps://dom.spec.whatwg.org/#concept-tree-index\nThe index of the inclusive ancestor that was removed.\nInitialize the opaque layout data of this node.\nInitialize the style data of this node.\nhttps://dom.spec.whatwg.org/#concept-node-insert\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUsed by <code>HTMLTableSectionElement::InsertRow</code> and …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns true if this node is before <code>other</code> in the same …\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe last child of this node.\nLayout data for this node. This is populated during layout …\nhttps://dom.spec.whatwg.org/#concept-node-length\nhttps://dom.spec.whatwg.org/#locate-a-namespace\nIf nodes were added or removed at the start or end of a …\nCreate a new <code>UnbindContext</code> value.\nCreate a new <code>UniqueId</code> value. The underlying <code>Uuid</code> is lazily …\nhttps://dom.spec.whatwg.org/#concept-tree-following\nhttps://dom.spec.whatwg.org/#concept-tree-preceding\nhttps://dom.spec.whatwg.org/#concept-tree-order …\nGet the child that follows the added or removed children. …\nThe next sibling of the inclusive ancestor that was …\nThe next sibling of this node.\nSkips iterating the children of the current node\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe document that this node belongs to.\nThe parent of the inclusive ancestor that was removed.\nThe parent of this node.\nhttps://dom.spec.whatwg.org/#concept-node-pre-insert\nhttps://dom.spec.whatwg.org/#concept-node-pre-remove\nhttps://dom.spec.whatwg.org/#dom-parentnode-prepend\nThe previous sibling of the inclusive ancestor that was …\nThe previous sibling of this node.\nhttps://dom.spec.whatwg.org/#dom-parentnode-queryselector\n…\nhttps://dom.spec.whatwg.org/#scope-match-a-selectors-string\nA vector of weak references to Range instances of which …\nRare node data.\nReturn all registered mutation observers for this node. …\nhttps://dom.spec.whatwg.org/#concept-node-remove\nThe intersection of a source flags value with the …\nRemoves the given child from this node’s list of …\nRemoves the mutation observer for a given node.\nhttps://dom.spec.whatwg.org/#concept-node-replace-all\nhttps://dom.spec.whatwg.org/#dom-parentnode-replacechildren\nhttps://dom.spec.whatwg.org/#dom-childnode-replacewith\nhttps://dom.spec.whatwg.org/#retarget\n…\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nhttps://dom.spec.whatwg.org/multipage/#string-replace-all\nStyle data for this node. This is accessed and mutated by …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nIterates over this node and all its descendants, in …\nWhether the tree is connected.\nWhether the tree is connected.\nWhether the tree is in the document.\nWhether the tree is in doc.\nReturns the type ID of this node.\nhttps://dom.spec.whatwg.org/#concept-node-remove\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://drafts.css-houdini.org/css-paint-api/#paintsize\nhttps://drafts.css-houdini.org/css-paint-api/#paintsize\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA paint definition …\n…\nTasks which can be peformed by a paint worklet\n…\nThis is a blocking sleep function available in the paint …\nThis is used in a type assertion to ensure that the source …\nThe most recent arguments the worklet was drawn at\nThe most recent device pixel ratio the worklet was drawn at\nThe most recent name the worklet was called with\nThe most recent properties the worklet was drawn at\nThe most recent result\nThe most recent size the worklet was drawn at\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe image cache\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nThe worklet global for this object\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nImplementation of a list of PerformanceEntry items shared …\nAdd a PerformanceObserver to the list of observers with a …\nThis is used in a type assertion to ensure that the source …\nClear all buffered performance entries, and disable the …\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObservers notifications task.\nQueue a notification for each performance observer …\nRemove a PerformanceObserver from the list of observers.\n…\n<code>add a PerformanceResourceTiming entry</code> paragraph of …\nThe <code>timeOrigin</code> as described in …\nThis is used in a type assertion to ensure that the source …\nThe duration of this <code>PerformanceEntry</code>. This is a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOnly the current document resource is included in the …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nList of allowed performance entry types, in alphabetical …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrigger performance observer callback with the list of …\nBuffer a new performance entry.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an optional <code>CrossProcessInstant</code> to a …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn HTML processing instruction node.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrivate helper to enable adding new methods to <code>Rc&lt;Promise&gt;</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSince Promise values are natively reference counted …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://dom.spec.whatwg.org/#dom-range-clonecontents …\nhttps://dom.spec.whatwg.org/#dom-range-clonerange\nhttps://dom.spec.whatwg.org/#dom-range-collapse\n…\n…\nhttps://dom.spec.whatwg.org/#dom-range-comparepoint\nhttps://dom.spec.whatwg.org/#dom-range\n…\nhttps://dom.spec.whatwg.org/#dom-range-deletecontents\nhttps://dom.spec.whatwg.org/#dom-range-detach\nhttps://dom.spec.whatwg.org/#dom-range-extractcontents …\nhttps://dom.spec.whatwg.org/#dom-range-insertnode …\nhttps://dom.spec.whatwg.org/#dom-range-intersectsnode\nhttps://dom.spec.whatwg.org/#dom-range-ispointinrange\nhttps://dom.spec.whatwg.org/#dom-range-selectnode\nhttps://dom.spec.whatwg.org/#dom-range-selectnodecontents\nhttps://dom.spec.whatwg.org/#dom-range-setend\nhttps://dom.spec.whatwg.org/#dom-range-setendafter\nhttps://dom.spec.whatwg.org/#dom-range-setendbefore\nhttps://dom.spec.whatwg.org/#dom-range-setstart\nhttps://dom.spec.whatwg.org/#dom-range-setstartafter\nhttps://dom.spec.whatwg.org/#dom-range-setstartbefore\nhttps://dom.spec.whatwg.org/#dom-range-stringifier\nhttps://dom.spec.whatwg.org/#dom-range-surroundcontents\nThis is used in a type assertion to ensure that the source …\n…\nhttps://dom.spec.whatwg.org/#concept-range-clone\nhttps://dom.spec.whatwg.org/#contained\nUsed for steps 4-5. when removing a node. …\nUsed for steps 2-3. when removing a node. …\nUsed for steps 7.1-2. when normalizing a node. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUsed for steps 2.1-2. when inserting a node. …\nUsed for steps 7.4-5. when splitting a text node. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether that vector of ranges is empty.\nUsed for steps 7.2-3. when splitting a text node. …\nUsed for steps 7.3-4. when normalizing a node. …\nCreate a new vector of weak references.\nhttps://dom.spec.whatwg.org/#partially-contained\nUsed for steps 8-11. when replacing character data. …\nhttps://dom.spec.whatwg.org/#concept-range-bp-set\nhttps://dom.spec.whatwg.org/#concept-range-bp-set\nThe client rect reported by layout.\nThe shadow root the node belongs to. This is None if the …\n…\n…\n…\nhttps://html.spec.whatwg.org/multipage#elementinternals\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegistered observers for this node.\nThe “name” content attribute; not used as frequently …\nhttps://dom.spec.whatwg.org/#dom-element-shadowroot The …\nLazily-generated Unique Id for this node.\nA blob as underlying source, with a known total size.\nA fetch response as underlying source.\nFacilitate partial integration with sources that are …\nThis is used in a type assertion to ensure that the source …\nLoosely matches the underlying queue, …\nHas the stream been closed by native code?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUsed from RustCodegen.py\nReturn bytes for synchronous use, if the stream has all …\nReturn bytes synchronously if the stream has all data in …\nGet a pointer to the underlying JS object.\nGet the <code>value</code> property of an object that a read promise …\nGet the <code>done</code> property of an object that a read promise …\nDoes the stream have all data in memory?\nDoes the stream have all data in memory?\nDoes this stream contains all it’s data in memory?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClose a currently readable js stream.\nSignal available bytes if the stream is currently readable.\nBuild a stream backed by a Rust source that has already …\nBuild a stream backed by a Rust underlying source.\nRead a chunk from the stream, must be called after …\nAcquires a reader and locks the stream, must be done …\nReleases the lock on the reader, must be done after …\nhttps://fetch.spec.whatwg.org/#dom-body-body\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nState machine equivalent of active and skipped …\n…\nhttps://drafts.csswg.org/resize-observer/#resizeobservation\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\n…\n…\n…\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\nState machine mimicking the “active” and “skipped” …\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\n…\n…\n…\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\nNon-DOM implementation backing <code>ResizeObserverSize</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://fetch.spec.whatwg.org/#dom-body-body\nThis is used in a type assertion to ensure that the source …\nThe stream of https://fetch.spec.whatwg.org/#body.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nhttps://w3c.github.io/webrtc-pc/#dom-rtcicecandidate-sdpmid\n…\nhttps://w3c.github.io/webrtc-pc/#dom-rtcicecandidate-tojson\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://www.w3.org/TR/webrtc/#dom-rtcpeerconnection-close\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://www.w3.org/TR/webrtc/#update-ice-gathering-state\nhttps://www.w3.org/TR/webrtc/#update-ice-connection-state\n…\n…\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/webrtc-pc/#dom-sessiondescription\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nA pointer to the Rust DOM object of type T, but void to …\n…\nCallback for resolve/reject job promise for Register. …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nhttps://w3c.github.io/ServiceWorker/#reject-job-promise …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMessage common to all workers\nShutdown.\nMessage to request a custom response by the service worker\nMessages sent from the owning registration.\nMessages used to control service worker event loop\nWake-up call from the task queue.\nThis is used in a type assertion to ensure that the source …\nA receiver of control messages, currently only used to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nA port on which a single “time-out” message can be …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDoes this registration have an active worker?\nThe context required for asynchronously fetching a document\nThe parser maintains two input streams: one for input from …\nhttps://html.spec.whatwg.org/multipage/#abort-a-parser\nThis is used in a type assertion to ensure that the source …\nThe BOM sniffing state.\n…\nThe document associated with this parser.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe pipeline associated with this document.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nIs this a synthesized document\nWhether to expect any further input from the associated …\nThe decoder used for the network input.\nInput received from network.\nThe parser that initiated the request.\nWe do a quick-and-dirty parse of the input looking for …\npushed entry index\ntiming data for this resource\nCorresponds to the latter part of the “Otherwise” …\n…\nInput received from script. Used only to support …\n…\nWhether this parser should avoid passing any further data …\nThe tokenizer of this parser.\nThe URL for this document.\nSteps 6-8 of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe prefetch tokenizer produces trivial results\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://dom.spec.whatwg.org/#dom-shadowroot-host\nWhether a shadow root hosts an User Agent widget.\nhttps://dom.spec.whatwg.org/#dom-shadowroot-mode\nAdd a stylesheet owned by <code>owner</code> to the list of shadow root …\nThis is used in a type assertion to ensure that the source …\nList of author styles associated with nodes in this shadow …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAssociate an element present in this shadow tree with the …\nRemove a stylesheet owned by <code>owner</code> from the list of shadow …\nRemove any existing association between the provided id …\nhttps://dom.spec.whatwg.org/#dom-staticrange-staticrange\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#submitevent\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nhttps://w3c.github.io/webcrypto/#aes-cbc-operations\nhttps://w3c.github.io/webcrypto/#aes-cbc-operations\nhttps://w3c.github.io/webcrypto/#aes-ctr-operations\nhttps://w3c.github.io/webcrypto/#aes-cbc-operations …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhttps://w3c.github.io/webcrypto/#aes-cbc-operations …\nhttps://w3c.github.io/webcrypto/#aes-cbc-operations …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmaplike&lt;DOMString, long&gt;\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTasks which can be performed by test worklets.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn HTML text node.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://encoding.spec.whatwg.org/#dom-textdecoder\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://encoding.spec.whatwg.org/#dom-textencoder\nhttps://encoding.spec.whatwg.org/#dom-textencoder-encode\n…\nhttps://encoding.spec.whatwg.org/#dom-textencoder-encoding\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/touch-events/#widl-Touch-clientX\nhttps://w3c.github.io/touch-events/#widl-Touch-clientY\nhttps://w3c.github.io/touch-events/#widl-Touch-identifier\nhttps://w3c.github.io/touch-events/#widl-Touch-clientX\nhttps://w3c.github.io/touch-events/#widl-Touch-clientY\nhttps://w3c.github.io/touch-events/#widl-Touch-screenX\nhttps://w3c.github.io/touch-events/#widl-Touch-screenY\nhttps://w3c.github.io/touch-events/#widl-Touch-target\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/touch-events/#widl-TouchEvent-altKey\n…\nhttps://w3c.github.io/touch-events/#widl-TouchEvent-ctrlKey\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\nhttps://w3c.github.io/touch-events/#widl-TouchEvent-metaKey\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://w3c.github.io/touch-events/#widl-TouchList-length\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://w3c.github.io/uievents/#dom-uievent-uievent\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://url.spec.whatwg.org/#dom-url-canparse\nhttps://url.spec.whatwg.org/#constructors\nhttps://w3c.github.io/FileAPI/#dfn-createObjectURL\nhttps://url.spec.whatwg.org/#dom-url-hash\nhttps://url.spec.whatwg.org/#dom-url-host\nhttps://url.spec.whatwg.org/#dom-url-hostname\nhttps://url.spec.whatwg.org/#dom-url-href\nhttps://url.spec.whatwg.org/#dom-url-origin\nhttps://url.spec.whatwg.org/#dom-url-parse\nhttps://url.spec.whatwg.org/#dom-url-password\nhttps://url.spec.whatwg.org/#dom-url-pathname\nhttps://url.spec.whatwg.org/#dom-url-port\nhttps://url.spec.whatwg.org/#dom-url-protocol\nhttps://w3c.github.io/FileAPI/#dfn-revokeObjectURL\nhttps://url.spec.whatwg.org/#dom-url-search\nhttps://url.spec.whatwg.org/#dom-url-searchparams\nhttps://url.spec.whatwg.org/#dom-url-hash\nhttps://url.spec.whatwg.org/#dom-url-host\nhttps://url.spec.whatwg.org/#dom-url-hostname\nhttps://url.spec.whatwg.org/#dom-url-href\nhttps://url.spec.whatwg.org/#dom-url-password\nhttps://url.spec.whatwg.org/#dom-url-pathname\nhttps://url.spec.whatwg.org/#dom-url-port\nhttps://url.spec.whatwg.org/#dom-url-protocol\nhttps://url.spec.whatwg.org/#dom-url-search\nhttps://url.spec.whatwg.org/#dom-url-username\nhttps://url.spec.whatwg.org/#dom-url-tojson\nhttps://url.spec.whatwg.org/#url\nhttps://url.spec.whatwg.org/#dom-url-username\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://url.spec.whatwg.org/#dom-url-searchparams\n…\nhttps://url.spec.whatwg.org/#concept-url-url\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-append\n…\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-delete\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-get\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-getall\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-has\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-set\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-size\nhttps://url.spec.whatwg.org/#dom-urlsearchparams-sort\nhttps://url.spec.whatwg.org/#stringification-behavior\nhttps://url.spec.whatwg.org/#interface-urlsearchparams\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://url.spec.whatwg.org/#concept-urlsearchparams-list\nhttps://url.spec.whatwg.org/#concept-urlencoded-serializer\nhttps://url.spec.whatwg.org/#concept-urlsearchparams-update\n…\nTrait for elements with constraint validation support\n…\n…\n…\n…\nhttps://html.spec.whatwg.org/multipage/#concept-fv-valid\n…\nhttps://html.spec.whatwg.org/multipage/#dom-cva-validity\nGet a flags value with all known bits set.\nThis is used in a type assertion to ensure that the source …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGiven a set of ValidationFlags, recalculate their value by …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait to allow DOM nodes to opt-in to overriding (or …\nhttps://dom.spec.whatwg.org/#concept-node-adopt-ext\nReturns <code>true</code> if given attribute <code>attr</code> affects style of the …\nCalled when attributes of a node are mutated. …\nCalled when a Node is appended to a tree, where ‘…\nCalled on the parent when its children are changed.\nhttps://dom.spec.whatwg.org/#concept-node-clone-ext\nCalled during event dispatch after the bubbling phase …\nReturns the right AttrValue variant for the attribute with …\nCalled on an element when it is popped off the stack of …\nReturns self as the superclass of the implementation for …\nCalled when a Node is removed from a tree, where ‘…\nObtain a VirtualMethods instance for a given Node-derived …\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nList of domains for which WebGL 2 is enabled …\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExtensions written against both WebGL and WebGL2 specs.\nExtensions writen against a specific WebGL version spec.\nTrait implemented by WebGL extensions.\nEnable the extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChecks if the extension is supported.\nName of the WebGL Extension.\nCreates the DOM object of the WebGL extension.\nReturns which WebGL spec is this extension written against.\nWebGL features that are enabled/disabled by WebGL …\nHandles the list of implemented, supported and enabled …\nWebGL EXT_blend_minmax extension.\nWebGL GetParameter() names enabled by extensions.\nWebGL GetTexParameter() names enabled by extensions.\nWebGL GetAttribVertex() names enabled by extensions.\nWebGL OES_element_index_uint extension.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWebGL Hint() targets enabled by extensions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWebGL supported texture compression formats enabled by …\nTrait used internally by WebGLExtensions to store and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA depth less than an allowed minimal value was passed.\nInvalid border\nUnrecognized texture compression format.\nInvalid texture dimensions were given.\nAn invalid data type was passed.\nInvalid X/Y texture offset parameters.\nAn invalid texture format was passed.\nAn invalid texture target was passed, it contains the …\nInvalid data type for the given format.\nA level too high to be allowed by the implementation was …\nA level less than an allowed minimal value was passed.\nA negative width and height was passed.\nA negative level was passed.\nExpected a power of two texture.\nThe validated result of a TexImage2DValidator-validated …\nThe errors that the texImage* family of functions can …\nFormat did not match internal_format.\nThe passed texture target was not bound.\nA bigger with and height were passed than what the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTODO: Move data validation logic here.\nNB: width, height and level are already unsigned after …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe target to which this buffer was bound the first time\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://registry.khronos.org/webgl/specs/latest/1.0/#5.3\nhttps://registry.khronos.org/webgl/specs/latest/1.0/#5.3\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nglAttachShader\nglBindAttribLocation\nglDetachShader\nReturns the argument unchanged.\nglGetActiveAttrib\nglGetAttribLocation\nglGetFragDataLocation\nglGetProgramInfoLog\nglGetUniformLocation\nCalls <code>U::from(self)</code>.\nglLinkProgram\nglDeleteProgram\nglValidateProgram\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nSet of bitflags for texture unpacking (texImage2d, etc…)\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThis is used in a type assertion to ensure that the source …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nglCompileShader\nReturns the argument unchanged.\nReturns the argument unchanged.\nglGetShaderInfoLog\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMark this shader as deleted (if it wasn’t previously) …\nglShaderSource\nGet the shader source\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nFramebuffer that this texture is attached to.\nFace count can only be 1 or 6\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStores information about mipmap levels and cubemap faces.\nNumber of immutable levels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe target to which this texture was bound the first time\nWe have to follow the conversion rules for GLES 2.0. See: …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTask queued when <em>the WebSocket connection is established</em>. …\nhttps://html.spec.whatwg.org/multipage/#dom-websocket\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nAn instance of a value associated with a particular …\n…\nExtra information concerning the reason for reflowing.\n…\nhttps://html.spec.whatwg.org/multipage/#dom-structuredclone\nCurrent state of the window object\nPrepares to tick animations and then does a reflow which …\nThis is used in a type assertion to ensure that the source …\nA handle for communicating messages to the bluetooth …\nCreate a new cached instance of the given value.\nCancels all the tasks associated with that window.\nCancels all the tasks from a given task source. This sets …\nCross-process access to the compositor.\nhttps://dom.spec.whatwg.org/#window-current-event\nThe current state of the window object\nFor sending timeline markers. Will be ignored if no …\nA convenience method for …\nGlobal static data related to the DOM.\nEvaluate media query lists and report changes …\nFlag to identify whether mutation observers are …\nReflows the page unconditionally if possible and not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the stored value if it is still valid.\nIndicate whether a SetDocumentStatus message has been sent …\nCancel all current, and ignore all subsequently queued, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe JavaScript runtime.\nA shared marker for the validity of any cached layout …\nCommence a new URL load which will either replace this …\nDirectory with stored unminified scripts\nAll the MediaQueryLists we need to update\nAn enlarged rectangle around the page contents visible in …\n…\nParent id associated with this page, if any.\nAll of the elements that have an outstanding image request …\nA counter of the number of pending reflows for this window.\nhttps://drafts.csswg.org/cssom-view/#perform-a-scroll\nWindow’s GL context from application\n…\nTrue if it is safe to write to the image.\nReflows the page if it’s possible to do so and the page …\nEmits notifications when there is a relayout.\nReplace unpaired surrogates in DOM strings with U+FFFD. …\nhttps://drafts.csswg.org/cssom-view/#dom-window-scroll\nA list of scroll offsets for each scrollable element.\nFind the scroll area of the given node, if it is not None. …\nSets a new list of scroll offsets.\nSet whether to use less resources by running timers at a …\nFlag to suppress reflows. The first reflow will come …\nWorklets\nGet a sender to the time profiler thread.\nReturns the window proxy if it has not been discarded. …\nMost recent unhandled resize event, if any.\nDirectory to store unminified scripts for this window if …\nUnminify Javascript.\nIf writing a screenshot, synchronously update the layout …\nWhere to load userscripts from, if any. An empty string …\nA channel for communicating results of async scripts back …\nA handle for communicating messages to the WebGL thread, …\nThe Webrender Document id associated with this window.\nThis can panic if it is called after the browsing context …\nThe current size of the window, in pixels.\nA browsing context can have a creator browsing context, …\nProxy handler for a WindowProxy. Has ownership of the …\nThis is used in a type assertion to ensure that the source …\nCreator document base URL.\nThe id of the browsing context. In the case that this is a …\nhttps://html.spec.whatwg.org/multipage/#dom-window-close …\nhttps://html.spec.whatwg.org/multipage/#creator-base-url\nThe creator browsing context’s base url.\nhttps://html.spec.whatwg.org/multipage/#creator-origin\nThe creator browsing context’s origin.\nhttps://html.spec.whatwg.org/multipage/#creator-url\nThe creator browsing context’s url.\nThe pipeline id of the currently active document. May be …\n…\nHas the browsing context been discarded?\nHas the browsing context been disowned?\nThe containing iframe element, if this is a same-origin …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#is-closing\nhttps://html.spec.whatwg.org/multipage/#is-closing\n…\nThe name of the browsing context (sometimes, but not …\nCreates a new WindowProxy object on the C++ side and …\nCreator document origin.\nThe parent browsing context’s window proxy, if this is a …\nReturns a single, shared WindowProxyHandler that contains …\nThe JS WindowProxy object. Unlike other reflectors, we …\nChange the Window that this WindowProxy resolves to.\n…\n…\nThe frame id of the top-level ancestor browsing context. …\nCreator document URL.\nReturns a single, shared WindowProxyHandler that contains …\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nA pointer to the Rust DOM object of type T, but void to …\nSender to the Receiver associated with the …\nhttps://html.spec.whatwg.org/multipage/#dom-structuredclone\nA <code>Sender</code> for sending messages to devtools. This is unused …\nThis is used in a type assertion to ensure that the source …\nClear various items when the worker event-loop shuts-down.\nA <code>Receiver</code> for receiving messages from devtools.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProcess a single event as if it were the next event in the …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://drafts.css-houdini.org/worklets/#worklet\nThe control message sent to worklet threads\nThe data messages sent to worklet threads\nAn executor of worklet tasks\nA guid for worklets.\nA thread for executing worklets.\nData to initialize a worklet thread.\nWorklets execute in a dedicated thread pool.\nA role that a worklet thread can be playing.\nThis is used in a type assertion to ensure that the source …\nA one-place buffer for control messages\nThe thread’s receiver for control messages\nThe current memory usage of the thread\nLoads a worklet module into every worklet thread. If all …\nFetch and invoke a worklet script. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPerform a GC.\nGet the worklet global scope for a given worklet. Creates …\nData for initializing new worklet global scopes\nData for initializing new worklet global scopes\nThe global scopes created by this thread\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform a task.\nSenders\nSenders\nProcess a control message.\nWhich role the thread is currently playing\nThe main event loop for a worklet thread\nRun a task in the main script thread.\nThe JS runtime\nSchedule a worklet task to be peformed by the worklet …\nCreate a new thread pool and spawn the threads. When the …\nSpawn a new worklet thread, returning the channel to send …\nFor testing.\nThe cached version of the script thread’s …\nA paint worklet\nA servo-specific testing worklet\nhttps://drafts.css-houdini.org/worklets/#workletglobalscope\nResources required by workletglobalscopes\n…\nA task which can be performed in the context of a worklet …\nThis is used in a type assertion to ensure that the source …\nThe base URL of this global.\nThe base URL for this worklet.\nChannel to devtools\nEvaluate a JS script in this global.\nThe worklet executor.\nWorklet task executor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the JS context.\nThe global for this worklet.\nIdentity manager for WebGPU resources\nThe image cache\nIs considered secure\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if in headless mode\nChannel to the memory profiler\nCreate a new heap-allocated <code>WorkletGlobalScope</code>.\nCreate a new stack-allocated <code>WorkletGlobalScope</code>.\nPerform a worklet task\nRegister a paint worklet to the script thread.\nChannel to a resource thread\nMessage to send to the scheduler\nChannel to the time profiler\nMessages to send to constellation\nSender back to the script thread\nChannel to the main script thread\nAn optional string allowing the user agent to be set for …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://xhr.spec.whatwg.org/#the-abort()-method\nhttps://xhr.spec.whatwg.org/#constructors\nLoading is done\nThere was an error (only Error::Abort, Error::Timeout or …\n…\nhttps://xhr.spec.whatwg.org/#the-getresponseheader()-method\nhttps://xhr.spec.whatwg.org/#the-responsetext-attribute\nhttps://xhr.spec.whatwg.org/#the-responsexml-attribute\nNotify that headers have been received\nPartial progress (after receiving headers), containing …\nhttps://xhr.spec.whatwg.org/#the-open()-method\nhttps://xhr.spec.whatwg.org/#the-open()-method\nhttps://xhr.spec.whatwg.org/#the-overridemimetype()-method\nhttps://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate\nhttps://xhr.spec.whatwg.org/#the-response-attribute\nhttps://xhr.spec.whatwg.org/#the-responsetype-attribute\nhttps://xhr.spec.whatwg.org/#the-responseurl-attribute\nhttps://xhr.spec.whatwg.org/#the-send()-method\nhttps://xhr.spec.whatwg.org/#the-setrequestheader()-method\nhttps://xhr.spec.whatwg.org/#the-responsetype-attribute\nhttps://xhr.spec.whatwg.org/#the-timeout-attribute\n…\nhttps://xhr.spec.whatwg.org/#the-status-attribute\nhttps://xhr.spec.whatwg.org/#the-statustext-attribute\nhttps://xhr.spec.whatwg.org/#the-timeout-attribute\nhttps://xhr.spec.whatwg.org/#the-upload-attribute\nhttps://xhr.spec.whatwg.org/#the-withcredentials-attribute\nClosure of required data for each async network event that …\nhttps://xhr.spec.whatwg.org/#arraybuffer-response\nThis is used in a type assertion to ensure that the source …\nhttps://xhr.spec.whatwg.org/#blob-response\nhttps://xhr.spec.whatwg.org/#document-response\nhttps://xhr.spec.whatwg.org/#final-charset\nhttps://xhr.spec.whatwg.org/#final-mime-type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether <code>bs</code> is a <code>field-value</code>, as defined by RFC 2616…\nhttps://xhr.spec.whatwg.org/#json-response\nA pointer to the Rust DOM object of type T, but void to …\nhttps://xhr.spec.whatwg.org/#response-mime-type\nhttps://xhr.spec.whatwg.org/#text-response\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nhttps://immersive-web.github.io/webxr/#dom-xrframe-getpose\nhttps://immersive-web.github.io/webxr/#dom-xrframe-getpose\n…\n…\nhttps://immersive-web.github.io/webxr/#dom-xrframe-session\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://immersive-web.github.io/webxr/#xrframe-active\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://immersive-web.github.io/webxr/#xrinputsourcearray\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf none, the session is inline (the composition disabled …\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://www.w3.org/TR/webxr/#dom-xrpose-emulatedposition\nhttps://www.w3.org/TR/webxr/#dom-xrpose-angularvelocity\nhttps://www.w3.org/TR/webxr/#dom-xrpose-linearvelocity\nhttps://immersive-web.github.io/webxr/#dom-xrpose-transform\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://immersive-web.github.io/hit-test/#dom-xrray-xrray\n…\n…\nhttps://immersive-web.github.io/hit-test/#dom-xrray-matrix\nhttps://immersive-web.github.io/hit-test/#dom-xrray-origin\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nGet a transform that can be used to locate the base space\nGets pose represented by this space\nGets pose represented by this space\nCalls <code>U::from(self)</code>.\n…\n…\nhttps://dom.spec.whatwg.org/#dom-event-istrusted\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://immersive-web.github.io/webxr/#dom-xrpose-transform\n…\nhttps://www.w3.org/TR/webxr/#dom-xrsession-enabledfeatures\nhttps://immersive-web.github.io/webxr/#dom-xrsession-end\n…\nhttps://www.w3.org/TR/webxr/#dom-xrsession-framerate\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nhttps://www.w3.org/TR/webxr/#apply-the-nominal-frame-rate\nThis is used in a type assertion to ensure that the source …\nhttps://immersive-web.github.io/webxr/#ended\nReturns the argument unchanged.\nReturns the argument unchanged.\nCached projection matrix for inline sessions\nConstructs a View suitable for inline sessions using the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpaque framebuffers need to know the session is “outside …\nhttps://immersive-web.github.io/webxr/#xr-animation-frame\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nGets pose represented by this space\nCalls <code>U::from(self)</code>.\nIf we’re an input space, are we an aim space or a grip …\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\nThis is used in a type assertion to ensure that the source …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://immersive-web.github.io/webxr/#dom-xrview-eye\n…\n…\n…\n…\nhttps://immersive-web.github.io/webxr/#dom-xrview-transform\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\nhttps://immersive-web.github.io/webxr/#dom-xrviewport-width\nhttps://immersive-web.github.io/webxr/#dom-xrviewport-x\nhttps://immersive-web.github.io/webxr/#dom-xrviewport-y\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nIf none, this is an inline session (the composition …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\n…\nThis is used in a type assertion to ensure that the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://fetch.spec.whatwg.org/#fetch-method\nRAII fetch canceller object. By default initialized to not …\nCancel a fetch if it is ongoing\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nUse this if you don’t want it to send a cancellation …\nObtain an IpcReceiver to send over to Fetch, and initialize\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience function for synchronously loading a whole …\nCreate an empty FetchCanceller\nA wrapper around elements that ensures layout can only …\nA wrapper around a <code>LayoutDom&lt;Node&gt;</code> which provides a safe …\nA wrapper around elements that ensures layout can only …\nA wrapper around a <code>ServoLayoutNode</code> that can be used safely …\nThe wrapped private DOM Document\nThe wrapped private DOM Element.\nThe wrapped private DOM node.\nThe wrapped <code>ServoLayoutNode</code>.\nThe pseudo-element type, with (optionally) a specified …\nThe pseudo-element type, with (optionally) a specified …\nThe wrapped private DOM ShadowRoot.\nThe wrapped private DOM Document\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA wrapper around elements that ensures layout can only …\nA wrapper around elements that ensures layout can only …\nImmutably borrows the ElementData.\nThe shadow root which roots the subtree this element is …\nThe wrapped private DOM Element.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether there is an ElementData container.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this element is the body child of an html …\nMutably borrows the ElementData.\nReturns the parent element of this element, if it has one.\nThe pseudo-element type, with (optionally) a specified …\nUnset the snapshot flags on the underlying DOM object for …\nThe shadow root this element is a host of.\nConvert an opaque element back into the element.\nUnset the snapshot flags on the underlying DOM object for …\nA wrapper around a <code>LayoutDom&lt;Node&gt;</code> which provides a safe …\nA wrapper around a <code>ServoLayoutNode</code> that can be used safely …\nGet the first child of this node. Important: this is not …\nGet the next sibling of this node. Important: this is not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the interior of this node as a <code>LayoutDom</code>.\nReturns the interior of this node as a <code>LayoutDom</code>. This is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>ServoLayoutNode</code> for this given …\nCreates a new <code>ServoThreadSafeLayoutNode</code> from the given …\nThe wrapped private DOM node.\nThe wrapped <code>ServoLayoutNode</code>.\nThe pseudo-element type, with (optionally) a specified …\nFlush the stylesheets for the underlying shadow root.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe wrapped private DOM ShadowRoot.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe set of allowed relations for <code>&lt;a&gt;</code> and <code>&lt;area&gt;</code> elements\nThe set of allowed relations for <code>&lt;form&gt;</code> elements\nThe set of allowed relations for <code>&lt;link&gt;</code> elements\nhttps://html.spec.whatwg.org/multipage/#rel-alternate\nhttps://html.spec.whatwg.org/multipage/#link-type-author\nhttps://html.spec.whatwg.org/multipage/#link-type-bookmark\nhttps://html.spec.whatwg.org/multipage/#link-type-canonical\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-expect\nhttps://html.spec.whatwg.org/multipage/#link-type-external\nhttps://html.spec.whatwg.org/multipage/#link-type-help\nhttps://html.spec.whatwg.org/multipage/#rel-icon\nhttps://html.spec.whatwg.org/multipage/#link-type-license\nDescribes the different relations that can be specified on …\nhttps://html.spec.whatwg.org/multipage/#link-type-manifest\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-next\nhttps://html.spec.whatwg.org/multipage/#link-type-nofollow\nhttps://html.spec.whatwg.org/multipage/#link-type-noopener\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-opener\nhttps://html.spec.whatwg.org/multipage/#link-type-pingback\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-prefetch\nhttps://html.spec.whatwg.org/multipage/#link-type-preload\nhttps://html.spec.whatwg.org/multipage/#link-type-prev\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-search\n…\nhttps://html.spec.whatwg.org/multipage/#link-type-tag\n…\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\n…\nCompute the set of relations for an element given its <code>&quot;rel&quot;</code>…\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nParse one single link relation keyword\n…\n…\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUsed by codegen to include the pointer to the <code>MallocSizeOf</code> …\nA promise callback scheduled to run during the next …\nA collection of microtasks in FIFO order.\nA microtask that comes from a queueMicrotask() Javascript …\n…\nAdd a new microtask to this queue. It will be invoked as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe list of enqueued microtasks that will be invoked at …\n…\nA task for moving the async network events between threads.\nAn off-thread sink for async network event tasks. All such …\nA gating mechanism that runs before invoking the task on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA function to register module hooks (e.g. listening on …\nhttps://tc39.es/ecma262/#sec-hostgetimportmetaproperties …\n…\nThe context required for asynchronously loading an …\nIdentity for a module which will be used to retrieve the …\nThe owner of the module It can be <code>worker</code> or <code>script</code> element\n…\n…\n…\nThe response body received to date.\n…\n…\nDestination of current module context\n…\n…\n…\n…\n…\n…\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe response metadata received to date.\nOptions for the current script fetch\nThe owner of the module that initiated the request.\n…\nrecursively checks if all of the transitive descendants are\nThe following module specifiers are allowed by the spec:\nTiming object for this resource\nIndicates whether the request failed, and why\nThe initial URL requested.\nA compile-time marker that there are operations that could …\nRequests that the script thread measure its memory usage. …\nCommon messages used to control the event loops in both …\nA cloneable interface for communicating with an event loop.\nAn interface for receiving ScriptMsg values in an event …\nGeneric message that encapsulates event handling.\nA version of the <code>JSContext</code> that can be used from other …\nClone this handle.\nImplements the steps to compile webassembly response …\nSM callback for promise job resolution. Adds a promise …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>JSContext</code> object from the given raw pointer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new runtime, optionally with the given …\nCreate a new runtime, optionally with the given …\nCreate a new CanGc value, representing that a GC operation …\n…\n…\nCall <code>JS_RequestInterruptCallback</code> from the SpiderMonkey API.\nCall <code>JS_RequestInterruptCallbackCanWait</code> from the …\nSend a message to the associated event loop.\nCommon variants associated with the script messages\nThe set of all documents managed by this script thread.\nA document load that is in the process of fetching the …\nA task related to a not fully-active document has been …\nEncapsulates internal communication of main thread …\nMessages used to control the script event loop.\nNotifies the script thread that a new paint worklet has …\nIn the event of thread panic, all data on the stack runs …\nEncapsulates internal communication of shared messages …\nWake-up call from the task queue.\nNotifies the script thread that a new worklet has been …\nThe activity level of the document (inactive, active or …\nThe dedicated means of communication with the …\nA handle to the bluetooth thread.\nThe browsing context being loaded into.\nCheck if we are closing.\nFor cancelling the fetch\nA channel to hand out to script thread-based entities that …\nCheck that two origins are “similar enough”, for now …\nList of pipelines that have been owned and closed by this …\nA flag set to <code>true</code> by the BHM on exit, and checked from …\nCross-process access to the compositor’s API.\nA channel to hand out to threads that need to respond to a …\nThe port on which the constellation and layout can …\n…\nFor providing instructions to an optional devtools server.\nFor receiving commands from an optional devtools server. …\nA list of pipelines containing documents that finished …\nThe documents for pipelines managed by this thread\nTurn javascript: URL into JS code to eval, according to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdentity manager for WebGPU resources\nQueue compositor events for later dispatching as part of a …\nHandles a request to exit a pipeline and shut down layout.\nHandles a request to exit the script thread and shut down …\nHandles a request for the window title.\nNotify the containing document of a child iframe that has …\nHandle incoming messages from other tasks and the task …\nHandle a “navigate an iframe” message from the …\nWe have received notification that the response associated …\nWindow was resized, but this script was not active, so don…\nBatch window resize operations into a single “update the …\nHandles activity change message\nUpdates iframe element after a change in visibility\nNotify a window of a storage event\nHandles animation tick requested during testing.\nHandles a Web font being loaded. Does nothing if the page …\nHandles a worklet being loaded. Does nothing if the page …\nTrue if headless mode.\nImage cache for this script thread.\nThe channel on which the image cache can send messages to …\nThe port on which we receive messages from the image cache\nA list of data pertaining to loads that have not yet …\nA vector containing parser contexts which have not yet …\nIf inheriting the security context\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCode is running as a consequence of a user interaction\nThe JavaScript runtime.\n…\nA factory for making new layouts. This allows layout to …\nA sender for layout to communicate to the constellation.\nThe entry point to document loading. Defines bindings, …\nDirectory with stored unminified scripts\nFor providing contact with the memory profiler.\nhttps://html.spec.whatwg.org/multipage/#microtask-queue\nMicrotask Queue for adding support for mutation observer …\nThe unit of related similar-origin browsing contexts’ …\nStep 13 of https://html.spec.whatwg.org/multipage/#navigate\nTimestamp reporting the time when the browser started this …\nCreate a new InProgressLoad object.\nCreates a new script thread.\nA set of all nodes ever created in this script thread\nThe opener, if this is an auxiliary.\nThe origin for the document\nSynchronously parse a srcdoc document from a giving HTML …\nThe parent pipeline and frame type associated with this …\nThe pipeline which requested this load.\nApplication window’s GL Context for Media player\nInstructs the constellation to fetch the document that …\nTrue if it is safe to write to the image.\nWe are closing, ensure no script can run and potentially …\nPrint Progressive Web Metrics to console.\nProcess a single event as if it were the next event in the …\nProcess a compositor mouse move event.\nProcess compositor events as part of a “update the …\nPeriodically print out on which events script threads …\nReflows non-incrementally, rebuilding the entire layout …\nEmits notifications when there is a relayout.\n…\nReplace unpaired surrogates in DOM strings with U+FFFD. …\nA handle to the resource thread. This is an <code>Arc</code> to avoid …\n…\nFor communicating load url messages to the constellation\nStarts the script thread. After calling this method, the …\nSynchronously fetch <code>about:blank</code>. Stores the <code>InProgressLoad</code> …\nA proxy to the <code>SystemFontService</code> to use for accessing …\nA queue of tasks to be executed in this script-thread.\nWindow is throttled, running timers at a heavily limited …\nFor providing contact with the time profiler.\nThe top level ancestor browsing context.\nThe topmost element over the mouse.\nSafety\nUnminify Javascript.\n…\nUsed to batch rendering opportunities\nThe requested URL of the load.\nAn optional string allowing the user agent to be set for …\nWhere to load userscripts from, if any. An empty string …\nA handle to the WebGL thread\nReceiver to receive commands from optional WebGPU server.\nThe Webrender Document ID associated with this thread.\nThe WebXR device registry\nThe window proxies known by this thread TODO: this map …\nThe current window size associated with this pipeline.\nThe worklet thread pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nWhen updating a registration, which worker are we …\nhttps://w3c.github.io/ServiceWorker/#dfn-service-worker\nA structure managing all registrations and workers for a …\n…\nhttps://w3c.github.io/ServiceWorker/#dfn-active-worker\nThe closing flag for the worker.\nA context to request an interrupt.\nA channel to send control message to the worker, currently …\nhttps://html.spec.whatwg.org/multipage/#terminate-a-worker\nForward a DOM message to the running service worker scope.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhttps://w3c.github.io/ServiceWorker/#get-newest-worker\nhttps://w3c.github.io/ServiceWorker/#register-algorithm\nhttps://w3c.github.io/ServiceWorker/#update\nA unique identifer.\nA unique identifer.\nhttps://w3c.github.io/ServiceWorker/#dfn-installing-worker\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA handle to join on the worker thread.\n…\nhttps://w3c.github.io/ServiceWorker/#dfn-script-url\nSend a message to the running service worker scope.\nA sender to the running service worker scope.\n…\nhttps://w3c.github.io/ServiceWorker/#update-algorithm\nhttps://w3c.github.io/ServiceWorker/#dfn-waiting-worker\nThe context required for asynchronously loading an …\nThe response body received to date.\nThe node document for elem when the load was initiated.\nThe element that initiated the request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNotes that a new load is pending to finish.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns None if there are still pending loads, or whether …\nReturns whether this element was inserted by the parser …\nWhich referrer policy should loads triggered by this owner …\nA token which must match the generation id of the …\nRequest a stylesheet after parsing a given <code>@import</code> rule, …\nSets origin_clean flag.\nAuthor stylesheet set.\nDocument stylesheet set.\nFunctionality common to DocumentStylesheetSet and …\nAppends a new stylesheet to the current set.\nReturns the argument unchanged.\nInsert a given stylesheet before another stylesheet in the …\nCalls <code>U::from(self)</code>.\nRemove a given stylesheet from the set.\nA task that can be cancelled by toggling a shared flag.\nA boxed version of <code>TaskOnce</code>.\nEncapsulated state required to create cancellable tasks …\nA task that can be run. The name method is for profiling …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a wrapped <code>task</code> that will be cancelled if the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDefining the operations used to convert from a msg T to a …\nReturns the argument unchanged.\nTasks for not fully-active documents.\nCalls <code>U::from(self)</code>.\nA queue from which the event-loop can drain tasks.\nThe original port on which the task-sources send tasks as …\nProcess incoming tasks, immediately sending priority ones …\nTake a message from the front of the queue, without …\nRelease previously held-back tasks for documents that are …\nReset the queue for a new iteration of the event-loop, …\nHold back tasks for currently not fully-active documents. …\nDrain the queue for the current iteration of the …\nTake all tasks again and then run <code>recv()</code>.\nA “business” counter, reset for each iteration of the …\nTasks that will be throttled for as long as we are “busy…\nA sender to ensure the port doesn’t block on select …\nhttps://www.w3.org/TR/gamepad/#dfn-gamepad-task-source\n…\nThe names of all task sources, used to differentiate …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis queues a task that will not be cancelled when its …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhttps://html.spec.whatwg.org/multipage/#timer-task-source\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncapsulates the IDL <code>ByteString</code> type.\nA DOMString.\nA traced reference to a DOM object\nA mutable field in the DOM.\nAn HTML node.\nA safe wrapper around a DOM Promise object that can be …\nThe live list of children return by .childNodes.\nThe live count of children of this node.\nThe JavaScript reflector for this node.\nThe first child of this node.\nA bitfield of flags for node items.\nThe maximum version of any inclusive descendant of this …\nThe last child of this node.\nLayout data for this node. This is populated during layout …\nThe next sibling of this node.\nThe document that this node belongs to.\nThe parent of this node.\nThe previous sibling of this node.\nA vector of weak references to Range instances of which …\nRare node data.\nStyle data for this node. This is accessed and mutated by …\nParse an <code>srcset</code> attribute: …\nThe direction in which to delete a character.\nResulting action to be taken by the owner of a text input …\nControl whether this control should allow multiple lines.\nEncapsulated state for handling keyboard input in a single …\nAdjust the editing point position by a given number of …\nAdjust the editing point position by exactly one grapheme …\nReturn whether to cancel the caret move\nAdjust the editing point position by a given number of …\nThe length of the content in Unicode code points.\nRemove the current selection.\nRemove the current selection and set the edit point to the …\nReturns a TextPoint constrained to be a valid location …\nReturn the length in bytes of the current line under the …\nRemove a character at the current editing point\nCurrent cursor input point\nRun the callback on a series of slices that, concatenated, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current contents of the text input. Multiple lines …\nProcess a given <code>KeyboardEvent</code> and return an action for the …\nDeal with a newline input.\nWhether or not there is an active selection (the selection …\n0-based column number in bytes\nInsert a character at the current editing point\nInsert a string at the current editing point\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the content is empty.\nThe length in bytes of the first n characters in a UTF-8 …\nThe length in bytes of the first n code units in a string …\nThe length of the content in bytes.\n0-based line number\nCurrent text input content, split across lines without …\nThe maximum number of UTF-16 code units this text input is …\nIs this a multiline input?\nInstantiate a new text input control\nConvert a byte offset from the start of the content into a …\nSelect all text in the input control.\nThe end of the selection (or the edit point, if there is …\nThe byte offset of the selection_end()\nThe current selection goes from the selection_origin until …\nThe selection origin, or the edit point if there is no …\nThe start of the selection (or the edit point, if there is …\nThe byte offset of the selection_start()\nThe state of the current selection. Can be used to compare …\nThe length of the selected text in UTF-16 code units.\nSet the current contents of the text input. If this is …\nSet the edit point index position based off of a given …\nGet a reference to the contents of a single-line text …\nReturns a tuple of (start, end) giving the bounds of the …\nReturn the selection range as byte offsets from the start …\nConvert a TextPoint into a byte offset from the start of …\nUpdate the field selection_direction.\nThe total number of code units required to encode the …\nWas last edit made by set_content?\nWas last change made by set_content?\n…\nCalls to <code>fire_timer</code> with a different argument than this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed to introduce a minimum delay in event intervals\nThe nesting level of the currently executing timer task or …\nThe sender to the timer scheduler in the constellation.\nInitially 0, increased whenever the associated document is …\nThe sender, to be cloned for each timer, on which the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")