searchState.loadedDescShard("winit", 0, "Winit is a cross-platform window creation and event loop …\nEnd user application handling.\nChangelog and migrations\nThe <code>Event</code> enum and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\nTypes related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nThe handler of the application events.\nEmitted when the event loop is about to block and wait for …\nEmitted when the OS sends an event to a device.\nEmitted when the event loop is being shut down.\nEmitted when the application has received a memory warning.\nEmitted when new events arrive from the OS to be processed.\nEmitted when the application has been resumed.\nEmitted when the application has been suspended.\nEmitted when an event is sent from …\nEmitted when the OS sends an event to a winit window.\n0.10.1\n0.11.3\n0.12.0\n0.13.1\n0.14.0\n0.15.1\n0.16.2\n0.17.2\n0.18.1\n0.19.1\n0.20.0\n0.21.0\n0.22.2\n0.23.0\n0.24.0\n0.25.0\n0.26.1\n0.27.5\n0.28.7\n0.29.15\n0.30.5\n0.8.3\n0.9.0\nAn error produced when using <code>CustomCursor::from_rgba</code> with …\nProduced when the length of the <code>rgba</code> argument isn’t …\nSee <code>Window::set_cursor()</code> for more details.\nUse a custom image as a cursor (mouse pointer).\nSource for <code>CustomCursor</code>.\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the hotspot is outside the image bounds\nThe maximum width and height for a cursor when using …\nPlatforms export this directly as <code>PlatformCustomCursor</code> if …\nPlatforms export this directly as …\nProduced when the image dimensions are larger than …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new cursor from an rgba buffer.\nPlatforms should make sure this is cheap to clone.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA position represented in logical pixels.\nA size represented in logical pixels.\nA logical pixel unit.\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a maximum physical unit that is equal to …\nRepresents a maximum logical unit that is equal to <code>f64::MAX</code>…\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nRepresents a minimum physical unit of <code>f64::MAX</code>.\nRepresents a minimum logical unit of <code>f64::MAX</code>.\nA position represented in physical pixels.\nA size represented in physical pixels.\nA physical pixel unit.\nA pixel unit that’s either physical or logical.\nA position that’s either physical or logical.\nA size that’s either physical or logical.\nRepresents a logical unit of <code>0_f64</code>.\nRepresents a physical unit of <code>0_f64</code>.\nRepresents a logical unit of <code>0_f64</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks that the scale factor is a normal positive <code>f64</code>.\nA general error that may occur while running the Winit …\nApplication has exit with an error status.\nAn error that may be generated when requesting Winit state\nThe operation was ignored.\nThe operation is not supported by the backend.\nThe operation is not supported by the backend.\nThe error type for when the requested operation is not …\nThe OS cannot perform the operation.\nThe OS cannot perform the operation.\nThe error type for when the OS cannot perform the …\nThe event loop can’t be re-created.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ApplicationHandler::about_to_wait</code> for details.\nThe activation token was delivered back and now could be …\nIdentifier for a specific analog axis on some device.\nMotion on some analog axis. May report data redundant to …\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nNotifies when text should be inserted into the editor …\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nSee <code>ApplicationHandler::device_event</code> for details.\nIdentifier of an input device.\nNotifies when the IME was disabled.\nDouble tap gesture.\nA file has been dropped into the window.\nDescribes the input state of a key.\nNotifies when the IME was enabled.\nDescribes a generic event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nDescribes input method events.\nAn event from an input method.\nSent once, immediately after <code>run</code> is called. Indicates that …\nHandle to synchronously change the size of the window from …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nSee <code>ApplicationHandler::exiting</code> for details.\nSee <code>ApplicationHandler::memory_warning</code> for details.\nDescribes keyboard modifiers event.\nThe keyboard modifiers have changed.\nMotion on some analog axis. This event will be reported …\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nSee <code>ApplicationHandler::new_events</code> for details.\nIf the platform reports the force as normalized, we have …\nThe window has been occluded (completely hidden from view).\nN-finger pan gesture\nTwo-finger pinch gesture, often used for magnification.\nAmount in pixels to scroll in the horizontal and vertical …\nSent if the event loop is being resumed after the loop’s …\nNotifies when a new composing text should be set at the …\nDescribes a keyboard input as a raw device event.\nEmitted when a window should be redrawn.\nThe size of the window has changed. Contains the client …\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nSee <code>ApplicationHandler::resumed</code> for details.\nTwo-finger rotation gesture.\nThe window’s scale factor has changed.\nDescribes the reason the event loop is resuming.\nSee <code>ApplicationHandler::suspended</code> for details.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad pressure event.\nSee <code>ApplicationHandler::user_event</code> for details.\nSent if the OS has new events to send to the window, after …\nDescribes an event from a <code>Window</code>.\nSee <code>ApplicationHandler::window_event</code> for details.\nReturns a dummy id, useful for unit testing.\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier of a finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if <code>self == Pressed</code>.\nThe state of the left alt key.\nThe state of the left control key.\nContains the location of this key on the keyboard.\nThis value is affected by all modifiers except Ctrl.\nThe state of the left shift key.\nThe state of the left super key.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nPlatform-specific key event information.\nThe state of the right alt key.\nThe state of the right control key.\nWhether or not this key is a key repeat event.\nTry to request inner size which will be set synchronously …\nThe state of the right shift key.\nThe state of the right super key.\nThe state of the modifiers.\nWhether the key is being pressed or released.\nContains the text produced by this keypress.\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nPositive values indicate magnification (zooming in) and  …\nChange in pixels of pan gesture from last update.\nchange in rotation in degrees\nHandle to update inner size during scale changes.\nIf <code>true</code>, the event was generated synthetically by winit in …\n(x,y) coords in pixels relative to the top-left corner of …\nTarget that associates windows with an <code>EventLoop</code>.\nReport device events regardless of window focus.\nA unique identifier of the winit’s async request.\nSet through <code>ActiveEventLoop::set_control_flow()</code>.\nControl when device events are captured.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nThe error that is returned when an <code>EventLoopProxy</code> attempts …\nUsed to send custom events to <code>EventLoop</code>.\nNever capture device events.\nA proxy for the underlying display handle.\nWhen the current loop iteration finishes, immediately …\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nOnly capture device events while the window is focused.\nGet the underlying EventLoop’s <code>fd</code> which you can register …\nGet the underlying EventLoop’s raw <code>fd</code> which you can …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nStart building a new event loop.\nClear exit status.\nGets the current <code>ControlFlow</code>.\nCreate custom cursor.\nCreate custom cursor.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreate a window.\nCreate the window.\nShim for various run APIs.\nThis exits the event loop.\nReturns if the <code>EventLoop</code> is about to stop.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange if or when <code>DeviceEvent</code>s are captured.\nChange if or when <code>DeviceEvent</code>s are captured.\nCreate the event loop.\nStart building a new event loop.\nGets a persistent reference to the underlying platform …\nGets a persistent reference to the underlying platform …\nReturns the primary monitor of the system.\nSee <code>run_app</code>.\nRun the application with the event loop on the calling …\nSend an event to the <code>EventLoop</code> from which this proxy was …\nSets the <code>ControlFlow</code>.\nSets the <code>ControlFlow</code>.\nReturns the current system theme.\nCreates a <code>ControlFlow</code> that waits until a timeout has …\nStart building a new event loop, with the given type as …\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nAn icon used for the window titlebar, taskbar, etc.\nFor platforms which don’t have window icons (e.g. web)\nProduced when underlying OS functionality failed to create …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an icon from 32bpp RGBA data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nA known key code\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nCode representing the location of a physical key\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nThe state of the particular modifiers key.\nRepresents the current state of the keyboard modifiers\nA simple (unparameterised) action\nA <code>Key::Named</code> value\nContains the platform-native logical key identifier\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nRepresents the location of a physical key.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe particular key is pressed.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nA <code>SmolStr</code> is a string type that has the following …\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nThe state of the key is unknown.\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA “key value string”.\nA Windows “scancode”.\nA Windows “virtual-key code”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nAn XKB “keysym”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nConvert <code>Key::Character(SmolStr)</code> to <code>Key::Character(&amp;str)</code> so …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nConstructs inline variant of <code>SmolStr</code>.\nConstructs a <code>SmolStr</code> from a statically allocated string.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConvert an action to its approximate textual equivalent.\nConvert a key to its approximate textual equivalent.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDeprecated! Use <code>VideoModeHandle</code> instead.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode in mHz.\nThe monitor refresh rate used by the system.\nReturns the scale factor of the underlying monitor. To map …\nReturns the resolution of this video mode.\nReturns the monitor’s resolution.\nReturns all fullscreen video modes supported by this …\nWindow startup notification to handle window raising.\nWayland\nX11\nAdditional methods for the <code>KeyEvent</code> which cannot be …\nThis value ignores all modifiers including, but not …\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nContinue running external loop.\nAdditional methods on <code>EventLoop</code> for pumping events within …\nExit external loop.\nThe return status for <code>pump_events</code>\nA type provided by the user that can be passed through …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPump the <code>EventLoop</code> to check for and dispatch pending …\nSee <code>pump_app_events</code>.\nAdditional methods on <code>EventLoop</code> to return control flow to …\nA type provided by the user that can be passed through …\nRun the application with the event loop on the calling …\nSee <code>run_app_on_demand</code>.\nAdditional methods for the <code>PhysicalKey</code> type that allow the …\nConstructs a <code>PhysicalKey</code> from a platform-specific physical …\nThe raw value of the platform-specific physical key …\nThe variable which is used mostly on Wayland.\nThe variable which is used mostly on X11.\nRead the token from the environment.\nRequest a new activation token.\nRemove the activation environment variables from the …\nSet environment variables responsible for activation token.\nUse this <code>ActivationToken</code> during window creation.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to Wayland.\nTrue if the <code>ActiveEventLoop</code> uses Wayland.\nTrue if the <code>EventLoop</code> uses Wayland.\nReturns the inner identifier of the monitor.\nWhether to allow the event loop to be created off of the …\nBuild window with the given name.\nForce using Wayland.\nAdditional methods on <code>ActiveEventLoop</code> that are specific to …\nThis should be used on the windows that are popped up by …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nAdditional methods on <code>EventLoopBuilder</code> that are specific …\nAdditional methods on <code>EventLoop</code> that are specific to X11.\nPinnable menu windows. “Torn off” from the main …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nA popup menu that usually appears when the user right …\nThe window is a splash screen displayed as an application …\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nA small persistent utility window, such as a palette or …\nAdditional methods on <code>WindowAttributes</code> that are specific …\nAdditional methods on <code>Window</code> that are specific to X11.\nX window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.\nA unique identifier for an X11 visual.\nA unique identifier for an X11 window.\nThe first argument in the provided hook will be the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the <code>ActiveEventLoop</code> uses X11.\nTrue if the <code>EventLoop</code> uses X11.\nReturns the inner identifier of the monitor.\nHook to winit’s xlib error handling callback.\nWhether to allow the event loop to be created off of the …\nBuild window with base size hint.\nEmbed this window into another parent window.\nBuild window with the given <code>general</code> and <code>instance</code> names.\nBuild window with override-redirect flag; defaults to …\nForce using X11.\nCreate this window with a specific X11 visual.\nBuild window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …\nHelper for converting between platform-specific and generic\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHooks for X11 errors.\nThe parent window to embed this window into.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the minimum <code>Option&lt;Duration&gt;</code>, taking into account …\nWinit’s Wayland backend.\n<code>x11_or_wayland!(match expr; Enum(foo) =&gt; foo.something())</code> …\nlibxkbcommon is not available\nXKB compose handling.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey builder context with the user provided xkb state.\nKey builder context with the user provided xkb state.\nXKB keymap.\nShared logic for constructing a string with …\nXKB state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new state with the given compose table.\nModifier index in the keymap.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether the given key repeats.\nMap the raw X11-style keycode to the <code>KeyCode</code> enum.\nMap the linux scancode to Keycode.\nRepresents the current state of the keyboard modifiers\nThe “alt” key\nThe “Caps lock” key\nThe “control” key\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe “logo” key\nCheck if the modifier is active within xkb.\nThe “Num lock” key\nReload the modifiers.\nThe “shift” key\nCalloop error.\nError connecting to the socket.\nDummy device id, since Wayland doesn’t have device …\nError during the dispatching the event queue.\nError binding the global.\nWayland\nThe event-loop routines.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default routine does floor, but we need round on …\nGet the WindowId out of the surface.\nSeat handling.\nWayland protocol implementation boilerplate.\nThe Wayland window.\nThe Wayland event loop.\nConnection to the wayland server.\nConnection to the wayland server.\nThe application’s latest control_flow state\nCalloop’s event loop.\nThe event loop wakeup source.\nThe application’s exit state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHas <code>run</code> or <code>run_on_demand</code> been called or a call to …\nPending events from the user.\nAn event loop proxy.\nThe main queue used by the event loop.\nAn event loop’s sink to deliver events from the Wayland …\nWinit state.\nSender of user events.\nThe Wayland dispatcher to has raw access to the queue when …\nDispatcher of Wayland events.\nEvent loop window target.\nA handle that can be sent across the threads and used to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn event loop’s sink to deliver events from the Wayland …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if there’re pending events.\nAdd new device event to a queue.\nAdd new window event to a queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe keyboard input handling.\nThe keyboard bound on the seat.\nThe current modifiers state on the seat.\nWhether we have pending modifiers.\nThe pointer events.\nThe pointer bound on the seat.\nThe relative pointer bound on the seat.\nThe text input bound on the seat.\nTouch handling.\nThe touch bound on the seat.\nThe mapping from touched points to the surfaces they’re …\nKeys should not be repeated.\nKeyboard user data.\nThe state of the keyboard on the current seat.\nKeys will be repeated at the specified rate and delay.\nThe rate at which a pressed key is repeated.\nThe current repeat raw key.\nThe default repeat rate is 25 keys per second with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe underlying WlKeyboard.\nLoop handle to handle key repeat.\nThe information about the repeat rate obtained from the …\nThe token of the current handle inside the calloop’s …\nThe seat used to create this keyboard.\nThe currently focused window surface. Could be <code>None</code> on …\nThe state of the keyboard.\nDelay (in milliseconds) between a key press and the start …\nThe time between the key repeats.\nThe associated confined pointer.\nActive window.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inner winit data associated with the pointer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast button serial.\nSerial of the last button event.\nLast enter serial.\nThe associated locked pointer.\nCurrent axis phase.\nRelative pointer.\nThe data required by the sctk.\nSeat associated with this pointer.\nCurrently focused window.\nConvert the Wayland button into winit.\nWrapper around the relative pointer.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate new relative pointer manager.\nThe state of the preedit.\nThe Data associated with the text input.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe commit to submit on <code>done</code>.\nThe preedit to submit on <code>done</code>.\nThe <code>WlSurface</code> we’re performing input to.\nThe state of the touch point.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe location of the point on the surface.\nThe surface on which the point is present.\nWinit’s Wayland state.\nClose the window.\nThe compositor state which is used to create new windows …\nThe pool where custom cursors are allocated.\nWhether we have dispatched events to the user thus we want …\nSink to accumulate window events from the compositor, …\nFractional scaling manager.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKWin blur manager.\nLoop handle to re-register event sources, such as keyboard …\nObserved monitors.\nThe state of the WlOutput handling.\nPointer constraints to handle pointer locking and …\nCurrently present cursor surfaces.\nThe WlRegistry.\nRelative pointer.\nNew window size.\nNew scale factor.\nThe seat state responsible for all sorts of input.\nCurrently handled seats.\nThe shm for software buffers, such as cursors.\nThe state of the subcompositor.\nThe state of the text input on the client.\nViewporter state on the given window.\nThe update for the <code>windows</code> coming from the compositor.\nThe events that were generated directly from the window.\nThe id of the window this updates belongs to.\nThe requests from the <code>Window</code> to EventLoop, such as close …\nThe currently present windows.\nXdg activation.\nThe XDG shell that is used for windows.\nHandling of KDE-compatible blur.\nHandling of the fractional scaling.\nHandling of the wp-viewporter.\nHandling of xdg activation, which is used for user …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKWin blur manager.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFractional scaling manager.\nThe scaling factor denominator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new viewporter.\nThe surface used for scaling.\nViewporter.\nReturns the argument unchanged.\nGet the viewport for the given object.\nCalls <code>U::from(self)</code>.\nCreate new viewporter.\nRequest user attention for the given surface.\nGet a token to be passed outside of the winit.\nThe data associated with the activation request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Wayland window.\nThe request from the window to the event loop.\nThe state of the requested attention from the …\nThe window was closed.\nCompositor to handle WlRegion stuff.\nThe wayland display used solely for raw window handle.\nSource to wake-up the event-loop for window requests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObserved monitors.\nHandle to the main queue to perform requests.\nRedraw Requested.\nSet the maximum inner size for the window.\nSet the minimum inner size for the window.\nThe state of the window, which is shared with the …\nReference to the underlying SCTK window.\nThe event sink to deliver synthetic events.\nWindow id.\nWindow requests to the event loop.\nThe state of the window.\nXdg activation to request user attention.\nThe state of the frame callback.\nThe state of the cursor grabs.\nNo frame callback was requested.\nThe callback was marked as done, and user could receive …\nThe frame callback was requested, but not yet arrived, the …\nThe state of the window which is being updated from the …\nAdd seat focus for the window.\nApply closure on the given pointer.\nThe state of the compositor to create WlRegions.\nThe connection to Wayland server.\nWhether the CSD fail to create, so we don’t try to …\nThe current grab mode.\nThe current cursor grabbing mode.\nWhether the cursor is visible.\nWhether we should decorate the frame.\nStart interacting drag resize.\nStart the window drag.\nThe window frame, which is created from the configure …\nThe frame callback was received, but not yet sent to the …\nReset the frame callbacks state.\nGet the current state of the frame callback.\nThe state of the frame callback.\nTells whether the window should be closed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether the window is focused by any seat.\nWhether the client side decorations have pending move …\nWhether the IME is allowed.\nWhether the IME input is allowed for that window.\nGet the IME purpose.\nThe current IME purpose.\nInitial window size provided by the user. Removed on the …\nGet the size of the window.\nCompute the bounds for the inner size of the surface.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the window received initial configure event from …\nThe last received configure.\nMin size.\nCreate new window state.\nGet the outer size of the window.\nPointer constraints to lock/confine pointer.\nRegister pointer on the top-level.\nPointer has left the top-level.\nThe pointers observed on the window.\nQueue handle.\nRefresh the decorations frame if it’s present returning …\nReload the cursor style on the given window.\nReload the hints for minimum and maximum sizes.\nReissue the transparency hint to the compositor.\nRemove seat focus from the window.\nRequest a frame callback if we don’t have one for this …\nTry to resize the window when the user can do so.\nGet the stored resizable state.\nWhether the frame is resizable.\nResize the window to the new inner size.\nGet the scale factor of the window.\nThe scale factor of the window.\nSeats that has keyboard focus on that window.\nMake window background blurred\nSet the cursor icon.\nSet the cursor grabbing state on the top-level.\nSet the grabbing state on the surface.\nSet the position of the cursor.\nSet the visibility state of the cursor.\nSet the custom cursor icon.\nWhether show or hide client side decorations.\nReturns <code>true</code> if the requested state was applied.\nSet the IME position.\nSet the IME purpose.\nSet maximum inner window size.\nSet maximum inner window size.\nSet the resizable state on the window.\nSet the scale factor for the given window.\nSet the CSD theme.\nSet the window title to a new value.\nMark the window as transparent.\nThe <code>Shm</code> to set cursor.\nThe inner size of the window, as in without client side …\nThe size of the window when no states were applied to it. …\nRegister text input on the top-level.\nThe text input left the top-level.\nThe text inputs observed on the window.\nThe current theme for CSD decorations.\nTheme variant.\nGet the cached title.\nThe current window title.\nWhether the window is transparent.\nThe grab mode requested by the user.\nThe underlying SCTK window.\nAn error that occurred while trying to connect to the X …\nAn error that occurred over the connection medium.\nExtension trait for <code>Result&lt;VoidCookie, E&gt;</code>.\nFailed to get property.\nGot an invalid activation token.\nAn extension that we rely on is not available.\nCould not find a matching X11 visual for this visualid\nGot <code>null</code> from an Xlib function without a reason.\nType alias for a void cookie.\nAn error that occurred logically on the X11 end.\nGeneric sum error type for X11 errors.\nThe underlying x11rb connection that we are using.\nThe XID range has been exhausted.\nAn error from the Xlib library.\nUnable to parse xsettings.\nX11 activation handling.\nCollects every atom used by the platform implementation.\nUnwrap the send error and ignore the result.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe programmed interest\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe programmed mode\nThe current state of the event loop.\nUpdate the device event based on window focus.\nThe latest readiness state for the x11 file descriptor\nReturns the <code>XConnection</code> of this events loop.\nConvert the raw X11 representation for a 32-bit floating …\nParser for the xsettings data format.\nPush a <code>Display</code> implementation to the buffer.\nQuote a literal string as per the startup notification …\nIndices into the <code>Atoms</code> struct.\nThe atoms used by <code>winit</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe X11 documentation states: “Keycodes lie in the …\nThe maximum amount of X modifiers to replay.\nXFilterEvent tells us when an event has been discarded by …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLatest modifiers we’ve sent for the user to trigger …\nThis is generally a reliable way to detect when the window …\nSend modifiers for the active window.\nGet the platform window target.\nGet the platform window target.\nNo value.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAllow IME input for the given <code>window_id</code>.\nRequest to control XIM handler from the window.\nSet IME spot position for given <code>window_id</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIME creation error.\nGot null pointer from Xlib but without exact reason.\nStruct to simplify callback creation and latter passing …\nGot the error from Xlib.\nThe callback used by XIM preedit functions.\nWrapper for creating XIM callbacks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHandling of cursor movements in preedit text.\nDone callback is used when the preedit should be hidden.\nPreedit text information to be drawn inline by the client.\nThe server started preedit.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInput method could not be opened using any locale modifier …\nInput method used internal fallback locale modifier.\nNo IME.\nNothing.\nPreedit callbacks.\nStyle of the IME context.\nInput method used locale modifier from <code>XMODIFIERS</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of attached CRTCs.\nThe size of the monitor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe actual id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of attached modes.\nThe name of the monitor\nThe position of the monitor in the X screen\nIf the monitor is the primary one\nUsed to determine which windows are on this monitor\nThe refresh rate used by monitor.\nThe DPI scale factor\nSupported video modes on this monitor\nUtilities for handling mouse events.\nXEvents of type GenericEvent store their actual data in an …\nBorrow inner event data as <code>&amp;T</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRecorded mouse delta designed to filter out noise.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents values of <code>WINIT_HIDPI_FACTOR</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn iterator over the “windows” of the property that we …\nKeep a reference to <code>T</code>.\nHandle to the connection.\nThe format of the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new property iterator.\nGet the next window and append it to <code>data</code>.\nThe offset of the next window, in 32-bit chunks.\nThe property that we’re fetching.\nThe type of the property that we’re fetching.\nThe window that we’re fetching the property from.\nTrack which keys are modifiers, so we can properly replay …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCast a dimension value into a hinted dimension for …\nUse the above strategy to cast a physical size into a …\nUse the above strategy to cast a size into a hinted size.\nInitiates a drag operation while the left mouse button is …\nResizes the window while it is being dragged.\nMoves the window while it is being dragged.\nEmbed this window into a parent window.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRefresh the API for the given monitor.\nFailed to load one or several shared libraries.\nNo value.\nSome value of type <code>T</code>.\nA newtype wrapper around a <code>ConnectError</code> that can’t be …\nA connection to an X server.\nError triggered by xlib.\nError returned if this system doesn’t have XLib or can’…\nConnecting to the X server with <code>XOpenDisplay</code> failed.\nWe encountered an error while converting the connection to …\nGet the list of atoms.\nThe atoms used by <code>winit</code>.\nChecks whether an error has been triggered by the previous …\nGet the resource database.\nThe resource database.\nGet the default screen.\nThe index of the default screen.\nGet the index of the default screen.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of monitor handles.\nRandR version.\nReload the resource database.\nFinish launching a window with the given startup ID.\n“Request” a new activation token from the server.\nSend a startup notification message to the window manager.\nSet the last witnessed timestamp.\nGet the latest timestamp.\nThe last timestamp received by this connection.\nThe manager for the XCB connection.\nGet the underlying XCB connection.\nGet the DPI from XSettings.\nGet the atom for Xsettings.\nAtom for the XSettings screen.\nBad setting type.\nEndianness of the incoming data.\nContains the error value\nInvalid type.\nRan out of bytes.\nContains the success value\nParser for the incoming byte stream.\nParser errors.\nA setting in the settings list.\nThe data contained in a setting.\nGet a slice of bytes.\nThe data contained in the setting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet two bytes.\nGet four bytes.\nGet a single byte.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the setting.\nCreate a new parser.\nSkip some padding.\nParse a new <code>SettingData</code>.\nRead over the settings in the block of data.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn opaque token used to activate the <code>Window</code>.\nIndicates an alias of/shortcut to something is to be …\nIndicates that the something can be scrolled in any …\nThe window will always be below normal windows.\nThe window will always be on top of normal windows.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nAn error produced when using <code>CustomCursor::from_rgba</code> with …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nProduced when the length of the <code>rgba</code> argument isn’t …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nThe cursor is confined to the window area.\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nPlatform-specific\nA simple crosshair (e.g., short line segments resembling a …\nSee <code>Window::set_cursor()</code> for more details.\nThe behavior of cursor grabbing.\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nUse a custom image as a cursor (mouse pointer).\nSource for <code>CustomCursor</code>.\nUse the dark variant.\nThe platform-dependent default cursor. Often rendered as …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nThe east border to be moved.\nThe east and west borders to be moved.\nFullscreen modes.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nProduced when the hotspot is outside the image bounds\nAn icon used for the window titlebar, taskbar, etc.\nGeneric IME purposes for use in <code>Window::set_ime_purpose</code>.\nPlatform-specific\nUse the light variant.\nThe cursor is locked inside the window area to the certain …\nThe maximum width and height for a cursor when using …\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNo grabbing of the cursor is performed.\nThe default.\nNo special hints for the IME (default).\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nProduced when underlying OS functionality failed to create …\nThe IME is used for password input.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nDefines the orientation that a window resize will be …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nWrapper for <code>rwh_06::RawWindowHandle</code> for …\nThe south-west corner to be moved.\nThe IME is used to input into a terminal.\nIndicates text that may be selected. Often rendered as an …\nThe theme variant to use.\nProduced when the image dimensions are larger than …\nPlatform-specific\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nRepresents a window.\nAttributes used when creating a window.\nIdentifier of a window. Unique for each window.\nA window level groups windows with respect to their …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nReturns the list of all the monitors available on the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns the monitor on which the window currently resides.\nCreate a new <code>WindowAttributes</code> which allows modifying the …\nThe intersection of a source flags value with the …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nThis will close the <code>Window</code>.\nReturns a dummy id, useful for unit testing.\nGet a flags value with all bits unset.\nGets the enabled window buttons.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBrings the window to the front and sets input focus. Has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nParse a string slice into <code>CursorIcon</code>.\nGets the window’s current fullscreen state.\nGets whether the window has keyboard focus.\nReturns an identifier unique to the window.\nPlatforms should make sure this is cheap to clone.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the window’s client area.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nGets the window’s current decorations state.\nWhether all bits in this flags value are unset.\nGets the window’s current maximized state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe name of the cursor icon as defined in w3c standard.\nInitializes new attributes with default values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the entire window.\nGet the parent window stored on the attributes.\nNotify the windowing system before presenting to the …\nReturns the primary monitor of the system.\nThe intersection of a source flags value with the …\nRequest the new size for the window.\nQueues a <code>WindowEvent::RedrawRequested</code> event to be emitted …\nRequests user attention to the window, this has no effect …\nReset the dead key state of the keyboard.\nReturns window resize increments if any were set.\nReturns the scale factor that can be used to map logical …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nChange the window blur state.\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSet grabbing mode on the cursor preventing it from leaving …\nModifies whether the window catches cursor events.\nDeprecated! Use <code>Window::set_cursor()</code> instead.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nSets the enabled window buttons.\nSets the window to fullscreen or back.\nSets whether the window should get IME events\nSet the IME cursor editing area, where the <code>position</code> is the …\nSets the IME purpose for the window using <code>ImePurpose</code>.\nSets a maximum dimension size for the window.\nSets the window to maximized or back.\nSets a minimum dimension size for the window.\nSets the window to minimized or back\nModifies the position of the window.\nSets whether the window is resizable or not.\nSets window resize increments.\nSet or override the window theme.\nModifies the title of the window.\nChange the window transparency state.\nModifies the window’s visibility.\nSets the window icon.\nChange the window level.\nShow window menu at a specified position .\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current window theme.\nGets the current title of the window.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet whether the window will support transparency.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nRequests the window to be of specific dimensions.\nSets the maximum dimensions a window can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.")