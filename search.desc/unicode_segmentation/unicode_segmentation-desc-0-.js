searchState.loadedDescShard("unicode_segmentation", 0, "Iterators which split strings on Grapheme Cluster, Word or …\nCursor-based segmenter for grapheme clusters.\nAn error return indicating that not enough content was …\nExternal iterator for grapheme clusters and byte offsets.\nExternal iterator for a string’s grapheme clusters.\nAn error returned when the chunk given does not contain …\nWhen requesting <code>next_boundary</code>, the cursor is moving past …\nMore pre-context is needed. The caller should call …\nWhen requesting <code>prev_boundary</code>, the cursor is moving past …\nThe version of Unicode that this version of …\nExternal iterator for sentence boundaries and byte offsets.\nExternal iterator for a string’s sentence boundaries.\nExternal iterator for word boundaries and byte offsets.\nExternal iterator for a string’s word boundaries.\nMethods for segmenting strings according to Unicode …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nCategory of codepoint immediately after cursor, if known.\nCategory of codepoint immediately preceding cursor, if …\nCached grapheme category and associated scalar value range.\nReturns an iterator over the grapheme clusters of <code>self</code> and …\nReturns an iterator over the grapheme clusters of <code>self</code>.\nThe number of <code>InCB=Linker</code> codepoints preceding <code>offset</code> …\nA config flag indicating whether this cursor computes …\nTotal length of the string.\nCurrent cursor position.\nIf set, at least one more codepoint immediately preceding …\nSet if a call to <code>prev_boundary</code> or <code>next_boundary</code> was …\nThe number of RIS codepoints preceding <code>offset</code>. If …\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over substrings of <code>self</code>, split on …\nReturns an iterator over substrings of <code>self</code> separated on …\nInformation about the potential boundary at <code>offset</code>\nReturns an iterator over substrings of <code>self</code> separated on …\nReturns an iterator over the words of <code>self</code>, separated on …\nReturns an iterator over the words of <code>self</code>, separated on …\nIt is known to be a boundary.\ndefinitely a break\nThe codepoint after is Extended_Pictographic, so whether it…\na break if preceded by emoji base and (Extend)*\na break iff not in extended mode\nCursor-based segmenter for grapheme clusters.\nAn error return indicating that not enough content was …\nExternal iterator for grapheme clusters and byte offsets.\nmaybe unify with PairResult? An enum describing …\nExternal iterator for a string’s grapheme clusters.\nThe codepoint after it has Indic_Conjunct_Break=Consonant, …\na break unless in extended mode and preceded by a sequence …\nAn error returned when the chunk given does not contain …\nWhen requesting <code>next_boundary</code>, the cursor is moving past …\nIt is known to not be a boundary.\ndefinitely not a break\nMore pre-context is needed. The caller should call …\nWhen requesting <code>prev_boundary</code>, the cursor is moving past …\nThe codepoint after is a Regional Indicator Symbol, so a …\na break if preceded by an even number of RIS\nNo information is known.\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nCategory of codepoint immediately after cursor, if known.\nCategory of codepoint immediately preceding cursor, if …\nThe current offset of the cursor. Equal to the last value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCached grapheme category and associated scalar value range.\nFor handling rule GB9c:\nThe number of <code>InCB=Linker</code> codepoints preceding <code>offset</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine whether the current cursor location is a …\nA config flag indicating whether this cursor computes …\nTotal length of the string.\nCreate a new cursor. The string and initial offset are …\nFind the next boundary after the current cursor position. …\nCurrent cursor position.\nIf set, at least one more codepoint immediately preceding …\nFind the previous boundary after the current cursor …\nProvide additional pre-context when it is needed to decide …\nSet if a call to <code>prev_boundary</code> or <code>next_boundary</code> was …\nThe number of RIS codepoints preceding <code>offset</code>. If …\nSet the cursor to a new location in the same string.\nInformation about the potential boundary at <code>offset</code>\nExternal iterator for sentence boundaries and byte offsets.\nExternal iterator for a string’s sentence boundaries.\nAn iterator over the substrings of a string which, after …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe version of Unicode that this version of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExternal iterator for word boundaries and byte offsets.\nExternal iterator for a string’s word boundaries.\nAn iterator over the substrings of a string which, after …\nAn iterator over the substrings of a string which, after …\nView the underlying data (the part yet to be iterated) as …\nView the underlying data (the part yet to be iterated) as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")