searchState.loadedDescShard("egui_glow", 0, "<code>egui</code> bindings for <code>glow</code>.\ne.g. WebGL1\ne.g. WebGL2\nOpenGL 1.4 or later\nHelper for parsing and interpreting the OpenGL shader …\nCheck for OpenGL error and report it using <code>log::error</code>.\nCheck for OpenGL error and report it using <code>log::error</code>.\nA callback function that can be used to compose an …\nRe-exported <code>glow::Context</code>.\nAn OpenGL painter using <code>glow</code>.\nCreates a framebuffer from an external GL name.\nCreates a texture from an external GL name.\nThis function must be called before <code>Painter</code> is dropped, as …\nUsed to make sure we are destroyed correctly.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAccess the shared glow context.\nThe framebuffer we use as an intermediate render target, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate painter.\nYou are expected to have cleared the color buffer before …\nMain entry-point for painting a frame.\nGet the <code>glow::Texture</code> bound to a <code>egui::TextureId</code>.\nStores outdated OpenGL textures that are yet to be deleted\nProfiling macro for feature “puffin”\nProfiling macro for feature “puffin”\ne.g. WebGL1\ne.g. WebGL2\nOpenGL 1.4 or later\nHelper for parsing and interpreting the OpenGL shader …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf true, use <code>in/out</code>. If <code>false</code>, use <code>varying</code> and <code>gl_FragColor</code>…\nGoes on top of the shader.\nWrapper around either Emulated VAO or GL’s VAO.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse <code>egui</code> from a <code>glow</code> app based on <code>winit</code>.\nIf true, egui consumed this event, i.e. wants exclusive …\nCall to release the allocated graphics resources.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor automatic shader version detection set <code>shader_version</code> …\nPaint the results of the last call to <code>Self::run</code>.\nDo we need an egui refresh because of this event?\nCall <code>Self::paint</code> later to paint.")