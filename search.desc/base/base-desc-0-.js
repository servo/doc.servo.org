searchState.loadedDescShard("base", 0, "A crate to hold very common types in Servo.\nA struct for denoting the age of messages; prevents race …\nAn implementation of a monotonic, nanosecond precision …\nReturns the argument unchanged.\nEnum wrappers to be able to select different channel …\nNamespaces and ids shared by many crates in Servo.\nCalls <code>U::from(self)</code>.\nA monotonic, nanosecond precision timer that can be used …\nSome unspecified time epoch. This is mainly useful for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nCreates a Servo channel that can select different channel …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA per-process unique pipeline-namespace-installer. …\nEach pipeline ID needs to be unique. However, it also …\nA per-process installer of pipeline-namespaces.\nRequest a pipeline-namespace id from the constellation.\nInstall a namespace in the current thread, without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstall a namespace for a given Id.\nEach script and layout thread should have the top-level …\nInstall a namespace, requesting a new Id from the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSetup the pipeline-namespace-installer, by providing it …\nProvide a request sender to send requests to the …\nA struct that makes it easier to print out a pretty tree …\nAdd an item to the current level in the tree.\nAscend one level in the tree.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe current level of recursion.\nDescend one level in the tree with the given title string.\nAn item which is queued up, so that we can determine if we …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")