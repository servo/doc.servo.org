searchState.loadedDescShard("lebe", 0, "Dead simple endianness conversions. The following …\nRepresents values that can swap their bytes to reverse …\nOn a big endian machine, this does nothing. On a little …\nOn a big endian machine, this does nothing. On a little …\nOn a little endian machine, this does nothing. On a big …\nOn a little endian machine, this does nothing. On a big …\nOn a big endian machine, this does nothing. On a little …\nOn a big endian machine, this does nothing. On a little …\nOn a little endian machine, this does nothing. On a big …\nOn a little endian machine, this does nothing. On a big …\nEasily write primitives and slices of primitives to binary …\nExports some of the most common types.\nSwaps all bytes in this value, inverting its endianness.\nA <code>std::io::Read</code> input stream which supports reading any …\nOffers a prettier versions of reading a primitive number.\nA <code>std::io::Write</code> output stream which supports writing any …\nReinterpret values as byte slices and byte slices as …\nRead the byte value of the inferred type\nRead this value from the supplied reader. Same as …\nRead into the supplied reference. Acts the same as …\nRead the byte value of the inferred type\nRead this value from the supplied reader. Same as …\nRead into the supplied reference. Acts the same as …\nRead the byte value of the inferred type\nRead this value from the supplied reader. Same as …\nRead into the supplied reference. Acts the same as …\nWrite the byte value of the specified reference, …\nWrite the byte value of the specified reference, …\nWrite the byte value of the specified reference, not …\nRead a slice of bytes into the specified slice.\nRead a slice of bytes into the specified reference.\nView this slice of values as a slice of bytes.\nView this slice of values as a mutable slice of bytes.\nView this reference as a slice of bytes.\nView this reference as a mutable slice of bytes.\nView this slice as a mutable slice of bytes and write it.\nView this reference as a mutable slice of bytes and write …")