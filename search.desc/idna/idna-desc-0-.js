searchState.loadedDescShard("idna", 0, "This Rust crate implements IDNA per the WHATWG URL Standard…\nDeprecated configuration API.\nType indicating that there were errors during UTS #46 …\nDeprecated. Use the crate-top-level functions or <code>Uts46</code>.\nDeprecated API for <em>Unicode IDNA Compatibility Processing</em> …\nThe domain to ASCII algorithm; version returning <code>String</code> …\nThe domain to ASCII algorithm; version returning a <code>Cow</code>.\nThe domain to ASCII algorithm, with the <code>beStrict</code> flag set.\nThe domain to Unicode algorithm; version returning <code>String</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPunycode (RFC 3492) implementation.\nThis module provides the lower-level API for UTS 46.\nDeprecated configuration API.\nDeprecated. Use the crate-top-level functions or <code>Uts46</code>.\nWhether to enforce STD3 rules for hyphen placement.\nCompute the deny list\nReturns the argument unchanged.\nReturns the argument unchanged.\nCompute the hyphen mode\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerforms preprocessing equivalent to UTS 46 transitional …\nUTS 46 ToASCII\nUTS 46 ToASCII\nUTS 46 ToUnicode\nUTS 46 ToUnicode\nWhether to enable (deprecated) transitional processing.\nObsolete method retained to ease migration. The argument …\nWhether to enforce STD3 or WHATWG URL Standard ASCII deny …\nWhether the <em>VerifyDNSLength</em> operation should be performed …\nMarker for internal vs. external caller to retain old API …\nConvert Punycode to Unicode.\nSplit the input iterator and return a Vec with insertions …\nConvert Punycode to an Unicode <code>String</code>.\nConvert Unicode to Punycode.\nConvert an Unicode <code>str</code> to Punycode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<em>CheckHyphens=false</em>: Do not place positional restrictions …\nThe ASCII deny list to be applied.\n<em>CheckHyphens=true</em>: Prohibit hyphens in the first, third, …\nProhibit hyphens in the first and last position in the …\nThe mask for the ASCII dot.\nThe UTS 46 <em>VerifyDNSLength</em> flag.\nNo ASCII deny list. This corresponds to …\nPolicy for customizing behavior in case of an error.\nMask for allowable bidi classes in the first character of …\nReturn as early as possible without producing output in …\nBit set for glyphless ASCII.\nThe <em>CheckHyphens</em> mode.\n<em>VerifyDNSLength=false</em>. (Possibly relevant for allowing …\nMask for checking for both left and dual joining.\nMask for the disallowed general categories of the first …\nIn case of error, mark errors with the REPLACEMENT …\nICU4C-compatible constraint. …\nICU4C-compatible constraint. (Note: ICU4C measures UTF-16 …\nThere were no errors. The caller must consider the input …\nThe failure outcome of <code>Uts46::process</code>\nThe success outcome of <code>Uts46::process</code>\nMask for checking for both left and dual joining.\nMask for checking if the domain is a bidi domain.\nFor keeping track of what kind of numerals have been seen …\nThe STD3 deny list. This corresponds to …\nThe sink emitted <code>core::fmt::Error</code>. The partial output …\nBit set for upper-case ASCII.\nForbidden domain code point from the WHATWG URL Standard.\nAn implementation of UTS #46.\nThere was a validity error according to the chosen options.\n<em>VerifyDNSLength=true</em>. (The trailing root label dot is not …\n<em>VerifyDNSLength=true</em> with the exception that the trailing …\nThere were no errors. The caller must consider what was …\nTurns a bidi class into a mask for comparing with multiple …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTurns a genecal category into a mask for comparing with …\nComputes the mask for glyphless ASCII.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns a joining type into a mask for comparing with …\nComputes the ASCII deny list for STD3 ASCII rules.\nConstructor using data compiled into the binary.\nComputes (preferably at compile time) an ASCII deny list.\nThe lower-level function that <code>Uts46::to_ascii</code>, …\nThe part of <code>process</code> that doesn’t need to be generic over …\nPerforms the ToASCII operation from UTS #46 with the …\nPerforms the ToUnicode operation from UTS #46 according to …\nPerforms the ToUnicode operation from UTS #46 according to …\nComputes the mask for upper-case ASCII.\nPerforms the <em>VerifyDNSLength</em> check on the output of the …")