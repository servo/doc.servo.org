searchState.loadedDescShard("unicode_width", 0, "Determine displayed width of <code>char</code> and <code>str</code> types according …\nThe version of Unicode that this version of unicode-width …\nMethods for determining displayed width of Unicode …\nMethods for determining displayed width of Unicode strings.\nReturns the character’s displayed width in columns, or …\nReturns the string’s displayed width in columns.\nReturns the character’s displayed width in columns, or …\nReturns the string’s displayed width in columns.\nNo special handling necessary\nArray of 1024-bit bitmaps. Index into the correct bitmap …\nSorted list of codepoint ranges (inclusive) that are …\nSorted list of codepoint ranges (inclusive) that don’t …\nThe version of Unicode that this version of unicode-width …\nAutogenerated. 180 sub-table(s). Consult <code>lookup_width</code> for …\nAutogenerated. 4 sub-table(s). Consult <code>lookup_width</code> for …\nAutogenerated. 1 sub-table(s). Consult <code>lookup_width</code> for …\nAutogenerated. 17 sub-table(s). Consult <code>lookup_width</code> for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>c</code> is an <code>Emoji_Modifier_Base</code>.\nHas top bit set\nWhether this character is a default-ignorable combining …\nWhether this width mode is ligature_transparent (has 5th …\nWhether this character is transparent wrt the effect of …\nHas 2nd bit set\nWhether this character is a zero-width character with …\nHas top bit set\nReturns the UAX #11 based width of <code>c</code> by consulting a …\nReturns the UAX #11 based width of <code>c</code> by consulting a …\nSet top bit\nSet 2nd bit\nSets 6th MSB.\nReturns the UAX #11 based width of <code>c</code>, or <code>None</code> if <code>c</code> is a …\nReturns the UAX #11 based width of <code>c</code>, or <code>None</code> if <code>c</code> is a …\nWhether this character forms an [emoji presentation …\nReturns <code>true</code> if <code>c</code> has default emoji presentation, but …\nClear top bit\nClear 2nd bit\nReturns the UAX #11 based width of <code>c</code>. Ambiguous width …\nReturns the UAX #11 based width of <code>c</code>. Ambiguous width …")