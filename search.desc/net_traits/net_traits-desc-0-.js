searchState.loadedDescShard("net_traits", 0, "Clear the network cache.\nThe creator of a given cookie\nHandle to a resource thread\nCrash error, to be converted to Resource::Crash in the …\nA fetch task that discards all data it’s sent, useful …\nContains the error value\nBreak the load handler loop, send a reply when done …\nIPC channels to communicate with the script thread about …\nInitiate a fetch in response to processing a redirection\nA thread to handle fetches in a Servo process. This thread …\nGet a cookie by name for a given originating URL\nRetrieve the stored cookies for a given URL\nGet a history state by a given history state id\nAn HTTP API\nCould be any of the internal errors, like unsupported …\nAbstraction of the ability to send a particular type of …\nA loading context, for context-specific sniffing, as …\nMetadata about a loaded resource, such as is obtained from …\nNetwork errors that have to be exported out of the loaders\nSend the service worker network mediator for an origin to …\n“no-referrer”\n“no-referrer-when-downgrade”\nA non-HTTP API\nContains the success value\n“origin”\n“origin-when-cross-origin”\nIf the fetch is just being done to populate the cache, not …\nPolicies for providing a referrer header for a request\nRemoves history states for the given ids\n“same-origin”\nStore a cookie for a given originating URL\nStore a set of cookies for a given originating URL\nSet a history state for a given history state id\nSSL validation error, to be converted to …\n“strict-origin”\n“strict-origin-when-cross-origin”\nSynchronization message solely for knowing the state of …\nMessage forwarded to file manager’s handler\n“unsafe-url”\nA list of active fetches. A fetch is no longer active once …\nCharacter set.\nMIME type / subtype.\nA reference to the <code>CoreResourceThread</code> used to kick off …\nMetadata with defaults for everything optional.\nAn implementation of the Fetch specification\nInstruct the resource thread to make a new request.\nFinal URL after redirects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeaders\nIs successful HTTPS connection\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocation URL from the response headers.\nOrigin of CORS Request\nCORS Preflight flag\nExecute the default action on a provided listener.\nhttps://fetch.spec.whatwg.org/#process-request-body\nhttps://fetch.spec.whatwg.org/#process-request-end-of-file\nhttps://fetch.spec.whatwg.org/#process-response\nFired when a chunk of response content is received\nhttps://fetch.spec.whatwg.org/#process-response-end-of-file\nImplementation of public domain matching.\nA crossbeam receiver attached to the router proxy which …\nNumber of redirects until final resource (currently …\nTrue if the request comes from a redirection\nReferrer Url\nReferrer Policy of the Request used to obtain Response\nThe Response object resulting from a fetch operation\nsend message T\nget underlying sender\nExtract the parts of a Mime that we care about.\nSet the referrer policy associated with the loaded …\nHTTP Status\nPerformance information for navigation events\nAn <code>IpcSender</code> that’s sent with every fetch request and …\nNormalize <code>slice</code>, as defined by the Fetch Spec.\nStandalone blob buffer object\nErrors returned to Blob URL Store request\nExternal error, from like file system, I/O etc.\nInvalid entry content\nInvalid File UUID\nInvalid URL origin\nInvalid range\nContent of blob\nReturns the argument unchanged.\nReturns the argument unchanged.\nGiven an URL, returning the Origin that a Blob created …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse URL as Blob URL scheme’s definition\nSize of content in bytes\nMIME type string\nhttps://fetch.spec.whatwg.org/#http-tab-or-space\n…\n…\n…\n…\nhttps://fetch.spec.whatwg.org/#concept-header-list-get\nhttps://fetch.spec.whatwg.org/#forbidden-method\nActivate an internal FileID so it becomes valid as part of …\nAdd a sliced entry pointing to the parent FileID, and send …\nBlob URL Store error\nDecrease reference count and send back the acknowledgement\nContains the error value\nFile manager store entry’s origin\nErrors returned from file system request\nA token modulating access to a file for a blob URL.\nThe selection action is invalid due to exceptional reason\nChecking against a token not required, used for accessing …\nContains the success value\nAdd an entry as promoted memory-based blob\nRead FileID-indexed file in chunks, optionally check URL …\nRelative slice positions of a sequence, whose semantic …\nChecking against token required.\nRevoke Blob URL and send back the acknowledgement\nSelect a single file. Last field is pre-selected file path …\nSelect multiple files. Last field is pre-selected file …\nResponse to file selection request\nRequest should always fail, used for cases when a check is …\nThe selection action is cancelled by user\nRelative offset from first byte if Some(non-negative), …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstantiate optional slice position parameters\nFull range from start to end\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSlice the inner sliced range by repositioning\nRelative to first byte if non-negative, relative to one …\nCompute absolute range by giving the total size …\nA representation of a HTTP Status Code and Message that …\nReturns the StatusCode for non-error cases, panics …\nThe default implementation creates a “200 OK” response.\nReturns the argument unchanged.\nReturns true if this status is in the given range. Always …\nCalls <code>U::from(self)</code>.\nTrue when the object was created with <code>new_error</code>.\nHelper that relays is_success() from the underlying code.\nGet access to a reference of the message part.\nCreates a new HttpStatus for a valid status code.\nCreates an instance that represents a Response.error() …\nCreates a new HttpStatus from a raw status code, but will …\nReturns the u16 representation of the access code. This is …\nReturns the StatusCode if not an error instance, or None …\nIndicating either entire image or just metadata …\nThis is optionally passed to the image cache when …\nThe returned image.\nThe requested image was loaded.\nThe request image metadata was loaded.\nNeither the requested image nor the placeholder could be …\nThe unique id for an image that has previously been …\nThe requested image failed to load, so a placeholder was …\nAdd a new listener for the given pending image id. If the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDefinitively check whether there is a cached, fully loaded …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInform the image cache about a response for a pending …\nAdd a listener for the provided pending image id, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe registered domain name (aka eTLD+1) for a URL. Returns …\nA quality value, as specified in RFC7231.\nA value paired with its “quality” as defined in RFC7231…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a quality value from a value between 0 and 1000 …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new quality item.\nMessages used to implement …\nMessages used to implement …\nhttps://fetch.spec.whatwg.org/#concept-body-source\nCache mode\nA chunk of bytes.\nAsk for another chunk.\nContains the url that “client” would be resolved to. …\nConnect a fetch in <code>net</code>, with a stream of bytes from <code>script</code>.\nCORS settings attribute\nRequest credentials mode\nA request destination\nThe body is done.\nSignal the stream is done(sent from script to script).\nThere was an error streaming the body, terminate fetch.\nSignal the stream has errored(sent from script to script).\nRe-extract a new stream from the source, following a …\nAn initiator\nA request origin\nParser Metadata\nRedirect mode\nA referer\nA Request as defined by the Fetch spec.\nThe net component’s view into …\nAn id to differeniate one network request from another.\nA request mode\nResponse tainting\nService-workers mode\nWindow\nhttps://fetch.spec.whatwg.org/#concept-request-body\nhttps://fetch.spec.whatwg.org/#concept-request-cache-mode\nNet’s channel to communicate with script re this body.\n…\nServo internal: if crash details are present, trigger a …\nServo internal: if crash details are present, trigger a …\n…\nhttps://fetch.spec.whatwg.org/#concept-request-current-url\nhttps://fetch.spec.whatwg.org/#concept-request-current-url\nhttps://fetch.spec.whatwg.org/#concept-request-destination\nStep 12 of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\nhttps://fetch.spec.whatwg.org/#concept-request-header-list\nThe id of this request so that the task that triggered it …\nhttps://fetch.spec.whatwg.org/#concept-request-initiator\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n…\nhttps://fetch.spec.whatwg.org/#cors-safelisted-method\nhttps://fetch.spec.whatwg.org/#navigation-request\n…\nhttps://fetch.spec.whatwg.org/#subresource-request\nhttps://fetch.spec.whatwg.org/#request-keepalive-flag\nhttps://fetch.spec.whatwg.org/#local-urls-only-flag\nhttps://fetch.spec.whatwg.org/#concept-request-method\nhttps://fetch.spec.whatwg.org/#concept-request-mode\nhttps://fetch.spec.whatwg.org/#concept-request-origin\n…\n…\n…\nhttps://fetch.spec.whatwg.org/#concept-request-referrer\n…\n…\n…\nhttps://fetch.spec.whatwg.org/#request-service-workers-mode\nhttps://fetch.spec.whatwg.org/#concept-body-source\nhttps://fetch.spec.whatwg.org/#synchronous-flag\nhttps://fetch.spec.whatwg.org/#concept-body-total-bytes\nhttps://fetch.spec.whatwg.org/#unsafe-request-flag\nhttps://fetch.spec.whatwg.org/#concept-request-url\nhttps://fetch.spec.whatwg.org/#concept-request-url-list\nhttps://fetch.spec.whatwg.org/#use-cors-preflight-flag\n…\nCache state\nHttps state\nA Response as defined by the Fetch spec\nThe response body can still be pushed to after fetch This …\nResponse type\nResponse termination reason\nhttps://fetch.spec.whatwg.org/#concept-response-aborted\nCORS-exposed header-name list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInternal response, only used if the Response is a filtered …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocation URL\ntrack network metrics\nwhether or not to try to return the internal_response when …\nConvert to a filtered response, of type <code>filter_type</code>. Do …\nclears the associated storage data by removing all the …\nsend a reply when done cleaning up thread resources and …\ngets the value associated with the given key in the …\ngets the name of the key at the specified index in the …\nGets the available keys in the associated storage data\ngets the number of key/value pairs present in the …\nremoves the key/value pair for the given key in the …\nsets the value of the given key in the associated storage …\nRequest operations on the storage data associated with a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")