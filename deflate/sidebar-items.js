initSidebarItems({"enum":[["Compression","An enum describing the level of compression to be used by the encoder"],["MatchingType","An enum describing whether we use lazy or greedy matching."],["SpecialOptions","Enum allowing some special options (not implemented yet)!"]],"fn":[["compress_data_dynamic",""],["deflate_bytes","Compress the given slice of bytes with DEFLATE compression using the default compression level."],["deflate_bytes_conf","Compress the given slice of bytes with DEFLATE compression."],["deflate_bytes_zlib","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer, using the default compression level."],["deflate_bytes_zlib_conf","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer."]],"mod":[["bit_reverse",""],["bitstream","This module provides a bit writer"],["chained_hash_table",""],["checksum",""],["compress",""],["compression_options","This module contains the various options to tweak how compression is performed."],["deflate_state",""],["encoder_state",""],["huffman_lengths",""],["huffman_table",""],["input_buffer",""],["length_encode",""],["lz77","This module contains functionality for doing lz77 compression of data."],["lzvalue",""],["matching",""],["output_writer",""],["rle",""],["stored_block",""],["write","Encoders implementing a `Write` interface."],["writer",""],["zlib","This module contains functionality for generating a zlib header."]],"struct":[["CompressionOptions","A struct describing the options for a compressor or compression function."]]});