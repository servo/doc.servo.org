initSidebarItems({"constant":[["GC_CYCLE_START",""],["GC_SLICE_START",""],["THREAD_ACTIVE",""]],"enum":[["CommonScriptMsg","Common messages used to control the event loops in both the script and the worker"],["ScriptThreadEventCategory",""]],"fn":[["consume_stream","Implements the steps to compile webassembly response mentioned here https://webassembly.github.io/spec/web-api/#compile-a-potential-webassembly-response"],["debug_gc_callback",""],["empty",""],["enqueue_promise_job","SM callback for promise job resolution. Adds a promise callback to the current globalâ€™s microtask queue."],["gc_slice_callback",""],["get_incumbent_global",""],["get_reports",""],["get_size",""],["in_range",""],["new_child_runtime",""],["new_rt_and_cx",""],["new_rt_and_cx_with_parent",""],["notify_about_rejected_promises","https://html.spec.whatwg.org/multipage/#notify-about-rejected-promises"],["promise_rejection_tracker","https://html.spec.whatwg.org/multipage/#the-hostpromiserejectiontracker-implementation"],["report_stream_error",""],["servo_build_id",""],["set_gc_zeal_options",""],["trace_rust_roots",""]],"static":[["JOB_QUEUE_TRAPS",""],["SECURITY_CALLBACKS",""]],"struct":[["ContextForRequestInterrupt","A wrapper around a JSContext that is Send, enabling an interrupt to be requested from a thread other than the one running JS using that context."],["JSContext",""],["JSEngineSetup",""],["JS_ENGINE",""],["Runnable",""],["Runtime",""],["StreamConsumer",""]],"trait":[["ScriptChan","A cloneable interface for communicating with an event loop."],["ScriptPort","An interface for receiving ScriptMsg values in an event loop. Used for synchronous DOM APIs that need to abstract over multiple kinds of event loops (worker/main thread) with different Receiver interfaces."]]});