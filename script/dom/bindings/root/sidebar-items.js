initSidebarItems({"constant":[["STACK_ROOTS",""]],"fn":[["assert_in_layout",""],["assert_in_script",""],["trace_roots","SM Callback that traces the rooted reflectors"]],"struct":[["Dom","A traced reference to a DOM object"],["DomOnceCell","A holder that allows to lazily initialize the value only once `Dom<T>`, using OnceCell Essentially a `OnceCell<Dom<T>>`."],["LayoutDom","An unrooted reference to a DOM object for use in layout. `Layout*Helpers` traits must be implemented on this."],["MaybeUnreflectedDom","A traced reference to a DOM object that may not be reflected yet."],["MutDom","A holder that provides interior mutability for GC-managed values such as `Dom<T>`.  Essentially a `Cell<Dom<T>>`, but safer."],["MutNullableDom","A holder that provides interior mutability for GC-managed values such as `Dom<T>`, with nullability represented by an enclosing Option wrapper. Essentially a `Cell<Option<Dom<T>>>`, but safer."],["Root","A rooted value."],["RootCollection","A rooting mechanism for reflectors on the stack. LIFO is not required."],["ThreadLocalStackRoots",""]],"trait":[["DomSlice","Get a slice of references to DOM objects."],["OptionalHeapSetter","Helper trait for safer manipulations of `Option<Heap<T>>` values."],["StableTraceObject","Represents values that can be rooted through a stable address that will not change for their whole lifetime."]],"type":[["DomRoot","A rooted reference to a DOM object."]]});