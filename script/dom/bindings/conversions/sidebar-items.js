initSidebarItems({"enum":[["StringificationBehavior","Behavior for stringification of `JSVal`s."]],"trait":[["FromJSValConvertible","A trait to convert `JSVal`s to Rust types."],["IDLInterface","A trait to retrieve the constants necessary to check if a `JSObject` implements a given interface."],["ToJSValConvertible","A trait to convert Rust types to `JSVal`s."]],"constant":[["DOM_OBJECT_SLOT","The index of the slot wherein a pointer to the reflected DOM object is stored for non-proxy bindings."]],"fn":[["dom_object_slot","Returns the index of the slot wherein a pointer to the reflected DOM object is stored."],["is_dom_class","Returns whether the given `clasp` is one for a DOM object."],["is_dom_proxy","Returns whether `obj` is a DOM object implemented as a proxy."],["jsid_to_str","Convert the given `jsid` to a `DOMString`. Fails if the `jsid` is not a string, or if the string does not contain valid UTF-16."],["jsstring_to_str","Convert the given `JSString` to a `DOMString`. Fails if the string does not contain valid UTF-16."],["native_from_reflector","Get the DOM object from the given reflector."],["native_from_reflector_jsmanaged","Get an `Unrooted<T>` for the given DOM object, unwrapping any wrapper around it first, and checking if the object is of the correct type."]]});