initSidebarItems({"enum":[["SubtendrilError","Errors that can occur when slicing a `Tendril`."]],"macro":[["format_tendril","Create a `StrTendril` through string formatting."]],"mod":[["encoding_rs","encoding_rs is a Gecko-oriented Free Software / Open Source implementation of the Encoding Standard in Rust. Gecko-oriented means that converting to and from UTF-16 is supported in addition to converting to and from UTF-8, that the performance and streamability goals are browser-oriented, and that FFI-friendliness is a goal."],["fmt","Marker types for formats."],["stream","Streams of tendrils."]],"struct":[["Atomic","A marker of an atomic (and hence concurrent) tendril."],["IncompleteUtf8",""],["NonAtomic","A marker of a non-atomic tendril."],["SendTendril","A simple wrapper to make `Tendril` `Send`."],["Tendril","Compact string type for zero-copy parsing."]],"trait":[["Atomicity","The multithreadedness of a tendril."],["Format","Trait for format marker types."],["ReadExt","Extension trait for `io::Read`."],["SliceExt","`Tendril`-related methods for Rust slices."],["TendrilSink","Trait for types that can process a tendril."]],"type":[["ByteTendril","`Tendril` for storing binary data."],["StrTendril","`Tendril` for storing native Rust strings."]]});