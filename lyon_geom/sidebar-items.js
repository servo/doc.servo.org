initSidebarItems({"enum":[["BezierSegment","Either a cubic, quadratic or linear bézier segment."]],"mod":[["arc","Elliptic arc related maths and tools."],["cubic_bezier",""],["cubic_bezier_intersections",""],["cubic_to_quadratic",""],["flatten_cubic",""],["generic_math",""],["line",""],["math","Basic types that are used everywhere. Most other lyon crates reexport them."],["monotonic",""],["quadratic_bezier",""],["scalar",""],["segment",""],["traits",""],["triangle",""],["utils",""]],"struct":[["Arc","An elliptic arc curve segment."],["ArcFlags","Flag parameters for arcs as described by the SVG specification."],["CubicBezierSegment","A 2d curve segment defined by four points: the beginning of the segment, two control points and the end of the segment."],["Line","An infinite line defined by a point and a vector."],["LineEquation","A line defined by the equation `a * x + b * y + c = 0; a * a + b * b = 1`."],["LineSegment","A linear segment."],["Monotonic","A x and y monotonic curve segment, for example `Monotonic<QuadraticBezierSegment>`."],["QuadraticBezierSegment","A 2d curve segment defined by three points: the beginning of the segment, a control point and the end of the segment."],["SvgArc","An elliptic arc curve segment using the SVG’s end-point notation."],["Triangle","A 2D triangle defined by three points `a`, `b` and `c`."]],"trait":[["Scalar",""],["Segment","Common APIs to segment types."]]});