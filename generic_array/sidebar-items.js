initSidebarItems({"externcrate":[["typenum",""]],"fn":[["from_iter_length_fail",""]],"macro":[["arr","Macro allowing for easy generation of Generic Arrays. Example: `let test = arr![u32; 1, 2, 3];`"]],"mod":[["arr","Implementation for `arr!` macro."],["functional","Functional programming with generic sequences"],["hex","Generic array are commonly used as a return value for hash digests, so itâ€™s a good idea to allow to hexlify them easily. This module implements `std::fmt::LowerHex` and `std::fmt::UpperHex` traits."],["impls",""],["iter","`GenericArray` iterator implementation."],["sequence","Useful traits for manipulating sequences of data stored in `GenericArray`s"]],"struct":[["GenericArray","Struct representing a generic array - `GenericArray<T, N>` works like [T; N]"]],"trait":[["ArrayLength","Trait making `GenericArray` work, marking types to be used as length of an array"]]});