initSidebarItems({"enum":[["AnimationState","For a given pipeline, whether any animations are currently running and any animation callbacks are queued"],["CompositorEvent","Events from the compositor that the script thread needs to know about"],["ConstellationControlMsg","Messages sent from the constellation or layout to the script thread."],["DiscardBrowsingContext","When a pipeline is closed, should its browsing context be discarded too?"],["DocumentActivity","Is a document fully active, active or inactive? A document is active if it is the current active document in its session history, it is fuly active if it is active and all of its ancestors are active, and it is inactive otherwise."],["DocumentState","Used to determine if a script has any pending asynchronous activity."],["EventResult","Whether a DOM event was prevented by web content"],["HistoryEntryReplacement","https://html.spec.whatwg.org/multipage/#replacement-enabled"],["IFrameSandboxState","Whether the sandbox attribute is present for an iframe element"],["ImageUpdate","Serializable image updates that must be performed by WebRender."],["JobError","The kind of error the job promise should be rejected with."],["JobResult","Messages sent from Job algorithms steps running in the SW manager, in order to resolve or reject the job promise."],["JobResultValue","Jobs are resolved with the help of various values."],["JobType","https://w3c.github.io/ServiceWorker/#dfn-job-type"],["JsEvalResult","The result of evaluating a javascript scheme url."],["LayoutControlMsg","Messages sent to the layout thread from the constellation and/or compositor."],["LayoutMsg","Messages from the layout to the constellation."],["LoadOrigin","The origin where a given load was initiated. Useful for origin checks, for example before evaluation a JS URL."],["LogEntry","A log entry reported to the constellation We don’t report all log entries, just serious ones. We need a separate type for this because `LogLevel` isn’t serializable."],["MediaSessionActionType","The type of MediaSession action. https://w3c.github.io/mediasession/#enumdef-mediasessionaction"],["MessagePortMsg","Messages for communication between the constellation and a global managing ports."],["Milliseconds","Unit of measurement."],["MouseButton","The mouse button involved in the event."],["MouseEventType","The types of mouse events"],["Nanoseconds","Unit of measurement."],["PaintWorkletError","Errors from executing a paint worklet"],["ProgressiveWebMetricType","Type of recorded progressive web metric"],["SWManagerMsg","Messages outgoing from the Service Worker Manager thread to constellation"],["ScriptMsg","Messages from the script to the constellation."],["ServiceWorkerMsg","Messages sent to Service Worker Manager thread"],["TimerSource","Describes the thread that requested the TimerEvent."],["TouchEventType","The type of input represented by a multi-touch event."],["UpdatePipelineIdReason","The reason why the pipeline id of an iframe is being updated."],["WebDriverCommandMsg","Messages to the constellation originating from the WebDriver server."],["WebrenderMsg","The set of WebRender operations that can be initiated by the content process."],["WheelMode","Mode to measure WheelDelta floats in"],["WindowSizeType","The type of window size change."]],"fn":[["precise_time_ms","Returns the duration since an unspecified epoch measured in ms."]],"mod":[["script_msg",""],["serializable","This module contains implementations in script that are serializable, as per https://html.spec.whatwg.org/multipage/#serializable-objects. The implementations are here instead of in script so that the other modules involved in the serialization don’t have to depend on script."],["transferable","This module contains implementations in script that are transferable. The implementations are here instead of in script so that the other modules involved in the transfer don’t have to depend on script."],["webdriver_msg",""]],"struct":[["AnimationTickType","Specifies if rAF should be triggered and/or CSS Animations and Transitions."],["AuxiliaryBrowsingContextLoadInfo","Specifies the information required to load an auxiliary browsing context."],["BroadcastMsg","Message for communication between the constellation and a global managing broadcast channels."],["DOMMessage","Message that gets passed to service worker scope on postMessage"],["DrawAPaintImageResult","The result of executing paint code: the image together with any image URLs that need to be loaded."],["IFrameLoadInfo","Specifies the information required to load an iframe."],["IFrameLoadInfoWithData","Specifies the information required to load a URL in an iframe."],["IFrameSize","A particular iframe’s size, associated with a browsing context."],["IFrameSizeMsg","An iframe sizing operation."],["InitialScriptState","Data needed to construct a script thread."],["Job","https://w3c.github.io/ServiceWorker/#dfn-job"],["LoadData","can be passed to `LoadUrl` to load a page with GET/POST parameters or headers"],["NewLayoutInfo","The initial data required to create a new layout attached to an existing script thread."],["PortMessageTask","A task on the https://html.spec.whatwg.org/multipage/#port-message-queue"],["SWManagerSenders","Channels to allow service worker manager to communicate with constellation and resource thread"],["ScopeThings","Entities required to spawn service workers"],["ScriptToConstellationChan","A Script to Constellation channel."],["ScrollState","The scroll state of a stacking context."],["StructuredSerializedData","A data-holder for serialized data and transferred objects. https://html.spec.whatwg.org/multipage/#structuredserializewithtransfer"],["TimerEvent","Notifies the script thread to fire due timers. `TimerSource` must be `FromWindow` when dispatched to `ScriptThread` and must be `FromWorker` when dispatched to a `DedicatedGlobalWorkerScope`"],["TimerEventId","The id to be used for a `TimerEvent` is defined by the corresponding `TimerEventRequest`."],["TimerEventRequest","Requests a TimerEvent-Message be sent after the given duration."],["TimerSchedulerMsg","The message used to send a request to the timer scheduler."],["TouchId","An opaque identifier for a touch point."],["UntrustedNodeAddress","The address of a node. Layout sends these back. They must be validated via `from_untrusted_node_address` before they can be used, because we do not trust layout."],["WebrenderIpcSender","A mechanism to communicate with the parent process’ WebRender instance."],["WheelDelta","The Wheel event deltas in every direction"],["WindowSizeData","Data about the window size."],["WorkerGlobalScopeInit","Resources required by workerglobalscopes"],["WorkerScriptLoadOrigin","Common entities representing a network load origin"]],"trait":[["Painter","Execute paint code in the worklet thread pool."],["ScriptThreadFactory","This trait allows creating a `ScriptThread` without depending on the `script` crate."],["ServiceWorkerManagerFactory","This trait allows creating a `ServiceWorkerManager` without depending on the `script` crate."]],"type":[["MsDuration","Amount of milliseconds."],["NsDuration","Amount of nanoseconds."]]});