initSidebarItems({"enum":[["EventResult","Whether a DOM event was prevented by web content"],["HistoryEntryReplacement","https://html.spec.whatwg.org/multipage/#replacement-enabled"],["JobError","The kind of error the job promise should be rejected with."],["JobResult","Messages sent from Job algorithms steps running in the SW manager, in order to resolve or reject the job promise."],["JobResultValue","Jobs are resolved with the help of various values."],["JobType","https://w3c.github.io/ServiceWorker/#dfn-job-type"],["LayoutMsg","Messages from the layout to the constellation."],["LogEntry","A log entry reported to the constellation We don’t report all log entries, just serious ones. We need a separate type for this because `LogLevel` isn’t serializable."],["SWManagerMsg","Messages outgoing from the Service Worker Manager thread to constellation"],["ScriptMsg","Messages from the script to the constellation."],["ServiceWorkerMsg","Messages sent to Service Worker Manager thread"]],"struct":[["DOMMessage","Message that gets passed to service worker scope on postMessage"],["IFrameSize","A particular iframe’s size, associated with a browsing context."],["IFrameSizeMsg","An iframe sizing operation."],["Job","https://w3c.github.io/ServiceWorker/#dfn-job"],["SWManagerSenders","Channels to allow service worker manager to communicate with constellation and resource thread"],["ScopeThings","Entities required to spawn service workers"]]});