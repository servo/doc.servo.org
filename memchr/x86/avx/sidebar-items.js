initSidebarItems({"constant":[["LOOP_SIZE",""],["LOOP_SIZE2",""],["VECTOR_ALIGN",""],["VECTOR_SIZE",""]],"fn":[["forward_pos","Compute the position of the first matching byte from the given mask. The position returned is always in the range [0, 31]."],["forward_pos2","Compute the position of the first matching byte from the given masks. The position returned is always in the range [0, 31]. Each mask corresponds to the equality comparison of a single byte."],["forward_pos3","Compute the position of the first matching byte from the given masks. The position returned is always in the range [0, 31]. Each mask corresponds to the equality comparison of a single byte."],["forward_search1",""],["forward_search2",""],["forward_search3",""],["memchr",""],["memchr2",""],["memchr3",""],["memrchr",""],["memrchr2",""],["memrchr3",""],["reverse_pos","Compute the position of the last matching byte from the given mask. The position returned is always in the range [0, 31]."],["reverse_pos2","Compute the position of the last matching byte from the given masks. The position returned is always in the range [0, 31]. Each mask corresponds to the equality comparison of a single byte."],["reverse_pos3","Compute the position of the last matching byte from the given masks. The position returned is always in the range [0, 31]. Each mask corresponds to the equality comparison of a single byte."],["reverse_search1",""],["reverse_search2",""],["reverse_search3",""],["sub","Subtract `b` from `a` and return the difference. `a` should be greater than or equal to `b`."]]});