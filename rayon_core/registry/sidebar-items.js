initSidebarItems({"constant":[["WORKER_THREAD_STATE",""]],"fn":[["global_registry","Starts the worker threads (if that has not already happened). If initialization has not already occurred, use the default configuration."],["in_worker","If already in a worker-thread, just execute `op`.  Otherwise, execute `op` in the default thread-pool. Either way, block until `op` completes and return its return value. If `op` panics, that panic will be propagated as well.  The second argument indicates `true` if injection was performed, `false` if executed directly."],["init_global_registry","Starts the worker threads (if that has not already happened) with the given builder."],["main_loop","////////////////////////////////////////////////////////////////////////"],["set_global_registry","Starts the worker threads (if that has not already happened) by creating a registry with the given callback."]],"static":[["THE_REGISTRY","//////////////////////////////////////////////////////////////////////// Initialization"],["THE_REGISTRY_SET",""]],"struct":[["CustomSpawn","Spawns a thread with a user’s custom callback."],["DefaultSpawn","Spawns a thread in the “normal” way with `std::thread::Builder`."],["Registry",""],["RegistryId",""],["Terminator",""],["ThreadBuilder","Thread builder used for customization via `ThreadPoolBuilder::spawn_handler`."],["ThreadInfo",""],["WorkerThread","//////////////////////////////////////////////////////////////////////// WorkerThread identifiers"],["XorShift64Star","xorshift* is a fast pseudorandom number generator which will even tolerate weak seeding, as long as it’s not zero."]],"trait":[["ThreadSpawn","Generalized trait for spawning a thread in the `Registry`."]]});