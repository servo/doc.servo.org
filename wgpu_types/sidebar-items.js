initSidebarItems({"constant":[["BIND_BUFFER_ALIGNMENT","Bound uniform/storage buffer offsets must be aligned to this number."],["COPY_BUFFER_ALIGNMENT","Buffer to buffer copy offsets and sizes must be aligned to this number."],["COPY_BYTES_PER_ROW_ALIGNMENT","Buffer-Texture copies must have `bytes_per_row` aligned to this number."],["PUSH_CONSTANT_ALIGNMENT","Alignment all push constants need"],["VERTEX_STRIDE_ALIGNMENT","Vertex buffer strides have to be aligned to this number."]],"enum":[["AddressMode","How edges should be handled in texture addressing."],["Backend","Backends supported by wgpu."],["BindingType","Specific type of a binding."],["BlendFactor","Alpha blend factor."],["BlendOperation","Alpha blend operation."],["CompareFunction","Comparison function used for depth and stencil operations."],["CullMode","Type of faces to be culled."],["FilterMode","Texel mixing mode when sampling between texels."],["FrontFace","Winding order which classifies the “front” face."],["IndexFormat","Format of indices used with pipeline."],["InputStepMode","Rate that determines when vertex data is advanced."],["PolygonMode","Type of drawing mode for polygons"],["PowerPreference","Power Preference when choosing a physical adapter."],["PresentMode","Behavior of the presentation engine based on frame rate."],["PrimitiveTopology","Primitive type the input mesh is composed of."],["SamplerBorderColor","Color variation to use when sampler addressing mode is [`AddressMode::ClampToBorder`]"],["StencilOperation","Operation to perform on the stencil value."],["SwapChainStatus","Status of the recieved swapchain image."],["TextureAspect","Kind of data the texture holds."],["TextureComponentType","Type of data shaders will read from a texture."],["TextureDimension","Dimensionality of a texture."],["TextureFormat","Underlying texture data format."],["TextureViewDimension","Dimensions of a particular texture view."],["VertexFormat","Vertex Format for a Vertex Attribute (input)."]],"struct":[["BackendBit","Represents the backends that wgpu will use."],["BindGroupLayoutEntry","Describes a single binding inside a bind group."],["BlendDescriptor","Describes the blend state of a pipeline."],["BufferCopyView","View of a buffer which can be used to copy to/from a texture."],["BufferDescriptor","Describes a [`Buffer`]."],["BufferUsage","Different ways that you can use a buffer."],["Color","RGBA double precision color."],["ColorStateDescriptor","Describes the color state of a render pipeline."],["ColorWrite","Color write mask. Disabled color channels will not be written to."],["CommandBufferDescriptor","Describes a [`CommandBuffer`]."],["CommandEncoderDescriptor","Describes a [`CommandEncoder`]."],["DepthStencilStateDescriptor","Describes the depth/stencil state in a render pipeline."],["DeviceDescriptor","Describes a [`Device`]."],["Extent3d","Extent of a texture related operation."],["Features","Features that are not guaranteed to be supported."],["Limits","Represents the sets of limits an adapter/device supports."],["Origin3d","Origin of a copy to/from a texture."],["PushConstantRange","A range of push constant memory to pass to a shader stage."],["RasterizationStateDescriptor","Describes the state of the rasterizer in a render pipeline."],["RenderBundleDescriptor","Describes a [`RenderBundle`]."],["RequestAdapterOptions","Options for requesting adapter."],["ShaderStage","Describes the shader stages that a binding will be visible from."],["StencilStateDescriptor",""],["StencilStateFaceDescriptor","Describes stencil state in a render pipeline."],["SwapChainDescriptor","Describes a [`SwapChain`]."],["TextureCopyView","View of a texture which can be used to copy to/from a buffer/texture."],["TextureDataLayout","Layout of a texture in a buffer’s memory."],["TextureDescriptor","Describes a [`Texture`]."],["TextureUsage","Different ways that you can use a texture."],["VertexAttributeDescriptor","Vertex inputs (attributes) to shaders."]],"type":[["BufferAddress","Integral type used for buffer offsets."],["BufferSize","Integral type used for buffer slice sizes."],["DynamicOffset","Integral type used for dynamic bind group offsets."],["ShaderLocation","Integral type used for binding locations in shaders."]]});