initSidebarItems({"enum":[["SpecificFragmentInfo","Info specific to the kind of fragment."]],"macro":[["layout_debug_scope",""]],"mod":[["block","Layout for CSS block-level elements."],["construct","Creates flows and fragments from a DOM tree via a bottom-up, incremental traversal of the DOM."],["context","Data needed by the layout thread."],["data",""],["display_list",""],["flex","Layout for elements with a CSS `display` property of `flex`."],["floats",""],["flow","Servo’s experimental layout system builds a tree of `Flow` and `Fragment` objects and solves layout constraints to obtain positions and display attributes of tree nodes. Positions are computed in several tree traversals driven by the fundamental data dependencies required by inline and block layout."],["flow_list",""],["flow_ref","Reference-counted pointers to flows."],["fragment","The `Fragment` type, which represents the leaves of the layout tree."],["generated_content","The generated content assignment phase."],["incremental",""],["inline",""],["layout_debug","Supports writing a trace file created during each layout scope that can be viewed by an external tool to make layout debugging easier."],["linked_list","Utility functions for doubly-linked lists."],["list_item","Layout for elements with a CSS `display` property of `list-item`. These elements consist of a block and an extra inline fragment for the marker."],["model","Borders, padding, and margins."],["multicol","CSS Multi-column layout http://dev.w3.org/csswg/css-multicol/"],["opaque_node",""],["parallel","Implements parallel traversals over the DOM and flow trees."],["persistent_list","A persistent, thread-safe singly-linked list."],["query","Utilities for querying the layout, as needed by the layout thread."],["sequential","Implements sequential traversals over the DOM and flow trees."],["table","CSS table formatting contexts."],["table_caption","CSS table formatting contexts."],["table_cell","CSS table formatting contexts."],["table_colgroup","CSS table formatting contexts."],["table_row","CSS table formatting contexts."],["table_rowgroup","CSS table formatting contexts."],["table_wrapper","CSS tables."],["text","Text layout."],["traversal","Traversals over the DOM and flow trees, running the layout computations."],["wrapper","A safe wrapper for DOM nodes that prevents layout from mutating the DOM, from letting DOM nodes escape, and from generally doing anything that it isn’t supposed to. This is accomplished via a simple whitelist of allowed operations, along with some lifetime magic to prevent nodes from escaping."]],"struct":[["Fragment","Fragments (`struct Fragment`) are the leaves of the layout tree. They cannot position themselves. In general, fragments do not have a simple correspondence with CSS fragments in the specification:"]]});