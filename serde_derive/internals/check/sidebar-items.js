initSidebarItems({"fn":[["allow_transparent",""],["check","Cross-cutting checks that require looking at more than a single attrs object. Simpler checks should happen when parsing and building the attrs."],["check_adjacent_tag_conflict","In the case of adjacently-tagged enums, the type and the contents tag must differ, for the same reason."],["check_flatten","Flattening has some restrictions we can test."],["check_flatten_field",""],["check_from_and_try_from",""],["check_getter","Getters are only allowed inside structs (not enums) with the `remote` attribute."],["check_identifier","The `other` attribute must be used at most once and it must be the last variant of an enum."],["check_internal_tag_field_name_conflict","The tag of an internally-tagged struct variant must not be the same as either one of its fields, as this would result in duplicate keys in the serialized output and/or ambiguity in the to-be-deserialized input."],["check_transparent","Enums and unit structs cannot be transparent."],["check_variant_skip_attrs","Skip-(de)serializing attributes are not allowed on variants marked (de)serialize_with."],["member_message",""]]});