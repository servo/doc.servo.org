initSidebarItems({"fn":[["alignr256_14","Shift `a` to the left by two bytes (removing its two most significant bytes), and concatenate it with the the two most significant bytes of `b`."],["alignr256_15","Shift `a` to the left by one byte (removing its most significant byte), and concatenate it with the the most significant byte of `b`."],["is_all_zeroes128","Returns true if and only if all bits in the given 128-bit vector are 0."],["is_all_zeroes256","Returns true if and only if all bits in the given 256-bit vector are 0."],["loadu128","Load a 128-bit vector from slice at the given position. The slice does not need to be unaligned."],["loadu256","Load a 256-bit vector from slice at the given position. The slice does not need to be unaligned."],["ones128","Returns a 128-bit vector with all bits set to 1."],["ones256","Returns a 256-bit vector with all bits set to 1."],["unpack64x128","Unpack the given 128-bit vector into its 64-bit components. The first element of the array returned corresponds to the least significant 64-bit lane in `a`."],["unpack64x256","Unpack the given 256-bit vector into its 64-bit components. The first element of the array returned corresponds to the least significant 64-bit lane in `a`."],["unpacklo64x256","Unpack the low 128-bits of `a` and `b`, and return them as 4 64-bit integers."],["zeroes128","Returns a 128-bit vector with all bits set to 0."],["zeroes256","Returns a 256-bit vector with all bits set to 0."]]});