initSidebarItems({"fn":[["cast","Cast from one machine scalar to another."]],"macro":[["float_to_int_unchecked",""],["impl_as_primitive",""],["impl_from_primitive",""],["impl_from_primitive_wrapping",""],["impl_num_cast",""],["impl_to_primitive_float",""],["impl_to_primitive_float_to_float",""],["impl_to_primitive_float_to_signed_int",""],["impl_to_primitive_float_to_unsigned_int",""],["impl_to_primitive_int",""],["impl_to_primitive_int_to_int",""],["impl_to_primitive_int_to_uint",""],["impl_to_primitive_uint",""],["impl_to_primitive_uint_to_int",""],["impl_to_primitive_uint_to_uint",""],["impl_to_primitive_wrapping",""]],"trait":[["AsPrimitive","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait `AsPrimitive` should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail."],["FromPrimitive","A generic trait for converting a number to a value."],["NumCast","An interface for casting between machine scalars."],["ToPrimitive","A generic trait for converting a value to a number."]]});