(function() {var implementors = {
"bincode":[["impl&lt;'a, O: <a class=\"trait\" href=\"bincode/config/trait.Options.html\" title=\"trait bincode::config::Options\">Options</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTuple.html\" title=\"trait serde::ser::SerializeTuple\">SerializeTuple</a> for <a class=\"struct\" href=\"bincode/ser/struct.SizeCompound.html\" title=\"struct bincode::ser::SizeCompound\">SizeCompound</a>&lt;'a, O&gt;"],["impl&lt;'a, W, O&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTuple.html\" title=\"trait serde::ser::SerializeTuple\">SerializeTuple</a> for <a class=\"struct\" href=\"bincode/ser/struct.Compound.html\" title=\"struct bincode::ser::Compound\">Compound</a>&lt;'a, W, O&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,\n    O: <a class=\"trait\" href=\"bincode/config/trait.Options.html\" title=\"trait bincode::config::Options\">Options</a>,</div>"]],
"serde":[],
"serde_json":[["impl <a class=\"trait\" href=\"serde/ser/trait.SerializeTuple.html\" title=\"trait serde::ser::SerializeTuple\">SerializeTuple</a> for <a class=\"struct\" href=\"serde_json/value/ser/struct.SerializeVec.html\" title=\"struct serde_json::value::ser::SerializeVec\">SerializeVec</a>"]],
"serde_urlencoded":[["impl&lt;'input, 'output, Target&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTuple.html\" title=\"trait serde::ser::SerializeTuple\">SerializeTuple</a> for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleSerializer.html\" title=\"struct serde_urlencoded::ser::TupleSerializer\">TupleSerializer</a>&lt;'input, 'output, Target&gt;<div class=\"where\">where\n    Target: 'output + <a class=\"trait\" href=\"form_urlencoded/trait.Target.html\" title=\"trait form_urlencoded::Target\">UrlEncodedTarget</a>,</div>"],["impl&lt;'input, 'target, Target&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTuple.html\" title=\"trait serde::ser::SerializeTuple\">SerializeTuple</a> for <a class=\"struct\" href=\"serde_urlencoded/ser/pair/struct.PairSerializer.html\" title=\"struct serde_urlencoded::ser::pair::PairSerializer\">PairSerializer</a>&lt;'input, 'target, Target&gt;<div class=\"where\">where\n    Target: 'target + <a class=\"trait\" href=\"form_urlencoded/trait.Target.html\" title=\"trait form_urlencoded::Target\">UrlEncodedTarget</a>,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()