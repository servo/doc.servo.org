initSidebarItems({"constant":[["NULLPTR",""]],"enum":[["Argument","Enum of possible argument as recognized by the wire, including values"],["ArgumentType","Enum of possible argument types as recognized by the wire"],["ProxyMap","This type only exists for type-level compatibility with the rust implementation."]],"macro":[["smallvec","Creates a [`SmallVec`] containing the arguments."]],"mod":[["sys","C-associated types"],["wl_seat","group of input devices"],["wl_surface","an onscreen surface"],["zwp_tablet_manager_v2","controller object for graphic tablet devices"],["zwp_tablet_pad_group_v2","a set of buttons, rings and strips"],["zwp_tablet_pad_ring_v2","pad ring"],["zwp_tablet_pad_strip_v2","pad strip"],["zwp_tablet_pad_v2","a set of buttons, rings and strips"],["zwp_tablet_seat_v2","controller object for graphic tablet devices of a seat"],["zwp_tablet_tool_v2","a physical tablet tool"],["zwp_tablet_v2","graphics tablet device"]],"static":[["types_null",""]],"struct":[["AnonymousObject","Anonymous interface"],["Attached","A handle to a proxy that has been attached to an event queue"],["Main","A main handle to a proxy"],["Message","A wire message"],["MessageDesc","Wire metadata of a given message"],["Object","The representation of a protocol object"],["Proxy","An handle to a wayland proxy"]],"trait":[["Interface","The description of a wayland interface"],["MessageGroup","A group of messages"],["ObjectMetadata","A trait representing the metadata a wayland implementation may attach to an object."]]});