initSidebarItems({"constant":[["CLOSED","Semaphore has been closed, no more permits will be issued."],["CLOSED_FLAG","Signal the semaphore is closed"],["DROPPED","The permit that owns the `Waiter` dropped."],["MAX_PERMITS","Maximum number of permits a semaphore can manage"],["NUM_FLAG","Flag differentiating between available permits and waiter pointers."],["NUM_SHIFT","When representing “numbers”, the state has to be shifted this much (to get rid of the flag bit)."],["PERMIT_MASK","Masks the waiter state to only contain bits tracking number of requested permits."],["PERMIT_ONE","Represents “one requested permit” in the waiter state"],["PERMIT_SHIFT","How much to shift a permit count to pack it into the waker state"],["QUEUED","Waiter node is in the semaphore queue"]],"enum":[["PermitState","Permit state"],["TryAcquireError","Error returned by `Permit::try_acquire`."]],"fn":[["to_try_acquire",""]],"struct":[["AcquireError","Error returned by `Permit::poll_acquire`."],["Permit","A semaphore permit"],["SemState","Semaphore state"],["Semaphore","Futures-aware semaphore."],["Waiter","Node used to notify the semaphore waiter when permit is available."],["WaiterState","State for an individual waker node"]]});