initSidebarItems({"fn":[["accept_async","Accepts a new WebSocket connection with the provided stream."],["accept_async_with_config","The same as `accept_async()` but the one can specify a websocket configuration. Please refer to `accept_async()` for more details."],["accept_hdr_async","Accepts a new WebSocket connection with the provided stream."],["accept_hdr_async_with_config","The same as `accept_hdr_async()` but the one can specify a websocket configuration. Please refer to `accept_hdr_async()` for more details."],["client_async","Creates a WebSocket handshake from a request and a stream. For convenience, the user may call this with a url string, a URL, or a `Request`. Calling with `Request` allows the user to add a WebSocket protocol or other custom headers."],["client_async_tls","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required."],["client_async_tls_with_config","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required and using the given WebSocket configuration."],["client_async_tls_with_connector","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required and using the given connector."],["client_async_tls_with_connector_and_config","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required and using the given connector and WebSocket configuration."],["client_async_with_config","The same as `client_async()` but the one can specify a websocket configuration. Please refer to `client_async()` for more details."],["connect_async","Connect to a given URL."],["connect_async_with_config","Connect to a given URL with a given WebSocket configuration."],["connect_async_with_tls_connector","Connect to a given URL using the provided TLS connector."],["connect_async_with_tls_connector_and_config","Connect to a given URL using the provided TLS connector."]],"mod":[["tokio_tls",""]],"struct":[["TokioAdapter","Adapter for `tokio::io::AsyncRead` and `tokio::io::AsyncWrite` to provide the variants from the `futures` crate and the other way around."]],"type":[["ClientStream","Type alias for the stream type of the `client_async()` functions."],["ConnectStream","Type alias for the stream type of the `connect_async()` functions."]]});