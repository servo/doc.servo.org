initSidebarItems({"constant":[["XCB_CONN_CLOSED_EXT_NOTSUPPORTED","xcb connection shutdown because of extension not supported"],["XCB_CONN_CLOSED_FDPASSING_FAILED","Connection closed because some FD passing operation failed"],["XCB_CONN_CLOSED_INVALID_SCREEN","Connection closed because the server does not have a screen matching the display."],["XCB_CONN_CLOSED_MEM_INSUFFICIENT","malloc(), calloc() and realloc() error upon failure, for eg ENOMEM"],["XCB_CONN_CLOSED_PARSE_ERR","Connection closed, error during parsing display string."],["XCB_CONN_CLOSED_REQ_LEN_EXCEED","Connection closed, exceeding request length that server accepts."],["XCB_CONN_ERROR","xcb connection errors because of socket, pipe and other stream errors."],["XCB_COPY_FROM_PARENT","XCB_COPY_FROM_PARENT can be used for many xcb_create_window parameters"],["XCB_CURRENT_TIME","XCB_CURRENT_TIME can be used in most requests that take an xcb_timestamp_t"],["XCB_NONE","XCB_NONE is the universal null resource or null atom parameter value for many core X requests"],["XCB_NO_SYMBOL","XCB_NO_SYMBOL fills in unused entries in xcb_keysym_t tables"]],"enum":[["xcb_connection_t","XCB connection structure An opaque structure that contain all data that XCB needs to communicate with an X server."],["xcb_extension_t","Opaque structure used as key for xcb_get_extension_data_t"],["xcb_special_event_t",""]],"fn":[["xcb_connect","Connects to the X server. displayname: The name of the display. screenp: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure."],["xcb_connect_to_display_with_auth_info","Connects to the X server, using an authorization information. display: The name of the display. auth: The authorization information. screen: A pointer to a preferred screen number. Returns A newly allocated xcb_connection_t structure."],["xcb_connect_to_fd","Connects to the X server."],["xcb_connection_has_error","Test whether the connection has shut down due to a fatal error."],["xcb_discard_reply","Discards the reply for a request."],["xcb_discard_reply64","Discards the reply for a request, given by a 64bit sequence number"],["xcb_disconnect","Closes the connection."],["xcb_flush","Forces any buffered output to be written to the server. Blocks until the write is complete."],["xcb_generate_id","Allocates an XID for a new object. Returns A newly allocated XID."],["xcb_get_extension_data","Caches reply information from QueryExtension requests."],["xcb_get_file_descriptor","Access the file descriptor of the connection."],["xcb_get_maximum_request_length","Returns the maximum request length that this server accepts."],["xcb_get_setup","Access the data returned by the server."],["xcb_parse_display","Parses a display string name in the form documented by X(7x). name: The name of the display. host: A pointer to a mallocâ€™d copy of the hostname. display: A pointer to the display number. screen: A pointer to the screen number."],["xcb_poll_for_event","Returns the next event or error from the server."],["xcb_poll_for_queued_event","Returns the next event without reading from the connection."],["xcb_poll_for_special_event","Returns the next event from a special queue"],["xcb_prefetch_extension_data","Prefetch of extension data into the extension cache"],["xcb_prefetch_maximum_request_length","Prefetch the maximum request length without blocking."],["xcb_register_for_special_xge","Listen for a special event"],["xcb_request_check","Return the error for a request, or NULL if none can ever arrive."],["xcb_unregister_for_special_event","Stop listening for a special event"],["xcb_wait_for_event","Returns the next event or error from the server."],["xcb_wait_for_special_event","Returns the next event from a special queue, blocking until one arrives"]],"struct":[["xcb_auth_info_t","Container for authorization information. A container for authorization information to be sent to the X server"],["xcb_ge_event_t","GE event"],["xcb_generic_error_t","Generic error"],["xcb_generic_event_t","Generic event"],["xcb_generic_iterator_t","Generic iterator"],["xcb_generic_reply_t","Generic reply"],["xcb_void_cookie_t","Generic cookie"]]});