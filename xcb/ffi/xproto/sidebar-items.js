initSidebarItems({"constant":[["XCB_ACCESS",""],["XCB_ACCESS_CONTROL_DISABLE",""],["XCB_ACCESS_CONTROL_ENABLE",""],["XCB_ALLOC",""],["XCB_ALLOC_COLOR",""],["XCB_ALLOC_COLOR_CELLS",""],["XCB_ALLOC_COLOR_PLANES",""],["XCB_ALLOC_NAMED_COLOR",""],["XCB_ALLOW_ASYNC_BOTH","For AsyncBoth, if the pointer and the keyboard are frozen by the client, event processing for both devices continues normally. If a device is frozen twice by the client on behalf of two separate grabs, AsyncBoth thaws for both. AsyncBoth has no effect unless both pointer and keyboard are frozen by the client."],["XCB_ALLOW_ASYNC_KEYBOARD","For AsyncKeyboard, if the keyboard is frozen by the client, keyboard event processing continues normally. If the keyboard is frozen twice by the client on behalf of two separate grabs, AsyncKeyboard thaws for both. AsyncKeyboard has no effect if the keyboard is not frozen by the client, but the keyboard need not be grabbed by the client."],["XCB_ALLOW_ASYNC_POINTER","For AsyncPointer, if the pointer is frozen by the client, pointer event processing continues normally. If the pointer is frozen twice by the client on behalf of two separate grabs, AsyncPointer thaws for both. AsyncPointer has no effect if the pointer is not frozen by the client, but the pointer need not be grabbed by the client."],["XCB_ALLOW_EVENTS",""],["XCB_ALLOW_REPLAY_KEYBOARD","For ReplayKeyboard, if the keyboard is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabKey or from a previous AllowEvents with mode SyncKeyboard but not from a GrabKeyboard), then the keyboard grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the keyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event."],["XCB_ALLOW_REPLAY_POINTER","For ReplayPointer, if the pointer is actively grabbed by the client and is frozen as the result of an event having been sent to the client (either from the activation of a GrabButton or from a previous AllowEvents with mode SyncPointer but not from a GrabPointer), then the pointer grab is released and that event is completely reprocessed, this time ignoring any passive grabs at or above (towards the root) the grab-window of the grab just released. The request has no effect if the pointer is not grabbed by the client or if the pointer is not frozen as the result of an event."],["XCB_ALLOW_SYNC_BOTH","For SyncBoth, if both pointer and keyboard are frozen by the client, event processing (for both devices) continues normally until the next ButtonPress, ButtonRelease, KeyPress, or KeyRelease event is reported to the client for a grabbed device (button event for the pointer, key event for the keyboard), at which time the devices again appear to freeze. However, if the reported event causes the grab to be released, then the devices do not freeze (but if the other device is still grabbed, then a subsequent event for it will still cause both devices to freeze). SyncBoth has no effect unless both pointer and keyboard are frozen by the client. If the pointer or keyboard is frozen twice by the client on behalf of two separate grabs, SyncBoth thaws for both (but a subsequent freeze for SyncBoth will only freeze each device once)."],["XCB_ALLOW_SYNC_KEYBOARD","For SyncKeyboard, if the keyboard is frozen and actively grabbed by the client, keyboard event processing continues normally until the next KeyPress or KeyRelease event is reported to the client, at which time the keyboard again appears to freeze. However, if the reported event causes the keyboard grab to be released, then the keyboard does not freeze. SyncKeyboard has no effect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client."],["XCB_ALLOW_SYNC_POINTER","For SyncPointer, if the pointer is frozen and actively grabbed by the client, pointer event processing continues normally until the next ButtonPress or ButtonRelease event is reported to the client, at which time the pointer again appears to freeze. However, if the reported event causes the pointer grab to be released, then the pointer does not freeze. SyncPointer has no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client."],["XCB_ARC_MODE_CHORD",""],["XCB_ARC_MODE_PIE_SLICE",""],["XCB_ATOM",""],["XCB_ATOM_ANY",""],["XCB_ATOM_ARC",""],["XCB_ATOM_ATOM",""],["XCB_ATOM_BITMAP",""],["XCB_ATOM_CAP_HEIGHT",""],["XCB_ATOM_CARDINAL",""],["XCB_ATOM_COLORMAP",""],["XCB_ATOM_COPYRIGHT",""],["XCB_ATOM_CURSOR",""],["XCB_ATOM_CUT_BUFFER0",""],["XCB_ATOM_CUT_BUFFER1",""],["XCB_ATOM_CUT_BUFFER2",""],["XCB_ATOM_CUT_BUFFER3",""],["XCB_ATOM_CUT_BUFFER4",""],["XCB_ATOM_CUT_BUFFER5",""],["XCB_ATOM_CUT_BUFFER6",""],["XCB_ATOM_CUT_BUFFER7",""],["XCB_ATOM_DRAWABLE",""],["XCB_ATOM_END_SPACE",""],["XCB_ATOM_FAMILY_NAME",""],["XCB_ATOM_FONT",""],["XCB_ATOM_FONT_NAME",""],["XCB_ATOM_FULL_NAME",""],["XCB_ATOM_INTEGER",""],["XCB_ATOM_ITALIC_ANGLE",""],["XCB_ATOM_MAX_SPACE",""],["XCB_ATOM_MIN_SPACE",""],["XCB_ATOM_NONE",""],["XCB_ATOM_NORM_SPACE",""],["XCB_ATOM_NOTICE",""],["XCB_ATOM_PIXMAP",""],["XCB_ATOM_POINT",""],["XCB_ATOM_POINT_SIZE",""],["XCB_ATOM_PRIMARY",""],["XCB_ATOM_QUAD_WIDTH",""],["XCB_ATOM_RECTANGLE",""],["XCB_ATOM_RESOLUTION",""],["XCB_ATOM_RESOURCE_MANAGER",""],["XCB_ATOM_RGB_BEST_MAP",""],["XCB_ATOM_RGB_BLUE_MAP",""],["XCB_ATOM_RGB_COLOR_MAP",""],["XCB_ATOM_RGB_DEFAULT_MAP",""],["XCB_ATOM_RGB_GRAY_MAP",""],["XCB_ATOM_RGB_GREEN_MAP",""],["XCB_ATOM_RGB_RED_MAP",""],["XCB_ATOM_SECONDARY",""],["XCB_ATOM_STRIKEOUT_ASCENT",""],["XCB_ATOM_STRIKEOUT_DESCENT",""],["XCB_ATOM_STRING",""],["XCB_ATOM_SUBSCRIPT_X",""],["XCB_ATOM_SUBSCRIPT_Y",""],["XCB_ATOM_SUPERSCRIPT_X",""],["XCB_ATOM_SUPERSCRIPT_Y",""],["XCB_ATOM_UNDERLINE_POSITION",""],["XCB_ATOM_UNDERLINE_THICKNESS",""],["XCB_ATOM_VISUALID",""],["XCB_ATOM_WEIGHT",""],["XCB_ATOM_WINDOW",""],["XCB_ATOM_WM_CLASS",""],["XCB_ATOM_WM_CLIENT_MACHINE",""],["XCB_ATOM_WM_COMMAND",""],["XCB_ATOM_WM_HINTS",""],["XCB_ATOM_WM_ICON_NAME",""],["XCB_ATOM_WM_ICON_SIZE",""],["XCB_ATOM_WM_NAME",""],["XCB_ATOM_WM_NORMAL_HINTS",""],["XCB_ATOM_WM_SIZE_HINTS",""],["XCB_ATOM_WM_TRANSIENT_FOR",""],["XCB_ATOM_WM_ZOOM_HINTS",""],["XCB_ATOM_X_HEIGHT",""],["XCB_AUTO_REPEAT_MODE_DEFAULT",""],["XCB_AUTO_REPEAT_MODE_OFF",""],["XCB_AUTO_REPEAT_MODE_ON",""],["XCB_BACKING_STORE_ALWAYS",""],["XCB_BACKING_STORE_NOT_USEFUL",""],["XCB_BACKING_STORE_WHEN_MAPPED",""],["XCB_BACK_PIXMAP_NONE",""],["XCB_BACK_PIXMAP_PARENT_RELATIVE",""],["XCB_BELL",""],["XCB_BLANKING_DEFAULT",""],["XCB_BLANKING_NOT_PREFERRED",""],["XCB_BLANKING_PREFERRED",""],["XCB_BUTTON_INDEX_1","The left mouse button."],["XCB_BUTTON_INDEX_2","The right mouse button."],["XCB_BUTTON_INDEX_3","The middle mouse button."],["XCB_BUTTON_INDEX_4","Scroll wheel. TODO: direction?"],["XCB_BUTTON_INDEX_5","Scroll wheel. TODO: direction?"],["XCB_BUTTON_INDEX_ANY","Any of the following (or none):"],["XCB_BUTTON_MASK_1",""],["XCB_BUTTON_MASK_2",""],["XCB_BUTTON_MASK_3",""],["XCB_BUTTON_MASK_4",""],["XCB_BUTTON_MASK_5",""],["XCB_BUTTON_MASK_ANY",""],["XCB_BUTTON_PRESS",""],["XCB_BUTTON_RELEASE",""],["XCB_CAP_STYLE_BUTT",""],["XCB_CAP_STYLE_NOT_LAST",""],["XCB_CAP_STYLE_PROJECTING",""],["XCB_CAP_STYLE_ROUND",""],["XCB_CHANGE_ACTIVE_POINTER_GRAB",""],["XCB_CHANGE_GC",""],["XCB_CHANGE_HOSTS",""],["XCB_CHANGE_KEYBOARD_CONTROL",""],["XCB_CHANGE_KEYBOARD_MAPPING",""],["XCB_CHANGE_POINTER_CONTROL",""],["XCB_CHANGE_PROPERTY",""],["XCB_CHANGE_SAVE_SET",""],["XCB_CHANGE_WINDOW_ATTRIBUTES",""],["XCB_CIRCULATE_LOWER_HIGHEST",""],["XCB_CIRCULATE_NOTIFY",""],["XCB_CIRCULATE_RAISE_LOWEST",""],["XCB_CIRCULATE_REQUEST",""],["XCB_CIRCULATE_WINDOW",""],["XCB_CLEAR_AREA",""],["XCB_CLIENT_MESSAGE",""],["XCB_CLIP_ORDERING_UNSORTED",""],["XCB_CLIP_ORDERING_YX_BANDED",""],["XCB_CLIP_ORDERING_YX_SORTED",""],["XCB_CLIP_ORDERING_Y_SORTED",""],["XCB_CLOSE_DOWN_DESTROY_ALL",""],["XCB_CLOSE_DOWN_RETAIN_PERMANENT",""],["XCB_CLOSE_DOWN_RETAIN_TEMPORARY",""],["XCB_CLOSE_FONT",""],["XCB_COLORMAP",""],["XCB_COLORMAP_ALLOC_ALL",""],["XCB_COLORMAP_ALLOC_NONE",""],["XCB_COLORMAP_NONE",""],["XCB_COLORMAP_NOTIFY",""],["XCB_COLORMAP_STATE_INSTALLED","The colormap was installed."],["XCB_COLORMAP_STATE_UNINSTALLED","The colormap was uninstalled."],["XCB_COLOR_FLAG_BLUE",""],["XCB_COLOR_FLAG_GREEN",""],["XCB_COLOR_FLAG_RED",""],["XCB_CONFIGURE_NOTIFY",""],["XCB_CONFIGURE_REQUEST",""],["XCB_CONFIGURE_WINDOW",""],["XCB_CONFIG_WINDOW_BORDER_WIDTH",""],["XCB_CONFIG_WINDOW_HEIGHT",""],["XCB_CONFIG_WINDOW_SIBLING",""],["XCB_CONFIG_WINDOW_STACK_MODE",""],["XCB_CONFIG_WINDOW_WIDTH",""],["XCB_CONFIG_WINDOW_X",""],["XCB_CONFIG_WINDOW_Y",""],["XCB_CONVERT_SELECTION",""],["XCB_COORD_MODE_ORIGIN","Treats all coordinates as relative to the origin."],["XCB_COORD_MODE_PREVIOUS","Treats all coordinates after the first as relative to the previous coordinate."],["XCB_COPY_AREA",""],["XCB_COPY_COLORMAP_AND_FREE",""],["XCB_COPY_GC",""],["XCB_COPY_PLANE",""],["XCB_CREATE_COLORMAP",""],["XCB_CREATE_CURSOR",""],["XCB_CREATE_GC",""],["XCB_CREATE_GLYPH_CURSOR",""],["XCB_CREATE_NOTIFY",""],["XCB_CREATE_PIXMAP",""],["XCB_CREATE_WINDOW",""],["XCB_CURSOR",""],["XCB_CURSOR_NONE",""],["XCB_CW_BACKING_PIXEL","The backing-pixel specifies what value to use in planes not covered by backing-planes. The server is free to save only the specified bit planes in the backing-store or save-under and regenerate the remaining planes with the specified pixel value. Any bits beyond the specified depth of the window in these values are simply ignored."],["XCB_CW_BACKING_PLANES","The backing-planes indicates (with bits set to 1) which bit planes of the window hold dynamic data that must be preserved in backing-stores and during save-unders."],["XCB_CW_BACKING_STORE","A backing-store of `WhenMapped` advises the server that maintaining contents of obscured regions when the window is mapped would be beneficial. A backing-store of `Always` advises the server that maintaining contents even when the window is unmapped would be beneficial. In this case, the server may generate an exposure event when the window is created. A value of `NotUseful` advises the server that maintaining contents is unnecessary, although a server may still choose to maintain contents while the window is mapped. Note that if the server maintains contents, then the server should maintain complete contents not just the region within the parent boundaries, even if the window is larger than its parent. While the server maintains contents, exposure events will not normally be generated, but the server may stop maintaining contents at any time."],["XCB_CW_BACK_PIXEL","Overrides `BackPixmap`. A pixmap of undefined size filled with the specified background pixel is used for the background. Range-checking is not performed, the background pixel is truncated to the appropriate number of bits."],["XCB_CW_BACK_PIXMAP","Overrides the default background-pixmap. The background pixmap and window must have the same root and same depth. Any size pixmap can be used, although some sizes may be faster than others."],["XCB_CW_BIT_GRAVITY","Defines which region of the window should be retained if the window is resized."],["XCB_CW_BORDER_PIXEL","Overrides `BorderPixmap`. A pixmap of undefined size filled with the specified border pixel is used for the border. Range checking is not performed on the border-pixel value, it is truncated to the appropriate number of bits."],["XCB_CW_BORDER_PIXMAP","Overrides the default border-pixmap. The border pixmap and window must have the same root and the same depth. Any size pixmap can be used, although some sizes may be faster than others."],["XCB_CW_COLORMAP","The colormap specifies the colormap that best reflects the true colors of the window. Servers capable of supporting multiple hardware colormaps may use this information, and window man- agers may use it for InstallColormap requests. The colormap must have the same visual type and root as the window (or a Match error results). If CopyFromParent is specified, the parent’s colormap is copied (subsequent changes to the parent’s colormap attribute do not affect the child). However, the window must have the same visual type as the parent (or a Match error results), and the parent must not have a colormap of None (or a Match error results). For an explanation of None, see FreeColormap request. The colormap is copied by sharing the colormap object between the child and the parent, not by making a complete copy of the colormap contents."],["XCB_CW_CURSOR","If a cursor is specified, it will be used whenever the pointer is in the window. If None is speci- fied, the parent’s cursor will be used when the pointer is in the window, and any change in the parent’s cursor will cause an immediate change in the displayed cursor."],["XCB_CW_DONT_PROPAGATE","The do-not-propagate-mask defines which events should not be propagated to ancestor windows when no client has the event type selected in this window."],["XCB_CW_EVENT_MASK","The event-mask defines which events the client is interested in for this window (or for some event types, inferiors of the window)."],["XCB_CW_OVERRIDE_REDIRECT","The override-redirect specifies whether map and configure requests on this window should override a SubstructureRedirect on the parent, typically to inform a window manager not to tamper with the window."],["XCB_CW_SAVE_UNDER","If 1, the server is advised that when this window is mapped, saving the contents of windows it obscures would be beneficial."],["XCB_CW_WIN_GRAVITY","Defines how the window should be repositioned if the parent is resized (see `ConfigureWindow`)."],["XCB_DELETE_PROPERTY",""],["XCB_DESTROY_NOTIFY",""],["XCB_DESTROY_SUBWINDOWS",""],["XCB_DESTROY_WINDOW",""],["XCB_DRAWABLE",""],["XCB_ENTER_NOTIFY",""],["XCB_EVENT_MASK_BUTTON_1_MOTION",""],["XCB_EVENT_MASK_BUTTON_2_MOTION",""],["XCB_EVENT_MASK_BUTTON_3_MOTION",""],["XCB_EVENT_MASK_BUTTON_4_MOTION",""],["XCB_EVENT_MASK_BUTTON_5_MOTION",""],["XCB_EVENT_MASK_BUTTON_MOTION",""],["XCB_EVENT_MASK_BUTTON_PRESS",""],["XCB_EVENT_MASK_BUTTON_RELEASE",""],["XCB_EVENT_MASK_COLOR_MAP_CHANGE",""],["XCB_EVENT_MASK_ENTER_WINDOW",""],["XCB_EVENT_MASK_EXPOSURE",""],["XCB_EVENT_MASK_FOCUS_CHANGE",""],["XCB_EVENT_MASK_KEYMAP_STATE",""],["XCB_EVENT_MASK_KEY_PRESS",""],["XCB_EVENT_MASK_KEY_RELEASE",""],["XCB_EVENT_MASK_LEAVE_WINDOW",""],["XCB_EVENT_MASK_NO_EVENT",""],["XCB_EVENT_MASK_OWNER_GRAB_BUTTON",""],["XCB_EVENT_MASK_POINTER_MOTION",""],["XCB_EVENT_MASK_POINTER_MOTION_HINT",""],["XCB_EVENT_MASK_PROPERTY_CHANGE",""],["XCB_EVENT_MASK_RESIZE_REDIRECT",""],["XCB_EVENT_MASK_STRUCTURE_NOTIFY",""],["XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY",""],["XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT",""],["XCB_EVENT_MASK_VISIBILITY_CHANGE",""],["XCB_EXPOSE",""],["XCB_EXPOSURES_ALLOWED",""],["XCB_EXPOSURES_DEFAULT",""],["XCB_EXPOSURES_NOT_ALLOWED",""],["XCB_FAMILY_CHAOS",""],["XCB_FAMILY_DE_CNET",""],["XCB_FAMILY_INTERNET",""],["XCB_FAMILY_INTERNET_6",""],["XCB_FAMILY_SERVER_INTERPRETED",""],["XCB_FILL_POLY",""],["XCB_FILL_RULE_EVEN_ODD",""],["XCB_FILL_RULE_WINDING",""],["XCB_FILL_STYLE_OPAQUE_STIPPLED",""],["XCB_FILL_STYLE_SOLID",""],["XCB_FILL_STYLE_STIPPLED",""],["XCB_FILL_STYLE_TILED",""],["XCB_FOCUS_IN",""],["XCB_FOCUS_OUT",""],["XCB_FONT",""],["XCB_FONT_DRAW_LEFT_TO_RIGHT",""],["XCB_FONT_DRAW_RIGHT_TO_LEFT",""],["XCB_FONT_NONE",""],["XCB_FORCE_SCREEN_SAVER",""],["XCB_FREE_COLORMAP",""],["XCB_FREE_COLORS",""],["XCB_FREE_CURSOR",""],["XCB_FREE_GC",""],["XCB_FREE_PIXMAP",""],["XCB_GC_ARC_MODE","TODO"],["XCB_GC_BACKGROUND","Background colorpixel."],["XCB_GC_CAP_STYLE","The cap-style defines how the endpoints of a path are drawn: NotLast    The result is equivalent to Butt, except that for a line-width of zero the final endpoint is not drawn. Butt       The result is square at the endpoint (perpendicular to the slope of the line) with no projection beyond. Round      The result is a circular arc with its diameter equal to the line-width, centered on the endpoint; it is equivalent to Butt for line-width zero. Projecting The result is square at the end, but the path continues beyond the endpoint for a distance equal to half the line-width; it is equivalent to Butt for line-width zero."],["XCB_GC_CLIP_MASK","The clip-mask restricts writes to the destination drawable. Only pixels where the clip-mask has bits set to 1 are drawn. Pixels are not drawn outside the area covered by the clip-mask or where the clip-mask has bits set to 0. The clip-mask affects all graphics requests, but it does not clip sources. The clip-mask origin is interpreted relative to the origin of whatever destination drawable is specified in a graphics request. If a pixmap is specified as the clip-mask, it must have depth 1 and have the same root as the gcontext (or a Match error results). If clip-mask is None, then pixels are always drawn, regardless of the clip origin. The clip-mask can also be set with the SetClipRectangles request."],["XCB_GC_CLIP_ORIGIN_X","TODO"],["XCB_GC_CLIP_ORIGIN_Y","TODO"],["XCB_GC_DASH_LIST","TODO"],["XCB_GC_DASH_OFFSET","TODO"],["XCB_GC_FILL_RULE",""],["XCB_GC_FILL_STYLE","The fill-style defines the contents of the source for line, text, and fill requests. For all text and fill requests (for example, PolyText8, PolyText16, PolyFillRectangle, FillPoly, and PolyFillArc) as well as for line requests with line-style Solid, (for example, PolyLine, PolySegment, PolyRectangle, PolyArc) and for the even dashes for line requests with line-style OnOffDash or DoubleDash: Solid                     Foreground Tiled                     Tile OpaqueStippled            A tile with the same width and height as stipple but with background everywhere stipple has a zero and with foreground everywhere stipple has a one Stippled                  Foreground masked by stipple For the odd dashes for line requests with line-style DoubleDash: Solid                     Background Tiled                     Same as for even dashes OpaqueStippled            Same as for even dashes Stippled                  Background masked by stipple"],["XCB_GC_FONT","Which font to use for the `ImageText8` and `ImageText16` requests."],["XCB_GC_FOREGROUND","Foreground colorpixel."],["XCB_GC_FUNCTION","TODO: Refer to GX"],["XCB_GC_GRAPHICS_EXPOSURES","Whether ExposureEvents should be generated (1) or not (0)."],["XCB_GC_JOIN_STYLE","The join-style defines how corners are drawn for wide lines: Miter               The outer edges of the two lines extend to meet at an angle. However, if the angle is less than 11 degrees, a Bevel join-style is used instead. Round               The result is a circular arc with a diameter equal to the line-width, centered on the joinpoint. Bevel               The result is Butt endpoint styles, and then the triangular notch is filled."],["XCB_GC_LINE_STYLE","The line-style defines which sections of a line are drawn: Solid                The full path of the line is drawn. DoubleDash           The full path of the line is drawn, but the even dashes are filled differently than the odd dashes (see fill-style), with Butt cap-style used where even and odd dashes meet. OnOffDash            Only the even dashes are drawn, and cap-style applies to all internal ends of the individual dashes (except NotLast is treated as Butt)."],["XCB_GC_LINE_WIDTH","The line-width is measured in pixels and can be greater than or equal to one, a wide line, or the special value zero, a thin line."],["XCB_GC_PLANE_MASK","In graphics operations, given a source and destination pixel, the result is computed bitwise on corresponding bits of the pixels; that is, a Boolean operation is performed in each bit plane. The plane-mask restricts the operation to a subset of planes, so the result is:"],["XCB_GC_STIPPLE","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others."],["XCB_GC_SUBWINDOW_MODE","For ClipByChildren, both source and destination windows are additionally clipped by all viewable InputOutput children. For IncludeInferiors, neither source nor destination window is clipped by inferiors. This will result in including subwindow contents in the source and drawing through subwindow boundaries of the destination. The use of IncludeInferiors with a source or destination window of one depth with mapped inferiors of differing depth is not illegal, but the semantics is undefined by the core protocol."],["XCB_GC_TILE","The tile/stipple represents an infinite two-dimensional plane with the tile/stipple replicated in all dimensions. When that plane is superimposed on the drawable for use in a graphics operation, the upper-left corner of some instance of the tile/stipple is at the coordinates within the drawable specified by the tile/stipple origin. The tile/stipple and clip origins are interpreted relative to the origin of whatever destination drawable is specified in a graphics request. The tile pixmap must have the same root and depth as the gcontext (or a Match error results). The stipple pixmap must have depth one and must have the same root as the gcontext (or a Match error results). For fill-style Stippled (but not fill-style OpaqueStippled), the stipple pattern is tiled in a single plane and acts as an additional clip mask to be ANDed with the clip-mask. Any size pixmap can be used for tiling or stippling, although some sizes may be faster to use than others."],["XCB_GC_TILE_STIPPLE_ORIGIN_X","TODO"],["XCB_GC_TILE_STIPPLE_ORIGIN_Y","TODO"],["XCB_GET_ATOM_NAME",""],["XCB_GET_FONT_PATH",""],["XCB_GET_GEOMETRY",""],["XCB_GET_IMAGE",""],["XCB_GET_INPUT_FOCUS",""],["XCB_GET_KEYBOARD_CONTROL",""],["XCB_GET_KEYBOARD_MAPPING",""],["XCB_GET_MODIFIER_MAPPING",""],["XCB_GET_MOTION_EVENTS",""],["XCB_GET_POINTER_CONTROL",""],["XCB_GET_POINTER_MAPPING",""],["XCB_GET_PROPERTY",""],["XCB_GET_PROPERTY_TYPE_ANY",""],["XCB_GET_SCREEN_SAVER",""],["XCB_GET_SELECTION_OWNER",""],["XCB_GET_WINDOW_ATTRIBUTES",""],["XCB_GE_GENERIC",""],["XCB_GRAB_ANY",""],["XCB_GRAB_BUTTON",""],["XCB_GRAB_KEY",""],["XCB_GRAB_KEYBOARD",""],["XCB_GRAB_MODE_ASYNC","Keyboard event processing continues normally."],["XCB_GRAB_MODE_SYNC","The state of the keyboard appears to freeze: No further keyboard events are generated by the server until the grabbing client issues a releasing `AllowEvents` request or until the keyboard grab is released."],["XCB_GRAB_POINTER",""],["XCB_GRAB_SERVER",""],["XCB_GRAB_STATUS_ALREADY_GRABBED",""],["XCB_GRAB_STATUS_FROZEN",""],["XCB_GRAB_STATUS_INVALID_TIME",""],["XCB_GRAB_STATUS_NOT_VIEWABLE",""],["XCB_GRAB_STATUS_SUCCESS",""],["XCB_GRAPHICS_EXPOSURE",""],["XCB_GRAVITY_BIT_FORGET",""],["XCB_GRAVITY_CENTER",""],["XCB_GRAVITY_EAST",""],["XCB_GRAVITY_NORTH",""],["XCB_GRAVITY_NORTH_EAST",""],["XCB_GRAVITY_NORTH_WEST",""],["XCB_GRAVITY_NOTIFY",""],["XCB_GRAVITY_SOUTH",""],["XCB_GRAVITY_SOUTH_EAST",""],["XCB_GRAVITY_SOUTH_WEST",""],["XCB_GRAVITY_STATIC",""],["XCB_GRAVITY_WEST",""],["XCB_GRAVITY_WIN_UNMAP",""],["XCB_GX_AND",""],["XCB_GX_AND_INVERTED",""],["XCB_GX_AND_REVERSE",""],["XCB_GX_CLEAR",""],["XCB_GX_COPY",""],["XCB_GX_COPY_INVERTED",""],["XCB_GX_EQUIV",""],["XCB_GX_INVERT",""],["XCB_GX_NAND",""],["XCB_GX_NOOP",""],["XCB_GX_NOR",""],["XCB_GX_OR",""],["XCB_GX_OR_INVERTED",""],["XCB_GX_OR_REVERSE",""],["XCB_GX_SET",""],["XCB_GX_XOR",""],["XCB_G_CONTEXT",""],["XCB_HOST_MODE_DELETE",""],["XCB_HOST_MODE_INSERT",""],["XCB_ID_CHOICE",""],["XCB_IMAGE_FORMAT_XY_BITMAP",""],["XCB_IMAGE_FORMAT_XY_PIXMAP",""],["XCB_IMAGE_FORMAT_Z_PIXMAP",""],["XCB_IMAGE_ORDER_LSB_FIRST",""],["XCB_IMAGE_ORDER_MSB_FIRST",""],["XCB_IMAGE_TEXT_16",""],["XCB_IMAGE_TEXT_8",""],["XCB_IMPLEMENTATION",""],["XCB_INPUT_FOCUS_FOLLOW_KEYBOARD","NOT YET DOCUMENTED. Only relevant for the xinput extension."],["XCB_INPUT_FOCUS_NONE","The focus reverts to `XCB_NONE`, so no window will have the input focus."],["XCB_INPUT_FOCUS_PARENT","The focus reverts to the parent (or closest viewable ancestor) and the new revert_to value is `XCB_INPUT_FOCUS_NONE`."],["XCB_INPUT_FOCUS_POINTER_ROOT","The focus reverts to `XCB_POINTER_ROOT` respectively. When the focus reverts, FocusIn and FocusOut events are generated, but the last-focus-change time is not changed."],["XCB_INSTALL_COLORMAP",""],["XCB_INTERN_ATOM",""],["XCB_JOIN_STYLE_BEVEL",""],["XCB_JOIN_STYLE_MITER",""],["XCB_JOIN_STYLE_ROUND",""],["XCB_KB_AUTO_REPEAT_MODE",""],["XCB_KB_BELL_DURATION",""],["XCB_KB_BELL_PERCENT",""],["XCB_KB_BELL_PITCH",""],["XCB_KB_KEY",""],["XCB_KB_KEY_CLICK_PERCENT",""],["XCB_KB_LED",""],["XCB_KB_LED_MODE",""],["XCB_KEYMAP_NOTIFY",""],["XCB_KEY_BUT_MASK_BUTTON_1",""],["XCB_KEY_BUT_MASK_BUTTON_2",""],["XCB_KEY_BUT_MASK_BUTTON_3",""],["XCB_KEY_BUT_MASK_BUTTON_4",""],["XCB_KEY_BUT_MASK_BUTTON_5",""],["XCB_KEY_BUT_MASK_CONTROL",""],["XCB_KEY_BUT_MASK_LOCK",""],["XCB_KEY_BUT_MASK_MOD_1",""],["XCB_KEY_BUT_MASK_MOD_2",""],["XCB_KEY_BUT_MASK_MOD_3",""],["XCB_KEY_BUT_MASK_MOD_4",""],["XCB_KEY_BUT_MASK_MOD_5",""],["XCB_KEY_BUT_MASK_SHIFT",""],["XCB_KEY_PRESS",""],["XCB_KEY_RELEASE",""],["XCB_KILL_ALL_TEMPORARY",""],["XCB_KILL_CLIENT",""],["XCB_LEAVE_NOTIFY",""],["XCB_LED_MODE_OFF",""],["XCB_LED_MODE_ON",""],["XCB_LENGTH",""],["XCB_LINE_STYLE_DOUBLE_DASH",""],["XCB_LINE_STYLE_ON_OFF_DASH",""],["XCB_LINE_STYLE_SOLID",""],["XCB_LIST_EXTENSIONS",""],["XCB_LIST_FONTS",""],["XCB_LIST_FONTS_WITH_INFO",""],["XCB_LIST_HOSTS",""],["XCB_LIST_INSTALLED_COLORMAPS",""],["XCB_LIST_PROPERTIES",""],["XCB_LOOKUP_COLOR",""],["XCB_MAPPING_KEYBOARD",""],["XCB_MAPPING_MODIFIER",""],["XCB_MAPPING_NOTIFY",""],["XCB_MAPPING_POINTER",""],["XCB_MAPPING_STATUS_BUSY",""],["XCB_MAPPING_STATUS_FAILURE",""],["XCB_MAPPING_STATUS_SUCCESS",""],["XCB_MAP_INDEX_1",""],["XCB_MAP_INDEX_2",""],["XCB_MAP_INDEX_3",""],["XCB_MAP_INDEX_4",""],["XCB_MAP_INDEX_5",""],["XCB_MAP_INDEX_CONTROL",""],["XCB_MAP_INDEX_LOCK",""],["XCB_MAP_INDEX_SHIFT",""],["XCB_MAP_NOTIFY",""],["XCB_MAP_REQUEST",""],["XCB_MAP_STATE_UNMAPPED",""],["XCB_MAP_STATE_UNVIEWABLE",""],["XCB_MAP_STATE_VIEWABLE",""],["XCB_MAP_SUBWINDOWS",""],["XCB_MAP_WINDOW",""],["XCB_MATCH",""],["XCB_MOD_MASK_1",""],["XCB_MOD_MASK_2",""],["XCB_MOD_MASK_3",""],["XCB_MOD_MASK_4",""],["XCB_MOD_MASK_5",""],["XCB_MOD_MASK_ANY",""],["XCB_MOD_MASK_CONTROL",""],["XCB_MOD_MASK_LOCK",""],["XCB_MOD_MASK_SHIFT",""],["XCB_MOTION_HINT",""],["XCB_MOTION_NORMAL",""],["XCB_MOTION_NOTIFY",""],["XCB_NAME",""],["XCB_NOTIFY_DETAIL_ANCESTOR",""],["XCB_NOTIFY_DETAIL_INFERIOR",""],["XCB_NOTIFY_DETAIL_NONE",""],["XCB_NOTIFY_DETAIL_NONLINEAR",""],["XCB_NOTIFY_DETAIL_NONLINEAR_VIRTUAL",""],["XCB_NOTIFY_DETAIL_POINTER",""],["XCB_NOTIFY_DETAIL_POINTER_ROOT",""],["XCB_NOTIFY_DETAIL_VIRTUAL",""],["XCB_NOTIFY_MODE_GRAB",""],["XCB_NOTIFY_MODE_NORMAL",""],["XCB_NOTIFY_MODE_UNGRAB",""],["XCB_NOTIFY_MODE_WHILE_GRABBED",""],["XCB_NO_EXPOSURE",""],["XCB_NO_OPERATION",""],["XCB_OPEN_FONT",""],["XCB_PIXMAP",""],["XCB_PIXMAP_NONE",""],["XCB_PLACE_ON_BOTTOM","The window is now below all siblings."],["XCB_PLACE_ON_TOP","The window is now on top of all siblings."],["XCB_POLY_ARC",""],["XCB_POLY_FILL_ARC",""],["XCB_POLY_FILL_RECTANGLE",""],["XCB_POLY_LINE",""],["XCB_POLY_POINT",""],["XCB_POLY_RECTANGLE",""],["XCB_POLY_SEGMENT",""],["XCB_POLY_SHAPE_COMPLEX",""],["XCB_POLY_SHAPE_CONVEX",""],["XCB_POLY_SHAPE_NONCONVEX",""],["XCB_POLY_TEXT_16",""],["XCB_POLY_TEXT_8",""],["XCB_PROPERTY_DELETE",""],["XCB_PROPERTY_NEW_VALUE",""],["XCB_PROPERTY_NOTIFY",""],["XCB_PROP_MODE_APPEND","Insert the new data after the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data."],["XCB_PROP_MODE_PREPEND","Insert the new data before the beginning of existing data. The `format` must match existing property value. If the property is undefined, it is treated as defined with the correct type and format with zero-length data."],["XCB_PROP_MODE_REPLACE","Discard the previous property value and store the new data."],["XCB_PUT_IMAGE",""],["XCB_QUERY_BEST_SIZE",""],["XCB_QUERY_COLORS",""],["XCB_QUERY_EXTENSION",""],["XCB_QUERY_FONT",""],["XCB_QUERY_KEYMAP",""],["XCB_QUERY_POINTER",""],["XCB_QUERY_SHAPE_OF_FASTEST_STIPPLE",""],["XCB_QUERY_SHAPE_OF_FASTEST_TILE",""],["XCB_QUERY_SHAPE_OF_LARGEST_CURSOR",""],["XCB_QUERY_TEXT_EXTENTS",""],["XCB_QUERY_TREE",""],["XCB_RECOLOR_CURSOR",""],["XCB_REPARENT_NOTIFY",""],["XCB_REPARENT_WINDOW",""],["XCB_REQUEST",""],["XCB_RESIZE_REQUEST",""],["XCB_ROTATE_PROPERTIES",""],["XCB_SCREEN_SAVER_ACTIVE",""],["XCB_SCREEN_SAVER_RESET",""],["XCB_SELECTION_CLEAR",""],["XCB_SELECTION_NOTIFY",""],["XCB_SELECTION_REQUEST",""],["XCB_SEND_EVENT",""],["XCB_SEND_EVENT_DEST_ITEM_FOCUS",""],["XCB_SEND_EVENT_DEST_POINTER_WINDOW",""],["XCB_SET_ACCESS_CONTROL",""],["XCB_SET_CLIP_RECTANGLES",""],["XCB_SET_CLOSE_DOWN_MODE",""],["XCB_SET_DASHES",""],["XCB_SET_FONT_PATH",""],["XCB_SET_INPUT_FOCUS",""],["XCB_SET_MODE_DELETE",""],["XCB_SET_MODE_INSERT",""],["XCB_SET_MODIFIER_MAPPING",""],["XCB_SET_POINTER_MAPPING",""],["XCB_SET_SCREEN_SAVER",""],["XCB_SET_SELECTION_OWNER",""],["XCB_STACK_MODE_ABOVE",""],["XCB_STACK_MODE_BELOW",""],["XCB_STACK_MODE_BOTTOM_IF",""],["XCB_STACK_MODE_OPPOSITE",""],["XCB_STACK_MODE_TOP_IF",""],["XCB_STORE_COLORS",""],["XCB_STORE_NAMED_COLOR",""],["XCB_SUBWINDOW_MODE_CLIP_BY_CHILDREN",""],["XCB_SUBWINDOW_MODE_INCLUDE_INFERIORS",""],["XCB_TIME_CURRENT_TIME",""],["XCB_TRANSLATE_COORDINATES",""],["XCB_UNGRAB_BUTTON",""],["XCB_UNGRAB_KEY",""],["XCB_UNGRAB_KEYBOARD",""],["XCB_UNGRAB_POINTER",""],["XCB_UNGRAB_SERVER",""],["XCB_UNINSTALL_COLORMAP",""],["XCB_UNMAP_NOTIFY",""],["XCB_UNMAP_SUBWINDOWS",""],["XCB_UNMAP_WINDOW",""],["XCB_VALUE",""],["XCB_VISIBILITY_FULLY_OBSCURED",""],["XCB_VISIBILITY_NOTIFY",""],["XCB_VISIBILITY_PARTIALLY_OBSCURED",""],["XCB_VISIBILITY_UNOBSCURED",""],["XCB_VISUAL_CLASS_DIRECT_COLOR",""],["XCB_VISUAL_CLASS_GRAY_SCALE",""],["XCB_VISUAL_CLASS_PSEUDO_COLOR",""],["XCB_VISUAL_CLASS_STATIC_COLOR",""],["XCB_VISUAL_CLASS_STATIC_GRAY",""],["XCB_VISUAL_CLASS_TRUE_COLOR",""],["XCB_WARP_POINTER",""],["XCB_WINDOW",""],["XCB_WINDOW_CLASS_COPY_FROM_PARENT",""],["XCB_WINDOW_CLASS_INPUT_ONLY",""],["XCB_WINDOW_CLASS_INPUT_OUTPUT",""],["XCB_WINDOW_NONE",""]],"fn":[["xcb_alloc_color","Allocate a color"],["xcb_alloc_color_cells",""],["xcb_alloc_color_cells_masks",""],["xcb_alloc_color_cells_masks_end",""],["xcb_alloc_color_cells_masks_length",""],["xcb_alloc_color_cells_pixels",""],["xcb_alloc_color_cells_pixels_end",""],["xcb_alloc_color_cells_pixels_length",""],["xcb_alloc_color_cells_reply","the returned value must be freed by the caller using libc::free()."],["xcb_alloc_color_cells_unchecked",""],["xcb_alloc_color_planes",""],["xcb_alloc_color_planes_pixels",""],["xcb_alloc_color_planes_pixels_end",""],["xcb_alloc_color_planes_pixels_length",""],["xcb_alloc_color_planes_reply","the returned value must be freed by the caller using libc::free()."],["xcb_alloc_color_planes_unchecked",""],["xcb_alloc_color_reply","the returned value must be freed by the caller using libc::free()."],["xcb_alloc_color_unchecked","Allocate a color"],["xcb_alloc_named_color",""],["xcb_alloc_named_color_reply","the returned value must be freed by the caller using libc::free()."],["xcb_alloc_named_color_unchecked",""],["xcb_allow_events","release queued events"],["xcb_allow_events_checked","release queued events"],["xcb_arc_end",""],["xcb_arc_next",""],["xcb_atom_end",""],["xcb_atom_next",""],["xcb_bell",""],["xcb_bell_checked",""],["xcb_button_end",""],["xcb_button_next",""],["xcb_change_active_pointer_grab",""],["xcb_change_active_pointer_grab_checked",""],["xcb_change_gc","change graphics context components"],["xcb_change_gc_checked","change graphics context components"],["xcb_change_hosts",""],["xcb_change_hosts_checked",""],["xcb_change_keyboard_control",""],["xcb_change_keyboard_control_checked",""],["xcb_change_keyboard_mapping",""],["xcb_change_keyboard_mapping_checked",""],["xcb_change_pointer_control",""],["xcb_change_pointer_control_checked",""],["xcb_change_property","Changes a window property"],["xcb_change_property_checked","Changes a window property"],["xcb_change_save_set","Changes a client’s save set"],["xcb_change_save_set_checked","Changes a client’s save set"],["xcb_change_window_attributes","change window attributes"],["xcb_change_window_attributes_checked","change window attributes"],["xcb_char2b_end",""],["xcb_char2b_next",""],["xcb_charinfo_end",""],["xcb_charinfo_next",""],["xcb_circulate_window","Change window stacking order"],["xcb_circulate_window_checked","Change window stacking order"],["xcb_clear_area",""],["xcb_clear_area_checked",""],["xcb_client_message_data_end",""],["xcb_client_message_data_next",""],["xcb_close_font",""],["xcb_close_font_checked",""],["xcb_coloritem_end",""],["xcb_coloritem_next",""],["xcb_colormap_end",""],["xcb_colormap_next",""],["xcb_configure_window","Configures window attributes"],["xcb_configure_window_checked","Configures window attributes"],["xcb_convert_selection",""],["xcb_convert_selection_checked",""],["xcb_copy_area","copy areas"],["xcb_copy_area_checked","copy areas"],["xcb_copy_colormap_and_free",""],["xcb_copy_colormap_and_free_checked",""],["xcb_copy_gc",""],["xcb_copy_gc_checked",""],["xcb_copy_plane",""],["xcb_copy_plane_checked",""],["xcb_create_colormap",""],["xcb_create_colormap_checked",""],["xcb_create_cursor",""],["xcb_create_cursor_checked",""],["xcb_create_gc","Creates a graphics context"],["xcb_create_gc_checked","Creates a graphics context"],["xcb_create_glyph_cursor","create cursor"],["xcb_create_glyph_cursor_checked","create cursor"],["xcb_create_pixmap","Creates a pixmap"],["xcb_create_pixmap_checked","Creates a pixmap"],["xcb_create_window","Creates a window"],["xcb_create_window_checked","Creates a window"],["xcb_cursor_end",""],["xcb_cursor_next",""],["xcb_delete_property",""],["xcb_delete_property_checked",""],["xcb_depth_end",""],["xcb_depth_next",""],["xcb_depth_visuals",""],["xcb_depth_visuals_iterator",""],["xcb_depth_visuals_length",""],["xcb_destroy_subwindows",""],["xcb_destroy_subwindows_checked",""],["xcb_destroy_window","Destroys a window"],["xcb_destroy_window_checked","Destroys a window"],["xcb_drawable_end",""],["xcb_drawable_next",""],["xcb_fill_poly",""],["xcb_fill_poly_checked",""],["xcb_font_end",""],["xcb_font_next",""],["xcb_fontable_end",""],["xcb_fontable_next",""],["xcb_fontprop_end",""],["xcb_fontprop_next",""],["xcb_force_screen_saver",""],["xcb_force_screen_saver_checked",""],["xcb_format_end",""],["xcb_format_next",""],["xcb_free_colormap",""],["xcb_free_colormap_checked",""],["xcb_free_colors",""],["xcb_free_colors_checked",""],["xcb_free_cursor","Deletes a cursor"],["xcb_free_cursor_checked","Deletes a cursor"],["xcb_free_gc","Destroys a graphics context"],["xcb_free_gc_checked","Destroys a graphics context"],["xcb_free_pixmap","Destroys a pixmap"],["xcb_free_pixmap_checked","Destroys a pixmap"],["xcb_gcontext_end",""],["xcb_gcontext_next",""],["xcb_get_atom_name",""],["xcb_get_atom_name_name",""],["xcb_get_atom_name_name_end",""],["xcb_get_atom_name_name_length",""],["xcb_get_atom_name_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_atom_name_unchecked",""],["xcb_get_font_path",""],["xcb_get_font_path_path_iterator",""],["xcb_get_font_path_path_length",""],["xcb_get_font_path_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_font_path_unchecked",""],["xcb_get_geometry","Get current window geometry"],["xcb_get_geometry_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_geometry_unchecked","Get current window geometry"],["xcb_get_image",""],["xcb_get_image_data",""],["xcb_get_image_data_end",""],["xcb_get_image_data_length",""],["xcb_get_image_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_image_unchecked",""],["xcb_get_input_focus",""],["xcb_get_input_focus_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_input_focus_unchecked",""],["xcb_get_keyboard_control",""],["xcb_get_keyboard_control_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_keyboard_control_unchecked",""],["xcb_get_keyboard_mapping",""],["xcb_get_keyboard_mapping_keysyms",""],["xcb_get_keyboard_mapping_keysyms_end",""],["xcb_get_keyboard_mapping_keysyms_length",""],["xcb_get_keyboard_mapping_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_keyboard_mapping_unchecked",""],["xcb_get_modifier_mapping",""],["xcb_get_modifier_mapping_keycodes",""],["xcb_get_modifier_mapping_keycodes_end",""],["xcb_get_modifier_mapping_keycodes_length",""],["xcb_get_modifier_mapping_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_modifier_mapping_unchecked",""],["xcb_get_motion_events",""],["xcb_get_motion_events_events",""],["xcb_get_motion_events_events_iterator",""],["xcb_get_motion_events_events_length",""],["xcb_get_motion_events_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_motion_events_unchecked",""],["xcb_get_pointer_control",""],["xcb_get_pointer_control_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_pointer_control_unchecked",""],["xcb_get_pointer_mapping",""],["xcb_get_pointer_mapping_map",""],["xcb_get_pointer_mapping_map_end",""],["xcb_get_pointer_mapping_map_length",""],["xcb_get_pointer_mapping_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_pointer_mapping_unchecked",""],["xcb_get_property","Gets a window property"],["xcb_get_property_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_property_unchecked","Gets a window property"],["xcb_get_property_value",""],["xcb_get_property_value_end",""],["xcb_get_property_value_length",""],["xcb_get_screen_saver",""],["xcb_get_screen_saver_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_screen_saver_unchecked",""],["xcb_get_selection_owner","Gets the owner of a selection"],["xcb_get_selection_owner_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_selection_owner_unchecked","Gets the owner of a selection"],["xcb_get_window_attributes","Gets window attributes"],["xcb_get_window_attributes_reply","the returned value must be freed by the caller using libc::free()."],["xcb_get_window_attributes_unchecked","Gets window attributes"],["xcb_grab_button","Grab pointer button(s)"],["xcb_grab_button_checked","Grab pointer button(s)"],["xcb_grab_key","Grab keyboard key(s)"],["xcb_grab_key_checked","Grab keyboard key(s)"],["xcb_grab_keyboard","Grab the keyboard"],["xcb_grab_keyboard_reply","the returned value must be freed by the caller using libc::free()."],["xcb_grab_keyboard_unchecked","Grab the keyboard"],["xcb_grab_pointer","Grab the pointer"],["xcb_grab_pointer_reply","the returned value must be freed by the caller using libc::free()."],["xcb_grab_pointer_unchecked","Grab the pointer"],["xcb_grab_server",""],["xcb_grab_server_checked",""],["xcb_host_address",""],["xcb_host_address_end",""],["xcb_host_address_length",""],["xcb_host_end",""],["xcb_host_next",""],["xcb_image_text_16","Draws text"],["xcb_image_text_16_checked","Draws text"],["xcb_image_text_8","Draws text"],["xcb_image_text_8_checked","Draws text"],["xcb_install_colormap",""],["xcb_install_colormap_checked",""],["xcb_intern_atom","Get atom identifier by name"],["xcb_intern_atom_reply","the returned value must be freed by the caller using libc::free()."],["xcb_intern_atom_unchecked","Get atom identifier by name"],["xcb_keycode_end",""],["xcb_keycode_next",""],["xcb_keysym_end",""],["xcb_keysym_next",""],["xcb_kill_client","kills a client"],["xcb_kill_client_checked","kills a client"],["xcb_list_extensions",""],["xcb_list_extensions_names_iterator",""],["xcb_list_extensions_names_length",""],["xcb_list_extensions_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_extensions_unchecked",""],["xcb_list_fonts","get matching font names"],["xcb_list_fonts_names_iterator",""],["xcb_list_fonts_names_length",""],["xcb_list_fonts_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_fonts_unchecked","get matching font names"],["xcb_list_fonts_with_info","get matching font names and information"],["xcb_list_fonts_with_info_name",""],["xcb_list_fonts_with_info_name_end",""],["xcb_list_fonts_with_info_name_length",""],["xcb_list_fonts_with_info_properties",""],["xcb_list_fonts_with_info_properties_iterator",""],["xcb_list_fonts_with_info_properties_length",""],["xcb_list_fonts_with_info_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_fonts_with_info_unchecked","get matching font names and information"],["xcb_list_hosts",""],["xcb_list_hosts_hosts_iterator",""],["xcb_list_hosts_hosts_length",""],["xcb_list_hosts_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_hosts_unchecked",""],["xcb_list_installed_colormaps",""],["xcb_list_installed_colormaps_cmaps",""],["xcb_list_installed_colormaps_cmaps_end",""],["xcb_list_installed_colormaps_cmaps_length",""],["xcb_list_installed_colormaps_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_installed_colormaps_unchecked",""],["xcb_list_properties",""],["xcb_list_properties_atoms",""],["xcb_list_properties_atoms_end",""],["xcb_list_properties_atoms_length",""],["xcb_list_properties_reply","the returned value must be freed by the caller using libc::free()."],["xcb_list_properties_unchecked",""],["xcb_lookup_color",""],["xcb_lookup_color_reply","the returned value must be freed by the caller using libc::free()."],["xcb_lookup_color_unchecked",""],["xcb_map_subwindows",""],["xcb_map_subwindows_checked",""],["xcb_map_window","Makes a window visible"],["xcb_map_window_checked","Makes a window visible"],["xcb_no_operation",""],["xcb_no_operation_checked",""],["xcb_open_font","opens a font"],["xcb_open_font_checked","opens a font"],["xcb_pixmap_end",""],["xcb_pixmap_next",""],["xcb_point_end",""],["xcb_point_next",""],["xcb_poly_arc",""],["xcb_poly_arc_checked",""],["xcb_poly_fill_arc",""],["xcb_poly_fill_arc_checked",""],["xcb_poly_fill_rectangle","Fills rectangles"],["xcb_poly_fill_rectangle_checked","Fills rectangles"],["xcb_poly_line","draw lines"],["xcb_poly_line_checked","draw lines"],["xcb_poly_point",""],["xcb_poly_point_checked",""],["xcb_poly_rectangle",""],["xcb_poly_rectangle_checked",""],["xcb_poly_segment","draw lines"],["xcb_poly_segment_checked","draw lines"],["xcb_poly_text_16",""],["xcb_poly_text_16_checked",""],["xcb_poly_text_8",""],["xcb_poly_text_8_checked",""],["xcb_put_image",""],["xcb_put_image_checked",""],["xcb_query_best_size",""],["xcb_query_best_size_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_best_size_unchecked",""],["xcb_query_colors",""],["xcb_query_colors_colors",""],["xcb_query_colors_colors_iterator",""],["xcb_query_colors_colors_length",""],["xcb_query_colors_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_colors_unchecked",""],["xcb_query_extension","check if extension is present"],["xcb_query_extension_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_extension_unchecked","check if extension is present"],["xcb_query_font","query font metrics"],["xcb_query_font_char_infos",""],["xcb_query_font_char_infos_iterator",""],["xcb_query_font_char_infos_length",""],["xcb_query_font_properties",""],["xcb_query_font_properties_iterator",""],["xcb_query_font_properties_length",""],["xcb_query_font_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_font_unchecked","query font metrics"],["xcb_query_keymap",""],["xcb_query_keymap_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_keymap_unchecked",""],["xcb_query_pointer","get pointer coordinates"],["xcb_query_pointer_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_pointer_unchecked","get pointer coordinates"],["xcb_query_text_extents","get text extents"],["xcb_query_text_extents_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_text_extents_unchecked","get text extents"],["xcb_query_tree","query the window tree"],["xcb_query_tree_children",""],["xcb_query_tree_children_end",""],["xcb_query_tree_children_length",""],["xcb_query_tree_reply","the returned value must be freed by the caller using libc::free()."],["xcb_query_tree_unchecked","query the window tree"],["xcb_recolor_cursor",""],["xcb_recolor_cursor_checked",""],["xcb_rectangle_end",""],["xcb_rectangle_next",""],["xcb_reparent_window","Reparents a window"],["xcb_reparent_window_checked","Reparents a window"],["xcb_rgb_end",""],["xcb_rgb_next",""],["xcb_rotate_properties",""],["xcb_rotate_properties_checked",""],["xcb_screen_allowed_depths_iterator",""],["xcb_screen_allowed_depths_length",""],["xcb_screen_end",""],["xcb_screen_next",""],["xcb_segment_end",""],["xcb_segment_next",""],["xcb_send_event","send an event"],["xcb_send_event_checked","send an event"],["xcb_set_access_control",""],["xcb_set_access_control_checked",""],["xcb_set_clip_rectangles",""],["xcb_set_clip_rectangles_checked",""],["xcb_set_close_down_mode",""],["xcb_set_close_down_mode_checked",""],["xcb_set_dashes",""],["xcb_set_dashes_checked",""],["xcb_set_font_path",""],["xcb_set_font_path_checked",""],["xcb_set_input_focus","Sets input focus"],["xcb_set_input_focus_checked","Sets input focus"],["xcb_set_modifier_mapping",""],["xcb_set_modifier_mapping_reply","the returned value must be freed by the caller using libc::free()."],["xcb_set_modifier_mapping_unchecked",""],["xcb_set_pointer_mapping",""],["xcb_set_pointer_mapping_reply","the returned value must be freed by the caller using libc::free()."],["xcb_set_pointer_mapping_unchecked",""],["xcb_set_screen_saver",""],["xcb_set_screen_saver_checked",""],["xcb_set_selection_owner","Sets the owner of a selection"],["xcb_set_selection_owner_checked","Sets the owner of a selection"],["xcb_setup_authenticate_end",""],["xcb_setup_authenticate_next",""],["xcb_setup_authenticate_reason",""],["xcb_setup_authenticate_reason_end",""],["xcb_setup_authenticate_reason_length",""],["xcb_setup_end",""],["xcb_setup_failed_end",""],["xcb_setup_failed_next",""],["xcb_setup_failed_reason",""],["xcb_setup_failed_reason_end",""],["xcb_setup_failed_reason_length",""],["xcb_setup_next",""],["xcb_setup_pixmap_formats",""],["xcb_setup_pixmap_formats_iterator",""],["xcb_setup_pixmap_formats_length",""],["xcb_setup_request_authorization_protocol_data",""],["xcb_setup_request_authorization_protocol_data_end",""],["xcb_setup_request_authorization_protocol_data_length",""],["xcb_setup_request_authorization_protocol_name",""],["xcb_setup_request_authorization_protocol_name_end",""],["xcb_setup_request_authorization_protocol_name_length",""],["xcb_setup_request_end",""],["xcb_setup_request_next",""],["xcb_setup_roots_iterator",""],["xcb_setup_roots_length",""],["xcb_setup_vendor",""],["xcb_setup_vendor_end",""],["xcb_setup_vendor_length",""],["xcb_store_colors",""],["xcb_store_colors_checked",""],["xcb_store_named_color",""],["xcb_store_named_color_checked",""],["xcb_str_end",""],["xcb_str_name",""],["xcb_str_name_end",""],["xcb_str_name_length",""],["xcb_str_next",""],["xcb_timecoord_end",""],["xcb_timecoord_next",""],["xcb_timestamp_end",""],["xcb_timestamp_next",""],["xcb_translate_coordinates",""],["xcb_translate_coordinates_reply","the returned value must be freed by the caller using libc::free()."],["xcb_translate_coordinates_unchecked",""],["xcb_ungrab_button",""],["xcb_ungrab_button_checked",""],["xcb_ungrab_key","release a key combination"],["xcb_ungrab_key_checked","release a key combination"],["xcb_ungrab_keyboard",""],["xcb_ungrab_keyboard_checked",""],["xcb_ungrab_pointer","release the pointer"],["xcb_ungrab_pointer_checked","release the pointer"],["xcb_ungrab_server",""],["xcb_ungrab_server_checked",""],["xcb_uninstall_colormap",""],["xcb_uninstall_colormap_checked",""],["xcb_unmap_subwindows",""],["xcb_unmap_subwindows_checked",""],["xcb_unmap_window","Makes a window invisible"],["xcb_unmap_window_checked","Makes a window invisible"],["xcb_visualid_end",""],["xcb_visualid_next",""],["xcb_visualtype_end",""],["xcb_visualtype_next",""],["xcb_warp_pointer","move mouse pointer"],["xcb_warp_pointer_checked","move mouse pointer"],["xcb_window_end",""],["xcb_window_next",""]],"struct":[["xcb_alloc_color_cells_cookie_t",""],["xcb_alloc_color_cells_reply_t",""],["xcb_alloc_color_cells_request_t",""],["xcb_alloc_color_cookie_t",""],["xcb_alloc_color_planes_cookie_t",""],["xcb_alloc_color_planes_reply_t",""],["xcb_alloc_color_planes_request_t",""],["xcb_alloc_color_reply_t",""],["xcb_alloc_color_request_t","Allocate a color"],["xcb_alloc_named_color_cookie_t",""],["xcb_alloc_named_color_reply_t",""],["xcb_alloc_named_color_request_t",""],["xcb_allow_events_request_t","release queued events"],["xcb_arc_iterator_t",""],["xcb_arc_t",""],["xcb_atom_iterator_t",""],["xcb_bell_request_t",""],["xcb_button_iterator_t",""],["xcb_button_press_event_t","a mouse button was pressed/released"],["xcb_change_active_pointer_grab_request_t",""],["xcb_change_gc_request_t","change graphics context components"],["xcb_change_hosts_request_t",""],["xcb_change_keyboard_control_request_t",""],["xcb_change_keyboard_mapping_request_t",""],["xcb_change_pointer_control_request_t",""],["xcb_change_property_request_t","Changes a window property"],["xcb_change_save_set_request_t","Changes a client’s save set"],["xcb_change_window_attributes_request_t","change window attributes"],["xcb_char2b_iterator_t",""],["xcb_char2b_t",""],["xcb_charinfo_iterator_t",""],["xcb_charinfo_t",""],["xcb_circulate_notify_event_t","NOT YET DOCUMENTED"],["xcb_circulate_window_request_t","Change window stacking order"],["xcb_clear_area_request_t",""],["xcb_client_message_data_iterator_t",""],["xcb_client_message_data_t",""],["xcb_client_message_event_t","NOT YET DOCUMENTED"],["xcb_close_font_request_t",""],["xcb_coloritem_iterator_t",""],["xcb_coloritem_t",""],["xcb_colormap_iterator_t",""],["xcb_colormap_notify_event_t","the colormap for some window changed"],["xcb_configure_notify_event_t","NOT YET DOCUMENTED"],["xcb_configure_request_event_t",""],["xcb_configure_window_request_t","Configures window attributes"],["xcb_convert_selection_request_t",""],["xcb_copy_area_request_t","copy areas"],["xcb_copy_colormap_and_free_request_t",""],["xcb_copy_gc_request_t",""],["xcb_copy_plane_request_t",""],["xcb_create_colormap_request_t",""],["xcb_create_cursor_request_t",""],["xcb_create_gc_request_t","Creates a graphics context"],["xcb_create_glyph_cursor_request_t","create cursor"],["xcb_create_notify_event_t",""],["xcb_create_pixmap_request_t","Creates a pixmap"],["xcb_create_window_request_t","Creates a window"],["xcb_cursor_iterator_t",""],["xcb_delete_property_request_t",""],["xcb_depth_iterator_t",""],["xcb_depth_t",""],["xcb_destroy_notify_event_t","a window is destroyed"],["xcb_destroy_subwindows_request_t",""],["xcb_destroy_window_request_t","Destroys a window"],["xcb_drawable_iterator_t",""],["xcb_enter_notify_event_t","the pointer is in a different window"],["xcb_expose_event_t","NOT YET DOCUMENTED"],["xcb_fill_poly_request_t",""],["xcb_focus_in_event_t","NOT YET DOCUMENTED"],["xcb_font_iterator_t",""],["xcb_fontable_iterator_t",""],["xcb_fontprop_iterator_t",""],["xcb_fontprop_t",""],["xcb_force_screen_saver_request_t",""],["xcb_format_iterator_t",""],["xcb_format_t",""],["xcb_free_colormap_request_t",""],["xcb_free_colors_request_t",""],["xcb_free_cursor_request_t","Deletes a cursor"],["xcb_free_gc_request_t","Destroys a graphics context"],["xcb_free_pixmap_request_t","Destroys a pixmap"],["xcb_gcontext_iterator_t",""],["xcb_ge_generic_event_t","generic event (with length)"],["xcb_get_atom_name_cookie_t",""],["xcb_get_atom_name_reply_t",""],["xcb_get_atom_name_request_t",""],["xcb_get_font_path_cookie_t",""],["xcb_get_font_path_reply_t",""],["xcb_get_font_path_request_t",""],["xcb_get_geometry_cookie_t",""],["xcb_get_geometry_reply_t",""],["xcb_get_geometry_request_t","Get current window geometry"],["xcb_get_image_cookie_t",""],["xcb_get_image_reply_t",""],["xcb_get_image_request_t",""],["xcb_get_input_focus_cookie_t",""],["xcb_get_input_focus_reply_t",""],["xcb_get_input_focus_request_t",""],["xcb_get_keyboard_control_cookie_t",""],["xcb_get_keyboard_control_reply_t",""],["xcb_get_keyboard_control_request_t",""],["xcb_get_keyboard_mapping_cookie_t",""],["xcb_get_keyboard_mapping_reply_t",""],["xcb_get_keyboard_mapping_request_t",""],["xcb_get_modifier_mapping_cookie_t",""],["xcb_get_modifier_mapping_reply_t",""],["xcb_get_modifier_mapping_request_t",""],["xcb_get_motion_events_cookie_t",""],["xcb_get_motion_events_reply_t",""],["xcb_get_motion_events_request_t",""],["xcb_get_pointer_control_cookie_t",""],["xcb_get_pointer_control_reply_t",""],["xcb_get_pointer_control_request_t",""],["xcb_get_pointer_mapping_cookie_t",""],["xcb_get_pointer_mapping_reply_t",""],["xcb_get_pointer_mapping_request_t",""],["xcb_get_property_cookie_t",""],["xcb_get_property_reply_t",""],["xcb_get_property_request_t","Gets a window property"],["xcb_get_screen_saver_cookie_t",""],["xcb_get_screen_saver_reply_t",""],["xcb_get_screen_saver_request_t",""],["xcb_get_selection_owner_cookie_t",""],["xcb_get_selection_owner_reply_t",""],["xcb_get_selection_owner_request_t","Gets the owner of a selection"],["xcb_get_window_attributes_cookie_t",""],["xcb_get_window_attributes_reply_t",""],["xcb_get_window_attributes_request_t","Gets window attributes"],["xcb_grab_button_request_t","Grab pointer button(s)"],["xcb_grab_key_request_t","Grab keyboard key(s)"],["xcb_grab_keyboard_cookie_t",""],["xcb_grab_keyboard_reply_t",""],["xcb_grab_keyboard_request_t","Grab the keyboard"],["xcb_grab_pointer_cookie_t",""],["xcb_grab_pointer_reply_t",""],["xcb_grab_pointer_request_t","Grab the pointer"],["xcb_grab_server_request_t",""],["xcb_graphics_exposure_event_t",""],["xcb_gravity_notify_event_t",""],["xcb_host_iterator_t",""],["xcb_host_t",""],["xcb_image_text_16_request_t","Draws text"],["xcb_image_text_8_request_t","Draws text"],["xcb_install_colormap_request_t",""],["xcb_intern_atom_cookie_t",""],["xcb_intern_atom_reply_t",""],["xcb_intern_atom_request_t","Get atom identifier by name"],["xcb_key_press_event_t","a key was pressed/released"],["xcb_keycode_iterator_t",""],["xcb_keymap_notify_event_t",""],["xcb_keysym_iterator_t",""],["xcb_kill_client_request_t","kills a client"],["xcb_list_extensions_cookie_t",""],["xcb_list_extensions_reply_t",""],["xcb_list_extensions_request_t",""],["xcb_list_fonts_cookie_t",""],["xcb_list_fonts_reply_t",""],["xcb_list_fonts_request_t","get matching font names"],["xcb_list_fonts_with_info_cookie_t",""],["xcb_list_fonts_with_info_reply_t",""],["xcb_list_fonts_with_info_request_t","get matching font names and information"],["xcb_list_hosts_cookie_t",""],["xcb_list_hosts_reply_t",""],["xcb_list_hosts_request_t",""],["xcb_list_installed_colormaps_cookie_t",""],["xcb_list_installed_colormaps_reply_t",""],["xcb_list_installed_colormaps_request_t",""],["xcb_list_properties_cookie_t",""],["xcb_list_properties_reply_t",""],["xcb_list_properties_request_t",""],["xcb_lookup_color_cookie_t",""],["xcb_lookup_color_reply_t",""],["xcb_lookup_color_request_t",""],["xcb_map_notify_event_t","a window was mapped"],["xcb_map_request_event_t","window wants to be mapped"],["xcb_map_subwindows_request_t",""],["xcb_map_window_request_t","Makes a window visible"],["xcb_mapping_notify_event_t","keyboard mapping changed"],["xcb_motion_notify_event_t","a key was pressed"],["xcb_no_exposure_event_t",""],["xcb_no_operation_request_t",""],["xcb_open_font_request_t","opens a font"],["xcb_pixmap_iterator_t",""],["xcb_point_iterator_t",""],["xcb_point_t",""],["xcb_poly_arc_request_t",""],["xcb_poly_fill_arc_request_t",""],["xcb_poly_fill_rectangle_request_t","Fills rectangles"],["xcb_poly_line_request_t","draw lines"],["xcb_poly_point_request_t",""],["xcb_poly_rectangle_request_t",""],["xcb_poly_segment_request_t","draw lines"],["xcb_poly_text_16_request_t",""],["xcb_poly_text_8_request_t",""],["xcb_property_notify_event_t","a window property changed"],["xcb_put_image_request_t",""],["xcb_query_best_size_cookie_t",""],["xcb_query_best_size_reply_t",""],["xcb_query_best_size_request_t",""],["xcb_query_colors_cookie_t",""],["xcb_query_colors_reply_t",""],["xcb_query_colors_request_t",""],["xcb_query_extension_cookie_t",""],["xcb_query_extension_reply_t",""],["xcb_query_extension_request_t","check if extension is present"],["xcb_query_font_cookie_t",""],["xcb_query_font_reply_t",""],["xcb_query_font_request_t","query font metrics"],["xcb_query_keymap_cookie_t",""],["xcb_query_keymap_reply_t",""],["xcb_query_keymap_request_t",""],["xcb_query_pointer_cookie_t",""],["xcb_query_pointer_reply_t",""],["xcb_query_pointer_request_t","get pointer coordinates"],["xcb_query_text_extents_cookie_t",""],["xcb_query_text_extents_reply_t",""],["xcb_query_text_extents_request_t","get text extents"],["xcb_query_tree_cookie_t",""],["xcb_query_tree_reply_t",""],["xcb_query_tree_request_t","query the window tree"],["xcb_recolor_cursor_request_t",""],["xcb_rectangle_iterator_t",""],["xcb_rectangle_t",""],["xcb_reparent_notify_event_t",""],["xcb_reparent_window_request_t","Reparents a window"],["xcb_request_error_t",""],["xcb_resize_request_event_t",""],["xcb_rgb_iterator_t",""],["xcb_rgb_t",""],["xcb_rotate_properties_request_t",""],["xcb_screen_iterator_t",""],["xcb_screen_t",""],["xcb_segment_iterator_t",""],["xcb_segment_t",""],["xcb_selection_clear_event_t",""],["xcb_selection_notify_event_t",""],["xcb_selection_request_event_t",""],["xcb_send_event_request_t","send an event"],["xcb_set_access_control_request_t",""],["xcb_set_clip_rectangles_request_t",""],["xcb_set_close_down_mode_request_t",""],["xcb_set_dashes_request_t",""],["xcb_set_font_path_request_t",""],["xcb_set_input_focus_request_t","Sets input focus"],["xcb_set_modifier_mapping_cookie_t",""],["xcb_set_modifier_mapping_reply_t",""],["xcb_set_modifier_mapping_request_t",""],["xcb_set_pointer_mapping_cookie_t",""],["xcb_set_pointer_mapping_reply_t",""],["xcb_set_pointer_mapping_request_t",""],["xcb_set_screen_saver_request_t",""],["xcb_set_selection_owner_request_t","Sets the owner of a selection"],["xcb_setup_authenticate_iterator_t",""],["xcb_setup_authenticate_t",""],["xcb_setup_failed_iterator_t",""],["xcb_setup_failed_t",""],["xcb_setup_iterator_t",""],["xcb_setup_request_iterator_t",""],["xcb_setup_request_t",""],["xcb_setup_t",""],["xcb_store_colors_request_t",""],["xcb_store_named_color_request_t",""],["xcb_str_iterator_t",""],["xcb_str_t",""],["xcb_timecoord_iterator_t",""],["xcb_timecoord_t",""],["xcb_timestamp_iterator_t",""],["xcb_translate_coordinates_cookie_t",""],["xcb_translate_coordinates_reply_t",""],["xcb_translate_coordinates_request_t",""],["xcb_ungrab_button_request_t",""],["xcb_ungrab_key_request_t","release a key combination"],["xcb_ungrab_keyboard_request_t",""],["xcb_ungrab_pointer_request_t","release the pointer"],["xcb_ungrab_server_request_t",""],["xcb_uninstall_colormap_request_t",""],["xcb_unmap_notify_event_t","a window is unmapped"],["xcb_unmap_subwindows_request_t",""],["xcb_unmap_window_request_t","Makes a window invisible"],["xcb_value_error_t",""],["xcb_visibility_notify_event_t",""],["xcb_visualid_iterator_t",""],["xcb_visualtype_iterator_t",""],["xcb_visualtype_t",""],["xcb_warp_pointer_request_t","move mouse pointer"],["xcb_window_iterator_t",""]],"type":[["xcb_access_control_t",""],["xcb_access_error_t",""],["xcb_alloc_error_t",""],["xcb_allow_t",""],["xcb_arc_mode_t",""],["xcb_atom_enum_t",""],["xcb_atom_error_t",""],["xcb_atom_t",""],["xcb_auto_repeat_mode_t",""],["xcb_back_pixmap_t",""],["xcb_backing_store_t",""],["xcb_blanking_t",""],["xcb_button_index_t",""],["xcb_button_mask_t",""],["xcb_button_release_event_t",""],["xcb_button_t",""],["xcb_cap_style_t",""],["xcb_circulate_request_event_t",""],["xcb_circulate_t",""],["xcb_clip_ordering_t",""],["xcb_close_down_t",""],["xcb_color_flag_t",""],["xcb_colormap_alloc_t",""],["xcb_colormap_enum_t",""],["xcb_colormap_error_t",""],["xcb_colormap_state_t",""],["xcb_colormap_t",""],["xcb_config_window_t",""],["xcb_coord_mode_t",""],["xcb_cursor_enum_t",""],["xcb_cursor_error_t",""],["xcb_cursor_t",""],["xcb_cw_t",""],["xcb_drawable_error_t",""],["xcb_drawable_t",""],["xcb_event_mask_t",""],["xcb_exposures_t",""],["xcb_family_t",""],["xcb_fill_rule_t",""],["xcb_fill_style_t",""],["xcb_focus_out_event_t",""],["xcb_font_draw_t",""],["xcb_font_enum_t",""],["xcb_font_error_t",""],["xcb_font_t",""],["xcb_fontable_t",""],["xcb_g_context_error_t",""],["xcb_gc_t",""],["xcb_gcontext_t",""],["xcb_get_property_type_t",""],["xcb_grab_mode_t",""],["xcb_grab_status_t",""],["xcb_grab_t",""],["xcb_gravity_t",""],["xcb_gx_t",""],["xcb_host_mode_t",""],["xcb_id_choice_error_t",""],["xcb_image_format_t",""],["xcb_image_order_t",""],["xcb_implementation_error_t",""],["xcb_input_focus_t",""],["xcb_join_style_t",""],["xcb_kb_t",""],["xcb_key_but_mask_t",""],["xcb_key_release_event_t",""],["xcb_keycode_t",""],["xcb_keysym_t",""],["xcb_kill_t",""],["xcb_leave_notify_event_t",""],["xcb_led_mode_t",""],["xcb_length_error_t",""],["xcb_line_style_t",""],["xcb_map_index_t",""],["xcb_map_state_t",""],["xcb_mapping_status_t",""],["xcb_mapping_t",""],["xcb_match_error_t",""],["xcb_mod_mask_t",""],["xcb_motion_t",""],["xcb_name_error_t",""],["xcb_notify_detail_t",""],["xcb_notify_mode_t",""],["xcb_pixmap_enum_t",""],["xcb_pixmap_error_t",""],["xcb_pixmap_t",""],["xcb_place_t",""],["xcb_poly_shape_t",""],["xcb_prop_mode_t",""],["xcb_property_t",""],["xcb_query_shape_of_t",""],["xcb_screen_saver_t",""],["xcb_send_event_dest_t",""],["xcb_set_mode_t",""],["xcb_stack_mode_t",""],["xcb_subwindow_mode_t",""],["xcb_time_t",""],["xcb_timestamp_t",""],["xcb_visibility_t",""],["xcb_visual_class_t",""],["xcb_visualid_t",""],["xcb_window_class_t",""],["xcb_window_enum_t",""],["xcb_window_error_t",""],["xcb_window_t",""]]});