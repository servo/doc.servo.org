initSidebarItems({"constant":[["PIPELINE_NAMESPACE",""],["TEST_BROWSING_CONTEXT_ID",""],["TEST_BROWSING_CONTEXT_INDEX",""],["TEST_NAMESPACE",""],["TEST_PIPELINE_ID",""],["TEST_PIPELINE_INDEX",""],["TOP_LEVEL_BROWSING_CONTEXT_ID",""]],"enum":[["BackgroundHangMonitorControlMsg","Messages to control the sampling profiler."],["HangAlert","Hang-alerts are sent by the monitor to the constellation."],["HangAnnotation",""],["HangMonitorAlert","Hang-alerts are sent by the monitor to the constellation."],["InputMethodType",""],["LayoutHangAnnotation","The equivalent of script_layout_interface::message::Msg"],["MonitoredComponentType",""],["ScriptHangAnnotation","The equivalent of script::script_runtime::ScriptEventCategory"],["TraversalDirection",""]],"struct":[["BlobId",""],["BlobIndex",""],["BroadcastChannelRouterId",""],["BroadcastChannelRouterIndex",""],["BrowsingContextGroupId",""],["BrowsingContextId",""],["BrowsingContextIndex",""],["HangProfile","Info related to the activity of an hanging component."],["HangProfileSymbol",""],["HistoryStateId",""],["HistoryStateIndex",""],["MessagePortId",""],["MessagePortIndex",""],["MessagePortRouterId",""],["MessagePortRouterIndex",""],["MonitoredComponentId",""],["PIPELINE_NAMESPACE_INSTALLER","A per-process unique pipeline-namespace-installer. Accessible via PipelineNamespace."],["PipelineId",""],["PipelineIndex",""],["PipelineNamespace","Each pipeline ID needs to be unique. However, it also needs to be possible to generate the pipeline ID from an iframe element (this simplifies a lot of other code that makes use of pipeline IDs)."],["PipelineNamespaceId",""],["PipelineNamespaceInstaller","A per-process installer of pipeline-namespaces."],["PipelineNamespaceRequest","Request a pipeline-namespace id from the constellation."],["ServiceWorkerId",""],["ServiceWorkerIndex",""],["ServiceWorkerRegistrationId",""],["ServiceWorkerRegistrationIndex",""],["TopLevelBrowsingContextId",""]],"trait":[["BackgroundHangMonitor","Proxy methods to communicate with the background hang monitor"],["BackgroundHangMonitorClone",""],["BackgroundHangMonitorExitSignal","A means for the BHM to signal a monitored component to exit. Useful when the component is hanging, and cannot be notified via the usual way. The component should implement this in a way allowing for the signal to be received when hanging, if at all."],["BackgroundHangMonitorRegister","A handle to register components for hang monitoring, and to receive a means to communicate with the underlying hang monitor worker."]]});