initSidebarItems({"fn":[["align_of","Returns the alignment in memory for a type."],["align_of_val","Returns the alignment of the type of the value that `_val` points to."],["copy_lifetime","Transforms lifetime of the second pointer to match the first."],["copy_mut_lifetime","Transforms lifetime of the second mutable pointer to match the first."],["drop","Disposes of a value."],["forget","Move a value out of scope without running drop glue."],["min_align_of","Returns the ABI-required minimum alignment of a type"],["min_align_of_val","Returns the ABI-required minimum alignment of the type of the value that `_val` points to"],["replace","Replace the value at a mutable location with a new one, returning the old value, without deinitialising or copying either one."],["size_of","Returns the size of a type in bytes."],["size_of_val","Returns the size of the type that `_val` points to in bytes."],["swap","Swap the values at two mutable locations of the same type, without deinitialising or copying either one."],["transmute","Unsafely transforms a value of one type into a value of another type."],["transmute_copy","Interprets `src` as `&U`, and then reads `src` without moving the contained value."],["uninitialized","Create an uninitialized value."],["zeroed","Create a value initialized to zero."]]});