(function() {var implementors = {};
implementors["bincode"] = [{"text":"impl&lt;'a, W, O&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTupleVariant.html\" title=\"trait serde::ser::SerializeTupleVariant\">SerializeTupleVariant</a> for <a class=\"struct\" href=\"bincode/ser/struct.Compound.html\" title=\"struct bincode::ser::Compound\">Compound</a>&lt;'a, W, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"bincode/config/trait.Options.html\" title=\"trait bincode::config::Options\">Options</a>,&nbsp;</span>","synthetic":false,"types":["bincode::ser::Compound"]},{"text":"impl&lt;'a, O:&nbsp;<a class=\"trait\" href=\"bincode/config/trait.Options.html\" title=\"trait bincode::config::Options\">Options</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTupleVariant.html\" title=\"trait serde::ser::SerializeTupleVariant\">SerializeTupleVariant</a> for <a class=\"struct\" href=\"bincode/ser/struct.SizeCompound.html\" title=\"struct bincode::ser::SizeCompound\">SizeCompound</a>&lt;'a, O&gt;","synthetic":false,"types":["bincode::ser::SizeCompound"]}];
implementors["ron"] = [{"text":"impl&lt;'a, W:&nbsp;<a class=\"trait\" href=\"std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTupleVariant.html\" title=\"trait serde::ser::SerializeTupleVariant\">SerializeTupleVariant</a> for <a class=\"enum\" href=\"ron/ser/enum.Compound.html\" title=\"enum ron::ser::Compound\">Compound</a>&lt;'a, W&gt;","synthetic":false,"types":["ron::ser::Compound"]}];
implementors["serde"] = [];
implementors["serde_json"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.SerializeTupleVariant.html\" title=\"trait serde::ser::SerializeTupleVariant\">SerializeTupleVariant</a> for <a class=\"struct\" href=\"serde_json/value/ser/struct.SerializeTupleVariant.html\" title=\"struct serde_json::value::ser::SerializeTupleVariant\">SerializeTupleVariant</a>","synthetic":false,"types":["serde_json::value::ser::SerializeTupleVariant"]}];
implementors["serde_urlencoded"] = [{"text":"impl&lt;'input, 'output, Target&gt; <a class=\"trait\" href=\"serde/ser/trait.SerializeTupleVariant.html\" title=\"trait serde::ser::SerializeTupleVariant\">SerializeTupleVariant</a> for <a class=\"struct\" href=\"serde_urlencoded/ser/struct.TupleVariantSerializer.html\" title=\"struct serde_urlencoded::ser::TupleVariantSerializer\">TupleVariantSerializer</a>&lt;'input, 'output, Target&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Target: 'output + <a class=\"trait\" href=\"form_urlencoded/trait.Target.html\" title=\"trait form_urlencoded::Target\">UrlEncodedTarget</a>,&nbsp;</span>","synthetic":false,"types":["serde_urlencoded::ser::TupleVariantSerializer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()