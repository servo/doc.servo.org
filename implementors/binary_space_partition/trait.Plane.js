(function() {var implementors = {};
implementors["plane_split"] = [{"text":"impl&lt;T, U, A&gt; <a class=\"trait\" href=\"binary_space_partition/trait.Plane.html\" title=\"trait binary_space_partition::Plane\">Plane</a> for <a class=\"struct\" href=\"plane_split/polygon/struct.Polygon.html\" title=\"struct plane_split::polygon::Polygon\">Polygon</a>&lt;T, U, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"euclid/approxeq/trait.ApproxEq.html\" title=\"trait euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;T&gt; + <a class=\"trait\" href=\"core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T, Output = T&gt; + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["plane_split::polygon::Polygon"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()