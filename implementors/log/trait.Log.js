(function() {var implementors = {};
implementors["constellation"] = [{"text":"impl <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"constellation/constellation/struct.FromScriptLogger.html\" title=\"struct constellation::constellation::FromScriptLogger\">FromScriptLogger</a>","synthetic":false,"types":["constellation::constellation::FromScriptLogger"]},{"text":"impl <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"constellation/constellation/struct.FromCompositorLogger.html\" title=\"struct constellation::constellation::FromCompositorLogger\">FromCompositorLogger</a>","synthetic":false,"types":["constellation::constellation::FromCompositorLogger"]}];
implementors["env_logger"] = [{"text":"impl <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"env_logger/struct.Logger.html\" title=\"struct env_logger::Logger\">Logger</a>","synthetic":false,"types":["env_logger::Logger"]}];
implementors["log"] = [];
implementors["servo"] = [{"text":"impl&lt;Log1, Log2&gt; <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> for <a class=\"struct\" href=\"servo/struct.BothLogger.html\" title=\"struct servo::BothLogger\">BothLogger</a>&lt;Log1, Log2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Log1: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Log2: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a>,&nbsp;</span>","synthetic":false,"types":["servo::BothLogger"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()