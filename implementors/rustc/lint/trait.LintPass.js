(function() {var implementors = {};
implementors['rustdoc'] = [];implementors['rustc'] = [];implementors['rustc_borrowck'] = [];implementors['plugins'] = ["<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/ban/struct.BanPass.html' title='plugins::lints::ban::BanPass'>BanPass</a>","<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/inheritance_integrity/struct.InheritancePass.html' title='plugins::lints::inheritance_integrity::InheritancePass'>InheritancePass</a>","<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/privatize/struct.PrivatizePass.html' title='plugins::lints::privatize::PrivatizePass'>PrivatizePass</a>","<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/str_to_string/struct.StrToStringPass.html' title='plugins::lints::str_to_string::StrToStringPass'>StrToStringPass</a>","<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/transmute_type/struct.TransmutePass.html' title='plugins::lints::transmute_type::TransmutePass'>TransmutePass</a>","<a class='stability Unstable' title='Unstable'></a>impl <a class='trait' href='rustc/lint/trait.LintPass.html' title='rustc::lint::LintPass'>LintPass</a> for <a class='struct' href='plugins/lints/unrooted_must_root/struct.UnrootedPass.html' title='plugins::lints::unrooted_must_root::UnrootedPass'>UnrootedPass</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
