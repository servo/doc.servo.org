(function() {var implementors = {};
implementors['collections'] = ["<a class='stability Unstable' title='Unstable: recent addition, needs more experience'></a>impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;&amp;'a <a href='primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","<a class='stability Unstable' title='Unstable: recent addition, needs more experience'></a>impl&lt;'a, T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a href='primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;",];implementors['core'] = [];implementors['rustdoc'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='rustdoc/stability_summary/struct.Counts.html' title='rustdoc::stability_summary::Counts'>Counts</a>",];implementors['rustc_driver'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='enum' href='http://doc.rust-lang.org/nightly/syntax/ext/tt/transcribe/enum.LockstepIterSize.html' title='syntax::ext::tt::transcribe::LockstepIterSize'>LockstepIterSize</a>&gt; for <a class='enum' href='http://doc.rust-lang.org/nightly/syntax/ext/tt/transcribe/enum.LockstepIterSize.html' title='syntax::ext::tt::transcribe::LockstepIterSize'>LockstepIterSize</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='http://doc.rust-lang.org/nightly/syntax/codemap/struct.BytePos.html' title='syntax::codemap::BytePos'>BytePos</a>&gt; for <a class='struct' href='http://doc.rust-lang.org/nightly/syntax/codemap/struct.BytePos.html' title='syntax::codemap::BytePos'>BytePos</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='http://doc.rust-lang.org/nightly/syntax/codemap/struct.CharPos.html' title='syntax::codemap::CharPos'>CharPos</a>&gt; for <a class='struct' href='http://doc.rust-lang.org/nightly/syntax/codemap/struct.CharPos.html' title='syntax::codemap::CharPos'>CharPos</a>",];implementors['syntax'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='syntax/codemap/struct.BytePos.html' title='syntax::codemap::BytePos'>BytePos</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='syntax/codemap/struct.CharPos.html' title='syntax::codemap::CharPos'>CharPos</a>",];implementors['geom'] = ["<a class='stability Stable' title='Stable'></a>impl&lt;U, T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='geom/length/struct.Length.html' title='geom::length::Length'>Length</a>&lt;U, T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='geom/point/struct.Point2D.html' title='geom::point::Point2D'>Point2D</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='geom/size/struct.Size2D.html' title='geom::size::Size2D'>Size2D</a>&lt;T&gt;&gt; for <a class='struct' href='geom/point/struct.Point2D.html' title='geom::point::Point2D'>Point2D</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;Src, Dst, T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='geom/scale_factor/struct.ScaleFactor.html' title='geom::scale_factor::ScaleFactor'>ScaleFactor</a>&lt;Src, Dst, T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='geom/side_offsets/struct.SideOffsets2D.html' title='geom::side_offsets::SideOffsets2D'>SideOffsets2D</a>&lt;T&gt;",];implementors['gl_generator'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='gl_generator/registry/struct.Registry.html' title='gl_generator::registry::Registry'>Registry</a>",];implementors['time'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Timespec.html' title='time::Timespec'>Timespec</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.SteadyTime.html' title='time::SteadyTime'>SteadyTime</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='std/time/duration/struct.Duration.html' title='std::time::duration::Duration'>Duration</a>&gt; for <a class='struct' href='time/struct.Tm.html' title='time::Tm'>Tm</a>",];implementors['openssl'] = ["<a class='stability Stable' title='Stable'></a>impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;&amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='openssl::bn::BigNum'>BigNum</a>&gt; for &amp;'a <a class='struct' href='openssl/bn/struct.BigNum.html' title='openssl::bn::BigNum'>BigNum</a>",];implementors['util'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='util/geometry/struct.Au.html' title='util::geometry::Au'>Au</a>","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='util/logical_geometry/struct.LogicalSize.html' title='util::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/marker/trait.Copy.html' title='core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalSize.html' title='util::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalPoint.html' title='util::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for <a class='struct' href='util/logical_geometry/struct.LogicalMargin.html' title='util::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T: <a class='trait' href='core/marker/trait.Copy.html' title='core::marker::Copy'>Copy</a> + <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;T, Output=T&gt; + <a class='trait' href='core/ops/trait.Sub.html' title='core::ops::Sub'>Sub</a>&lt;T, Output=T&gt;&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalMargin.html' title='util::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalRect.html' title='util::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt;",];implementors['style'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='style/values/specified/struct.LengthAndPercentage.html' title='style::values::specified::LengthAndPercentage'>LengthAndPercentage</a>&gt; for <a class='struct' href='style/values/specified/struct.LengthAndPercentage.html' title='style::values::specified::LengthAndPercentage'>LengthAndPercentage</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='style/values/computed/struct.LengthAndPercentage.html' title='style::values::computed::LengthAndPercentage'>LengthAndPercentage</a>&gt; for <a class='struct' href='style/values/computed/struct.LengthAndPercentage.html' title='style::values::computed::LengthAndPercentage'>LengthAndPercentage</a>","<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='style/properties/longhands/outline_width/computed_value/struct.T.html' title='style::properties::longhands::outline_width::computed_value::T'>Au</a>&gt; for <a class='struct' href='style/properties/longhands/outline_width/computed_value/struct.T.html' title='style::properties::longhands::outline_width::computed_value::T'>Au</a>","<a class='stability Stable' title='Stable'></a>impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalSize.html' title='util::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalSize.html' title='util::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalSize.html' title='util::logical_geometry::LogicalSize'>LogicalSize</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalPoint.html' title='util::logical_geometry::LogicalPoint'>LogicalPoint</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalMargin.html' title='util::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalMargin.html' title='util::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;","<a class='stability Stable' title='Stable'></a>impl&lt;T&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='util/logical_geometry/struct.LogicalMargin.html' title='util::logical_geometry::LogicalMargin'>LogicalMargin</a>&lt;T&gt;&gt; for <a class='struct' href='util/logical_geometry/struct.LogicalRect.html' title='util::logical_geometry::LogicalRect'>LogicalRect</a>&lt;T&gt;",];implementors['gfx'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='gfx/text/glyph/struct.CharIndex.html' title='gfx::text::glyph::CharIndex'>CharIndex</a>&gt; for <a class='struct' href='gfx/text/glyph/struct.CharIndex.html' title='gfx::text::glyph::CharIndex'>CharIndex</a>",];implementors['layout'] = ["<a class='stability Stable' title='Stable'></a>impl <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a>&lt;<a class='struct' href='layout/inline/struct.FragmentIndex.html' title='layout::inline::FragmentIndex'>FragmentIndex</a>&gt; for <a class='struct' href='layout/inline/struct.FragmentIndex.html' title='layout::inline::FragmentIndex'>FragmentIndex</a>","<a class='stability Stable' title='Stable'></a>impl&lt;'a&gt; <a class='trait' href='core/ops/trait.Add.html' title='core::ops::Add'>Add</a> for &amp;'a AutoLayoutCandidateGuess",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
