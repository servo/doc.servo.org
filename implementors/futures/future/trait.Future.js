(function() {var implementors = {};
implementors["futures_cpupool"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static, E:&nbsp;<a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"futures_cpupool/struct.CpuFuture.html\" title=\"struct futures_cpupool::CpuFuture\">CpuFuture</a>&lt;T, E&gt;","synthetic":false,"types":["futures_cpupool::CpuFuture"]},{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"futures_cpupool/struct.MySender.html\" title=\"struct futures_cpupool::MySender\">MySender</a>&lt;F, <a class=\"enum\" href=\"core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F::<a class=\"type\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>, F::<a class=\"type\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html#associatedtype.Error\" title=\"type futures::future::Future::Error\">Error</a>&gt;&gt;","synthetic":false,"types":["futures_cpupool::MySender"]}];
implementors["h2"] = [{"text":"impl&lt;B&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/client/struct.ReadySendRequest.html\" title=\"struct h2::client::ReadySendRequest\">ReadySendRequest</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"type\" href=\"bytes/buf/into_buf/trait.IntoBuf.html#associatedtype.Buf\" title=\"type bytes::buf::into_buf::IntoBuf::Buf\">Buf</a>: 'static,&nbsp;</span>","synthetic":false,"types":["h2::client::ReadySendRequest"]},{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/client/struct.Connection.html\" title=\"struct h2::client::Connection\">Connection</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>,&nbsp;</span>","synthetic":false,"types":["h2::client::Connection"]},{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/client/struct.Handshake.html\" title=\"struct h2::client::Handshake\">Handshake</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::<a class=\"type\" href=\"bytes/buf/into_buf/trait.IntoBuf.html#associatedtype.Buf\" title=\"type bytes::buf::into_buf::IntoBuf::Buf\">Buf</a>: 'static,&nbsp;</span>","synthetic":false,"types":["h2::client::Handshake"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/client/struct.ResponseFuture.html\" title=\"struct h2::client::ResponseFuture\">ResponseFuture</a>","synthetic":false,"types":["h2::client::ResponseFuture"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/client/struct.PushedResponseFuture.html\" title=\"struct h2::client::PushedResponseFuture\">PushedResponseFuture</a>","synthetic":false,"types":["h2::client::PushedResponseFuture"]},{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/server/struct.Flush.html\" title=\"struct h2::server::Flush\">Flush</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf/trait.Buf.html\" title=\"trait bytes::buf::buf::Buf\">Buf</a>,&nbsp;</span>","synthetic":false,"types":["h2::server::Flush"]},{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/server/struct.ReadPreface.html\" title=\"struct h2::server::ReadPreface\">ReadPreface</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf/trait.Buf.html\" title=\"trait bytes::buf::buf::Buf\">Buf</a>,&nbsp;</span>","synthetic":false,"types":["h2::server::ReadPreface"]},{"text":"impl&lt;T, B:&nbsp;<a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"h2/server/struct.Handshake.html\" title=\"struct h2::server::Handshake\">Handshake</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/into_buf/trait.IntoBuf.html\" title=\"trait bytes::buf::into_buf::IntoBuf\">IntoBuf</a>,&nbsp;</span>","synthetic":false,"types":["h2::server::Handshake"]}];
implementors["hyper_openssl"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"hyper_openssl/struct.ConnectFuture.html\" title=\"struct hyper_openssl::ConnectFuture\">ConnectFuture</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"hyper/client/connect/trait.Connect.html\" title=\"trait hyper::client::connect::Connect\">Connect</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"hyper/client/connect/trait.Connect.html#associatedtype.Transport\" title=\"type hyper::client::connect::Connect::Transport\">Transport</a>: <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,&nbsp;</span>","synthetic":false,"types":["hyper_openssl::ConnectFuture"]}];
implementors["net"] = [{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"net/decoder/struct.Pending.html\" title=\"struct net::decoder::Pending\">Pending</a>","synthetic":false,"types":["net::decoder::Pending"]}];
implementors["tokio_buf"] = [{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_buf/util/collect/struct.Collect.html\" title=\"struct tokio_buf::util::collect::Collect\">Collect</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio_buf/trait.BufStream.html\" title=\"trait tokio_buf::BufStream\">BufStream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"tokio_buf/util/from/trait.FromBufStream.html\" title=\"trait tokio_buf::util::from::FromBufStream\">FromBufStream</a>&lt;T::<a class=\"type\" href=\"tokio_buf/trait.BufStream.html#associatedtype.Item\" title=\"type tokio_buf::BufStream::Item\">Item</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_buf::util::collect::Collect"]}];
implementors["tokio_io"] = [{"text":"impl&lt;R, W&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/copy/struct.Copy.html\" title=\"struct tokio_io::io::copy::Copy\">Copy</a>&lt;R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::copy::Copy"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/flush/struct.Flush.html\" title=\"struct tokio_io::io::flush::Flush\">Flush</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::flush::Flush"]},{"text":"impl&lt;R, T&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/read/struct.Read.html\" title=\"struct tokio_io::io::read::Read\">Read</a>&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::read::Read"]},{"text":"impl&lt;A, T&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/read_exact/struct.ReadExact.html\" title=\"struct tokio_io::io::read_exact::ReadExact\">ReadExact</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::read_exact::ReadExact"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/read_to_end/struct.ReadToEnd.html\" title=\"struct tokio_io::io::read_to_end::ReadToEnd\">ReadToEnd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a>,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/read_until/struct.ReadUntil.html\" title=\"struct tokio_io::io::read_until::ReadUntil\">ReadUntil</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_read/trait.AsyncRead.html\" title=\"trait tokio_io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a>,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::read_until::ReadUntil"]},{"text":"impl&lt;A&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/shutdown/struct.Shutdown.html\" title=\"struct tokio_io::io::shutdown::Shutdown\">Shutdown</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::shutdown::Shutdown"]},{"text":"impl&lt;A, T&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_io/io/write_all/struct.WriteAll.html\" title=\"struct tokio_io::io::write_all::WriteAll\">WriteAll</a>&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"tokio_io/async_write/trait.AsyncWrite.html\" title=\"trait tokio_io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_io::io::write_all::WriteAll"]}];
implementors["tokio_reactor"] = [{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_reactor/background/struct.Shutdown.html\" title=\"struct tokio_reactor::background::Shutdown\">Shutdown</a>","synthetic":false,"types":["tokio_reactor::background::Shutdown"]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_sync/oneshot/struct.Receiver.html\" title=\"struct tokio_sync::oneshot::Receiver\">Receiver</a>&lt;T&gt;","synthetic":false,"types":["tokio_sync::oneshot::Receiver"]}];
implementors["tokio_tcp"] = [{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_tcp/stream/struct.ConnectFuture.html\" title=\"struct tokio_tcp::stream::ConnectFuture\">ConnectFuture</a>","synthetic":false,"types":["tokio_tcp::stream::ConnectFuture"]},{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"enum\" href=\"tokio_tcp/stream/enum.ConnectFutureState.html\" title=\"enum tokio_tcp::stream::ConnectFutureState\">ConnectFutureState</a>","synthetic":false,"types":["tokio_tcp::stream::ConnectFutureState"]}];
implementors["tokio_threadpool"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_threadpool/shutdown/struct.Shutdown.html\" title=\"struct tokio_threadpool::shutdown::Shutdown\">Shutdown</a>","synthetic":false,"types":["tokio_threadpool::shutdown::Shutdown"]},{"text":"impl&lt;T, E&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_threadpool/thread_pool/struct.SpawnHandle.html\" title=\"struct tokio_threadpool::thread_pool::SpawnHandle\">SpawnHandle</a>&lt;T, E&gt;","synthetic":false,"types":["tokio_threadpool::thread_pool::SpawnHandle"]}];
implementors["tokio_timer"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_timer/struct.Timeout.html\" title=\"struct tokio_timer::Timeout\">Timeout</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["tokio_timer::timeout::Timeout"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/futures/0.1/futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_timer/delay/struct.Delay.html\" title=\"struct tokio_timer::delay::Delay\">Delay</a>","synthetic":false,"types":["tokio_timer::delay::Delay"]}];
implementors["warp"] = [{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/and/struct.AndFuture.html\" title=\"struct warp::filter::and::AndFuture\">AndFuture</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Extract\" title=\"type warp::filter::FilterBase::Extract\">Extract</a> as <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>&gt;::<a class=\"type\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a>: <a class=\"trait\" href=\"warp/generic/trait.Combine.html\" title=\"trait warp::generic::Combine\">Combine</a>&lt;&lt;U::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Extract\" title=\"type warp::filter::FilterBase::Extract\">Extract</a> as <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>&gt;::<a class=\"type\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a>&gt; + <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.CombineRejection.html\" title=\"trait warp::reject::sealed::CombineRejection\">CombineRejection</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["warp::filter::and::AndFuture"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/and_then/struct.AndThenFuture.html\" title=\"struct warp::filter::and_then::AndThenFuture\">AndThenFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Extract\" title=\"type warp::filter::FilterBase::Extract\">Extract</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a>: <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a> + <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Error\" title=\"type futures::future::IntoFuture::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.CombineRejection.html\" title=\"trait warp::reject::sealed::CombineRejection\">CombineRejection</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,&nbsp;</span>","synthetic":false,"types":["warp::filter::and_then::AndThenFuture"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/map/struct.MapFuture.html\" title=\"struct warp::filter::map::MapFuture\">MapFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Extract\" title=\"type warp::filter::FilterBase::Extract\">Extract</a>&gt;,&nbsp;</span>","synthetic":false,"types":["warp::filter::map::MapFuture"]},{"text":"impl&lt;T, F, E&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/map_err/struct.MapErrFuture.html\" title=\"struct warp::filter::map_err::MapErrFuture\">MapErrFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>) -&gt; E,&nbsp;</span>","synthetic":false,"types":["warp::filter::map_err::MapErrFuture"]},{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/or/struct.EitherFuture.html\" title=\"struct warp::filter::or::EitherFuture\">EitherFuture</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.CombineRejection.html\" title=\"trait warp::reject::sealed::CombineRejection\">CombineRejection</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["warp::filter::or::EitherFuture"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/or_else/struct.OrElseFuture.html\" title=\"struct warp::filter::or_else::OrElseFuture\">OrElseFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a>: <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&lt;Item = T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Extract\" title=\"type warp::filter::FilterBase::Extract\">Extract</a>, Error = T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt; + <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,&nbsp;</span>","synthetic":false,"types":["warp::filter::or_else::OrElseFuture"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/recover/struct.RecoverFuture.html\" title=\"struct warp::filter::recover::RecoverFuture\">RecoverFuture</a>&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a>: <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&lt;Error = T::<a class=\"type\" href=\"warp/filter/trait.FilterBase.html#associatedtype.Error\" title=\"type warp::filter::FilterBase::Error\">Error</a>&gt; + <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F::<a class=\"type\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a> as <a class=\"trait\" href=\"futures/future/trait.IntoFuture.html\" title=\"trait futures::future::IntoFuture\">IntoFuture</a>&gt;::<a class=\"type\" href=\"futures/future/trait.IntoFuture.html#associatedtype.Future\" title=\"type futures::future::IntoFuture::Future\">Future</a>: <a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,&nbsp;</span>","synthetic":false,"types":["warp::filter::recover::RecoverFuture"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/service/struct.FilteredFuture.html\" title=\"struct warp::filter::service::FilteredFuture\">FilteredFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["warp::filter::service::FilteredFuture"]},{"text":"impl&lt;F, T&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/unify/struct.UnifyFuture.html\" title=\"struct warp::filter::unify::UnifyFuture\">UnifyFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>&lt;Item = <a class=\"primitive\" href=\"std/primitive.tuple.html\">(</a><a class=\"enum\" href=\"warp/generic/enum.Either.html\" title=\"enum warp::generic::Either\">Either</a>&lt;T, T&gt;<a class=\"primitive\" href=\"std/primitive.tuple.html\">,)</a>&gt;,&nbsp;</span>","synthetic":false,"types":["warp::filter::unify::UnifyFuture"]},{"text":"impl&lt;F, T&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filter/untuple_one/struct.UntupleOneFuture.html\" title=\"struct warp::filter::untuple_one::UntupleOneFuture\">UntupleOneFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"warp/filter/trait.Filter.html\" title=\"trait warp::filter::Filter\">Filter</a>&lt;Extract = <a class=\"primitive\" href=\"std/primitive.tuple.html\">(</a>T<a class=\"primitive\" href=\"std/primitive.tuple.html\">,)</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>,&nbsp;</span>","synthetic":false,"types":["warp::filter::untuple_one::UntupleOneFuture"]},{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filters/any/struct.AnyFut.html\" title=\"struct warp::filters::any::AnyFut\">AnyFut</a>","synthetic":false,"types":["warp::filters::any::AnyFut"]},{"text":"impl <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filters/body/struct.Concat.html\" title=\"struct warp::filters::body::Concat\">Concat</a>","synthetic":false,"types":["warp::filters::body::Concat"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filters/cors/internal/struct.WrappedFuture.html\" title=\"struct warp::filters::cors::internal::WrappedFuture\">WrappedFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Error\" title=\"type futures::future::Future::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.CombineRejection.html\" title=\"trait warp::reject::sealed::CombineRejection\">CombineRejection</a>&lt;<a class=\"struct\" href=\"warp/reject/struct.Rejection.html\" title=\"struct warp::reject::Rejection\">Rejection</a>&gt;,&nbsp;</span>","synthetic":false,"types":["warp::filters::cors::internal::WrappedFuture"]},{"text":"impl&lt;FN, F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/filters/log/internal/struct.WithLogFuture.html\" title=\"struct warp::filters::log::internal::WithLogFuture\">WithLogFuture</a>&lt;FN, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FN: <a class=\"trait\" href=\"core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"warp/filters/log/struct.Info.html\" title=\"struct warp::filters::log::Info\">Info</a>&lt;'_&gt;),<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: <a class=\"trait\" href=\"warp/reply/trait.Reply.html\" title=\"trait warp::reply::Reply\">Reply</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Error\" title=\"type futures::future::Future::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.Reject.html\" title=\"trait warp::reject::sealed::Reject\">Reject</a>,&nbsp;</span>","synthetic":false,"types":["warp::filters::log::internal::WithLogFuture"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a> for <a class=\"struct\" href=\"warp/server/struct.ReplyFuture.html\" title=\"struct warp::server::ReplyFuture\">ReplyFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures/future/trait.Future.html\" title=\"trait futures::future::Future\">Future</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Item\" title=\"type futures::future::Future::Item\">Item</a>: <a class=\"trait\" href=\"warp/reply/trait.Reply.html\" title=\"trait warp::reply::Reply\">Reply</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F::<a class=\"type\" href=\"futures/future/trait.Future.html#associatedtype.Error\" title=\"type futures::future::Future::Error\">Error</a>: <a class=\"trait\" href=\"warp/reject/sealed/trait.Reject.html\" title=\"trait warp::reject::sealed::Reject\">Reject</a>,&nbsp;</span>","synthetic":false,"types":["warp::server::ReplyFuture"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()