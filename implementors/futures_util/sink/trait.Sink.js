(function() {var implementors = {};
implementors["futures_util"] = [{"text":"impl&lt;Fut, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"enum\" href=\"futures_util/future/future/flatten/enum.Flatten.html\" title=\"enum futures_util::future::future::flatten::Flatten\">Flatten</a>&lt;Fut, Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::future::future::flatten::Flatten"]},{"text":"impl&lt;_Item, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/future/future/struct.FlattenStream.html\" title=\"struct futures_util::future::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"futures_util/future/future/flatten/enum.Flatten.html\" title=\"enum futures_util::future::future::flatten::Flatten\">Flatten</a>&lt;F, &lt;F as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"enum\" href=\"futures_util/future/try_future/try_flatten/enum.TryFlatten.html\" title=\"enum futures_util::future::try_future::try_flatten::TryFlatten\">TryFlatten</a>&lt;Fut, Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Error\" title=\"type futures_util::future::TryFuture::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::future::try_future::try_flatten::TryFlatten"]},{"text":"impl&lt;_Item, Fut&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/future/try_future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::try_future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"futures_util/future/try_future/try_flatten/enum.TryFlatten.html\" title=\"enum futures_util::future::try_future::try_flatten::TryFlatten\">TryFlatten</a>&lt;Fut, Fut::<a class=\"associatedtype\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;_Item, Fut, Si&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/future/try_future/struct.FlattenSink.html\" title=\"struct futures_util::future::try_future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"futures_util/future/try_future/try_flatten/enum.TryFlatten.html\" title=\"enum futures_util::future::try_future::try_flatten::TryFlatten\">TryFlatten</a>&lt;Fut, Si&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::future::try_future::FlattenSink"]},{"text":"impl&lt;A, B, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"enum\" href=\"futures_util/future/either/enum.Either.html\" title=\"enum futures_util::future::either::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = A::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::future::either::Either"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/enumerate/struct.Enumerate.html\" title=\"struct futures_util::stream::stream::enumerate::Enumerate\">Enumerate</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/filter/struct.Filter.html\" title=\"struct futures_util::stream::stream::filter::Filter\">Filter</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"std/primitive.bool.html\">bool</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/filter_map/struct.FilterMap.html\" title=\"struct futures_util::stream::stream::filter_map::FilterMap\">FilterMap</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/fns/trait.FnMut1.html\" title=\"trait futures_util::fns::FnMut1\">FnMut1</a>&lt;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>, Output = Fut&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/flatten/struct.Flatten.html\" title=\"struct futures_util::stream::stream::flatten::Flatten\">Flatten</a>&lt;S, S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::flatten::Flatten"]},{"text":"impl&lt;_Item, St&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/struct.Flatten.html\" title=\"struct futures_util::stream::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/flatten/struct.Flatten.html\" title=\"struct futures_util::stream::stream::flatten::Flatten\">Flatten</a>&lt;St, St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/fuse/struct.Fuse.html\" title=\"struct futures_util::stream::stream::fuse::Fuse\">Fuse</a>&lt;S&gt;","synthetic":false,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;_Item, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/struct.Inspect.html\" title=\"struct futures_util::stream::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/map/struct.Map.html\" title=\"struct futures_util::stream::stream::map::Map\">Map</a>&lt;St, <a class=\"struct\" href=\"futures_util/fns/struct.InspectFn.html\" title=\"struct futures_util::fns::InspectFn\">InspectFn</a>&lt;F&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/map/struct.Map.html\" title=\"struct futures_util::stream::stream::map::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/fns/trait.FnMut1.html\" title=\"trait futures_util::fns::FnMut1\">FnMut1</a>&lt;St::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;_Item, St, U, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/flatten/struct.Flatten.html\" title=\"struct futures_util::stream::stream::flatten::Flatten\">Flatten</a>&lt;<a class=\"struct\" href=\"futures_util/stream/stream/map/struct.Map.html\" title=\"struct futures_util::stream::stream::map::Map\">Map</a>&lt;St, F&gt;, U&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/peek/struct.Peekable.html\" title=\"struct futures_util::stream::stream::peek::Peekable\">Peekable</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; + <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/skip/struct.Skip.html\" title=\"struct futures_util::stream::stream::skip::Skip\">Skip</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/skip_while/struct.SkipWhile.html\" title=\"struct futures_util::stream::stream::skip_while::SkipWhile\">SkipWhile</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"std/primitive.bool.html\">bool</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/take/struct.Take.html\" title=\"struct futures_util::stream::stream::take::Take\">Take</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/take_while/struct.TakeWhile.html\" title=\"struct futures_util::stream::stream::take_while::TakeWhile\">TakeWhile</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;S, Fut, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/take_until/struct.TakeUntil.html\" title=\"struct futures_util::stream::stream::take_until::TakeUntil\">TakeUntil</a>&lt;S, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/then/struct.Then.html\" title=\"struct futures_util::stream::stream::then::Then\">Then</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/chunks/struct.Chunks.html\" title=\"struct futures_util::stream::stream::chunks::Chunks\">Chunks</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/ready_chunks/struct.ReadyChunks.html\" title=\"struct futures_util::stream::stream::ready_chunks::ReadyChunks\">ReadyChunks</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/scan/struct.Scan.html\" title=\"struct futures_util::stream::stream::scan::Scan\">Scan</a>&lt;S, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/buffer_unordered/struct.BufferUnordered.html\" title=\"struct futures_util::stream::stream::buffer_unordered::BufferUnordered\">BufferUnordered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/buffered/struct.Buffered.html\" title=\"struct futures_util::stream::stream::buffered::Buffered\">Buffered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/stream/split/struct.SplitSink.html\" title=\"struct futures_util::stream::stream::split::SplitSink\">SplitSink</a>&lt;S, Item&gt;","synthetic":false,"types":["futures_util::stream::stream::split::SplitSink"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/and_then/struct.AndThen.html\" title=\"struct futures_util::stream::try_stream::and_then::AndThen\">AndThen</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;_Item, St, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/struct.ErrInto.html\" title=\"struct futures_util::stream::try_stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/try_stream/struct.MapErr.html\" title=\"struct futures_util::stream::try_stream::MapErr\">MapErr</a>&lt;St, <a class=\"struct\" href=\"futures_util/fns/struct.IntoFn.html\" title=\"struct futures_util::fns::IntoFn\">IntoFn</a>&lt;E&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;_Item, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/struct.InspectOk.html\" title=\"struct futures_util::stream::try_stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/struct.Inspect.html\" title=\"struct futures_util::stream::stream::Inspect\">Inspect</a>&lt;<a class=\"struct\" href=\"futures_util/stream/try_stream/into_stream/struct.IntoStream.html\" title=\"struct futures_util::stream::try_stream::into_stream::IntoStream\">IntoStream</a>&lt;St&gt;, <a class=\"struct\" href=\"futures_util/fns/struct.InspectOkFn.html\" title=\"struct futures_util::fns::InspectOkFn\">InspectOkFn</a>&lt;F&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;_Item, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/struct.InspectErr.html\" title=\"struct futures_util::stream::try_stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/struct.Inspect.html\" title=\"struct futures_util::stream::stream::Inspect\">Inspect</a>&lt;<a class=\"struct\" href=\"futures_util/stream/try_stream/into_stream/struct.IntoStream.html\" title=\"struct futures_util::stream::try_stream::into_stream::IntoStream\">IntoStream</a>&lt;St&gt;, <a class=\"struct\" href=\"futures_util/fns/struct.InspectErrFn.html\" title=\"struct futures_util::fns::InspectErrFn\">InspectErrFn</a>&lt;F&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/into_stream/struct.IntoStream.html\" title=\"struct futures_util::stream::try_stream::into_stream::IntoStream\">IntoStream</a>&lt;S&gt;","synthetic":false,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;_Item, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/struct.MapOk.html\" title=\"struct futures_util::stream::try_stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/map/struct.Map.html\" title=\"struct futures_util::stream::stream::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/stream/try_stream/into_stream/struct.IntoStream.html\" title=\"struct futures_util::stream::try_stream::into_stream::IntoStream\">IntoStream</a>&lt;St&gt;, <a class=\"struct\" href=\"futures_util/fns/struct.MapOkFn.html\" title=\"struct futures_util::fns::MapOkFn\">MapOkFn</a>&lt;F&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;_Item, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/struct.MapErr.html\" title=\"struct futures_util::stream::try_stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"futures_util/stream/stream/map/struct.Map.html\" title=\"struct futures_util::stream::stream::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"futures_util/stream/try_stream/into_stream/struct.IntoStream.html\" title=\"struct futures_util::stream::try_stream::into_stream::IntoStream\">IntoStream</a>&lt;St&gt;, <a class=\"struct\" href=\"futures_util/fns/struct.MapErrFn.html\" title=\"struct futures_util::fns::MapErrFn\">MapErrFn</a>&lt;F&gt;&gt;: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;_Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/or_else/struct.OrElse.html\" title=\"struct futures_util::stream::try_stream::or_else::OrElse\">OrElse</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;S, Fut, F, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_filter/struct.TryFilter.html\" title=\"struct futures_util::stream::try_stream::try_filter::TryFilter\">TryFilter</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;S, Fut, F, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_filter_map/struct.TryFilterMap.html\" title=\"struct futures_util::stream::try_stream::try_filter_map::TryFilterMap\">TryFilterMap</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;S, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_flatten/struct.TryFlatten.html\" title=\"struct futures_util::stream::try_stream::try_flatten::TryFlatten\">TryFlatten</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;S, Fut, F, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_skip_while/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::try_stream::try_skip_while::TrySkipWhile\">TrySkipWhile</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;S, Fut, F, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_take_while/struct.TryTakeWhile.html\" title=\"struct futures_util::stream::try_stream::try_take_while::TryTakeWhile\">TryTakeWhile</a>&lt;S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_take_while::TryTakeWhile"]},{"text":"impl&lt;S, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_buffer_unordered/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered\">TryBufferUnordered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = E&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;S, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/stream/try_stream/try_buffered/struct.TryBuffered.html\" title=\"struct futures_util::stream::try_stream::try_buffered::TryBuffered\">TryBuffered</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a> + <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = E&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"associatedtype\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&lt;Error = E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_buffered::TryBuffered"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;T&gt; for <a class=\"struct\" href=\"futures_util/sink/drain/struct.Drain.html\" title=\"struct futures_util::sink::drain::Drain\">Drain</a>&lt;T&gt;","synthetic":false,"types":["futures_util::sink::drain::Drain"]},{"text":"impl&lt;Si1, Si2, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/sink/fanout/struct.Fanout.html\" title=\"struct futures_util::sink::fanout::Fanout\">Fanout</a>&lt;Si1, Si2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si1: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Item: <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si2: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item, Error = Si1::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::sink::fanout::Fanout"]},{"text":"impl&lt;Si, Item, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/sink/err_into/struct.SinkErrInto.html\" title=\"struct futures_util::sink::err_into::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Si::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>: <a class=\"trait\" href=\"core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::sink::err_into::SinkErrInto"]},{"text":"impl&lt;Si, F, E, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/sink/map_err/struct.SinkMapErr.html\" title=\"struct futures_util::sink::map_err::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Si::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>) -&gt; E,&nbsp;</span>","synthetic":false,"types":["futures_util::sink::map_err::SinkMapErr"]},{"text":"impl&lt;Si, Item, U, Fut, F, E&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;U&gt; for <a class=\"struct\" href=\"futures_util/sink/with/struct.With.html\" title=\"struct futures_util::sink::with::With\">With</a>&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(U) -&gt; Fut,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Item, E&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Si::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::sink::with::With"]},{"text":"impl&lt;Si, Item, U, St, F&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;U&gt; for <a class=\"struct\" href=\"futures_util/sink/with_flat_map/struct.WithFlatMap.html\" title=\"struct futures_util::sink::with_flat_map::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(U) -&gt; St,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&lt;Item = <a class=\"enum\" href=\"core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Item, Si::<a class=\"associatedtype\" href=\"futures_util/sink/trait.Sink.html#associatedtype.Error\" title=\"type futures_util::sink::Sink::Error\">Error</a>&gt;&gt;,&nbsp;</span>","synthetic":false,"types":["futures_util::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;Si:&nbsp;<a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;, Item&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/sink/buffer/struct.Buffer.html\" title=\"struct futures_util::sink::buffer::Buffer\">Buffer</a>&lt;Si, Item&gt;","synthetic":false,"types":["futures_util::sink::buffer::Buffer"]},{"text":"impl&lt;W:&nbsp;<a class=\"trait\" href=\"futures_util/io/trait.AsyncWrite.html\" title=\"trait futures_util::io::AsyncWrite\">AsyncWrite</a>, Item:&nbsp;<a class=\"trait\" href=\"core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"std/primitive.slice.html\">]</a>&gt;&gt; <a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt; for <a class=\"struct\" href=\"futures_util/io/into_sink/struct.IntoSink.html\" title=\"struct futures_util::io::into_sink::IntoSink\">IntoSink</a>&lt;W, Item&gt;","synthetic":false,"types":["futures_util::io::into_sink::IntoSink"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()