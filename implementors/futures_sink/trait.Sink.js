(function() {var implementors = {};
implementors["async_tungstenite"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;<a class=\"enum\" href=\"tungstenite/protocol/message/enum.Message.html\" title=\"enum tungstenite::protocol::message::Message\">Message</a>&gt; for <a class=\"struct\" href=\"async_tungstenite/struct.WebSocketStream.html\" title=\"struct async_tungstenite::WebSocketStream\">WebSocketStream</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["async_tungstenite::WebSocketStream"]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;T&gt; for <a class=\"struct\" href=\"futures_channel/mpsc/struct.Sender.html\" title=\"struct futures_channel::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":false,"types":["futures_channel::mpsc::Sender"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;T&gt; for <a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":false,"types":["futures_channel::mpsc::UnboundedSender"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;T&gt; for &amp;<a class=\"struct\" href=\"futures_channel/mpsc/struct.UnboundedSender.html\" title=\"struct futures_channel::mpsc::UnboundedSender\">UnboundedSender</a>&lt;T&gt;","synthetic":false,"types":["futures_channel::mpsc::UnboundedSender"]}];
implementors["futures_sink"] = [];
implementors["gstreamer_app"] = [{"text":"impl <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;<a class=\"struct\" href=\"gstreamer/sample/struct.Sample.html\" title=\"struct gstreamer::sample::Sample\">Sample</a>&gt; for <a class=\"struct\" href=\"gstreamer_app/app_src/struct.AppSrcSink.html\" title=\"struct gstreamer_app::app_src::AppSrcSink\">AppSrcSink</a>","synthetic":false,"types":["gstreamer_app::app_src::AppSrcSink"]}];
implementors["h2"] = [{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;<a class=\"enum\" href=\"h2/frame/enum.Frame.html\" title=\"enum h2::frame::Frame\">Frame</a>&lt;B&gt;&gt; for <a class=\"struct\" href=\"h2/codec/struct.Codec.html\" title=\"struct h2::codec::Codec\">Codec</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"bytes/buf/buf_impl/trait.Buf.html\" title=\"trait bytes::buf::buf_impl::Buf\">Buf</a>,&nbsp;</span>","synthetic":false,"types":["h2::codec::Codec"]}];
implementors["tokio_util"] = [{"text":"impl&lt;T, I, U, W&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/framed_impl/struct.FramedImpl.html\" title=\"struct tokio_util::codec::framed_impl::FramedImpl\">FramedImpl</a>&lt;T, U, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"associatedtype\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"struct\" href=\"tokio_util/codec/framed_impl/struct.WriteFrame.html\" title=\"struct tokio_util::codec::framed_impl::WriteFrame\">WriteFrame</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_util::codec::framed_impl::FramedImpl"]},{"text":"impl&lt;T, I, U&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/framed/struct.Framed.html\" title=\"struct tokio_util::codec::framed::Framed\">Framed</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"associatedtype\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_util::codec::framed::Framed"]},{"text":"impl&lt;T, I, D&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/framed_read/struct.FramedRead.html\" title=\"struct tokio_util::codec::framed_read::FramedRead\">FramedRead</a>&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_util::codec::framed_read::FramedRead"]},{"text":"impl&lt;T, I, E&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;I&gt; for <a class=\"struct\" href=\"tokio_util/codec/framed_write/struct.FramedWrite.html\" title=\"struct tokio_util::codec::framed_write::FramedWrite\">FramedWrite</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: <a class=\"trait\" href=\"tokio_util/codec/encoder/trait.Encoder.html\" title=\"trait tokio_util::codec::encoder::Encoder\">Encoder</a>&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;E::<a class=\"associatedtype\" href=\"tokio_util/codec/encoder/trait.Encoder.html#associatedtype.Error\" title=\"type tokio_util::codec::encoder::Encoder::Error\">Error</a>: <a class=\"trait\" href=\"core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;,&nbsp;</span>","synthetic":false,"types":["tokio_util::codec::framed_write::FramedWrite"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static&gt; <a class=\"trait\" href=\"futures_sink/trait.Sink.html\" title=\"trait futures_sink::Sink\">Sink</a>&lt;T&gt; for <a class=\"struct\" href=\"tokio_util/sync/mpsc/struct.PollSender.html\" title=\"struct tokio_util::sync::mpsc::PollSender\">PollSender</a>&lt;T&gt;","synthetic":false,"types":["tokio_util::sync::mpsc::PollSender"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()