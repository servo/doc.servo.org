initSidebarItems({"constant":[["CLIP_RECTANGLE_AREA_THRESHOLD","The minimum size of a clip mask before trying to draw in tiles."],["CLIP_RECTANGLE_TILE_SIZE","Size in device pixels for tiles that clip masks are drawn in."],["INVALID_SEGMENT_INDEX","Used to signal there are no segments provided with this primitive."],["OPAQUE_TASK_ADDRESS",""]],"enum":[["BatchKind",""],["BrushBatchKind",""],["SegmentDataKind","Either a single texture / user data for all segments, or a list of one per segment."]],"fn":[["get_buffer_kind",""],["get_image_tile_params",""],["resolve_image",""],["textures_compatible",""]],"struct":[["AlphaBatchBuilder","Encapsulates the logic of building batches for items that are blended."],["AlphaBatchContainer",""],["AlphaBatchList",""],["BatchBuilder","Supports (recursively) adding a list of primitives and pictures to an alpha batch builder. In future, it will support multiple dirty regions / slices, allowing the contents of a picture to be spliced into multiple batch builders."],["BatchFeatures","Features of the batch that, if not requested, may allow a fast-path."],["BatchKey",""],["BatchTextures","Optional textures that can be used as a source in the shaders. Textures that are not used by the batch are equal to TextureId::invalid()."],["BrushBatchParameters","The parameters that are specific to a kind of brush, used by the common method to add a brush to batches."],["ClipBatchList","A list of clip instances to be drawn into a target."],["ClipBatcher","Batcher managing draw calls into the clip mask (in the RT cache)."],["OpaqueBatchList",""],["PrimitiveBatch",""],["SegmentInstanceData","Each segment can optionally specify a per-segment texture set and one user data field."]]});