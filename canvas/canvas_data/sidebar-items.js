initSidebarItems({"constant":[["FONT_CONTEXT",""],["HANGING_BASELINE_DEFAULT",""],["IDEOGRAPHIC_BASELINE_DEFAULT",""]],"enum":[["Color",""],["CompositionOp",""],["DrawOptions",""],["DrawSurfaceOptions",""],["ExtendMode",""],["Filter",""],["GradientStop",""],["GradientStops",""],["Path",""],["PathState","The canvas data stores a state machine for the current status of the path data and any relevant transformations that are applied to it. The Azure drawing API expects the path to be in userspace. However, when a path is being built but the canvas’ transform changes, we choose to transform the path and perform further operations to it in device space. When it’s time to draw the path, we convert it back to userspace and draw it with the correct transform applied. TODO: De-abstract now that Azure is removed?"],["Pattern",""],["SourceSurface",""],["StrokeOptions",""],["SurfaceFormat",""]],"fn":[["create_backend",""],["font_width",""],["load_default_system_fallback_font",""],["load_system_font_from_style",""],["replace_ascii_whitespace",""],["to_font_kit_family",""],["with_thread_local_font_context",""],["write_image","It writes an image to the destination target draw_target: the destination target where the image_data will be copied image_data: Pixel information of the image to be written. It takes RGBA8 image_size: The size of the image to be written dest_rect: Area of the destination target where the pixels will be copied smoothing_enabled: It determines if smoothing is applied to the image result"]],"struct":[["CanvasData",""],["CanvasPaintState",""],["PathBuilderRef","A wrapper around a stored PathBuilder and an optional transformation that should be applied to any points to ensure they are in the matching device space."]],"trait":[["Backend",""],["GenericDrawTarget",""],["GenericPathBuilder","A generic PathBuilder that abstracts the interface for azure’s and raqote’s PathBuilder. TODO: De-abstract now that Azure is removed?"],["RectExt",""],["RectToi32",""]],"type":[["CanvasFontContext",""]]});