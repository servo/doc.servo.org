(function() {var type_impls = {
"codespan_reporting":[],
"exr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec2%3CT%3E%3E-for-(T,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/math.rs.html#138-140\">source</a><a href=\"#impl-From%3CVec2%3CT%3E%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"exr/math/struct.Vec2.html\" title=\"struct exr::math::Vec2\">Vec2</a>&lt;T&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/math.rs.html#139\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vec2: <a class=\"struct\" href=\"exr/math/struct.Vec2.html\" title=\"struct exr::math::Vec2\">Vec2</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec2<T>>","exr::meta::attribute::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRecursive-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#148\">source</a><a href=\"#impl-IntoRecursive-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"exr/image/recursive/trait.IntoRecursive.html\" title=\"trait exr::image::recursive::IntoRecursive\">IntoRecursive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Recursive\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" class=\"associatedtype\">Recursive</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>, A&gt;, B&gt;</h4></section></summary><div class='docblock'>The recursive type resulting from this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#148\">source</a><a href=\"#method.into_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/recursive/trait.IntoRecursive.html#tymethod.into_recursive\" class=\"fn\">into_recursive</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" title=\"type exr::image::recursive::IntoRecursive::Recursive\">Recursive</a></h4></section></summary><div class='docblock'>Create a recursive type from this tuple.</div></details></div></details>","IntoRecursive","exr::meta::attribute::Rational"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRecursive-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#149\">source</a><a href=\"#impl-IntoRecursive-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"exr/image/recursive/trait.IntoRecursive.html\" title=\"trait exr::image::recursive::IntoRecursive\">IntoRecursive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Recursive\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" class=\"associatedtype\">Recursive</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>, A&gt;, B&gt;, C&gt;</h4></section></summary><div class='docblock'>The recursive type resulting from this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#149\">source</a><a href=\"#method.into_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/recursive/trait.IntoRecursive.html#tymethod.into_recursive\" class=\"fn\">into_recursive</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" title=\"type exr::image::recursive::IntoRecursive::Recursive\">Recursive</a></h4></section></summary><div class='docblock'>Create a recursive type from this tuple.</div></details></div></details>","IntoRecursive","exr::image::RgbChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRecursive-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#150\">source</a><a href=\"#impl-IntoRecursive-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"exr/image/recursive/trait.IntoRecursive.html\" title=\"trait exr::image::recursive::IntoRecursive\">IntoRecursive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Recursive\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" class=\"associatedtype\">Recursive</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.Recursive.html\" title=\"struct exr::image::recursive::Recursive\">Recursive</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>, A&gt;, B&gt;, C&gt;, D&gt;</h4></section></summary><div class='docblock'>The recursive type resulting from this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#150\">source</a><a href=\"#method.into_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/recursive/trait.IntoRecursive.html#tymethod.into_recursive\" class=\"fn\">into_recursive</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" title=\"type exr::image::recursive::IntoRecursive::Recursive\">Recursive</a></h4></section></summary><div class='docblock'>Create a recursive type from this tuple.</div></details></div></details>","IntoRecursive","exr::image::RgbaChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValidateResult-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1069-1073\">source</a><a href=\"#impl-ValidateResult-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1070-1072\">source</a><a href=\"#method.validate_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\" class=\"fn\">validate_result</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>,\n    options: <a class=\"struct\" href=\"exr/image/validate_results/struct.ValidationOptions.html\" title=\"struct exr::image::validate_results::ValidationOptions\">ValidationOptions</a>,\n    location: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"type\" href=\"exr/image/validate_results/type.ValidationResult.html\" title=\"type exr::image::validate_results::ValidationResult\">ValidationResult</a></h4></section></summary><div class='docblock'>Compare self with the other.\nExceptional behaviour: <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_equals_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#899-901\">source</a><a href=\"#method.assert_equals_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\" class=\"fn\">assert_equals_result</a>(&amp;self, result: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Compare self with the other. Panics if not equal. <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\">Read more</a></div></details></div></details>","ValidateResult","exr::image::RgbChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValidateResult-for-(A,+B,+C,+D)\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1063-1067\">source</a><a href=\"#impl-ValidateResult-for-(A,+B,+C,+D)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D&gt; <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1064-1066\">source</a><a href=\"#method.validate_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\" class=\"fn\">validate_result</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>,\n    options: <a class=\"struct\" href=\"exr/image/validate_results/struct.ValidationOptions.html\" title=\"struct exr::image::validate_results::ValidationOptions\">ValidationOptions</a>,\n    location: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"type\" href=\"exr/image/validate_results/type.ValidationResult.html\" title=\"type exr::image::validate_results::ValidationResult\">ValidationResult</a></h4></section></summary><div class='docblock'>Compare self with the other.\nExceptional behaviour: <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_equals_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#899-901\">source</a><a href=\"#method.assert_equals_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\" class=\"fn\">assert_equals_result</a>(&amp;self, result: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Compare self with the other. Panics if not equal. <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\">Read more</a></div></details></div></details>","ValidateResult","exr::image::RgbaChannels"]],
"html5ever":[],
"hyper":[],
"icu_list":[],
"itertools":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasCombination%3CI%3E-for-(A,+A)\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/adaptors/mod.rs.html#813\">source</a><a href=\"#impl-HasCombination%3CI%3E-for-(A,+A)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"itertools/adaptors/trait.HasCombination.html\" title=\"trait itertools::adaptors::HasCombination\">HasCombination</a>&lt;I&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, A)</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = A&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Combination\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Combination\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"itertools/adaptors/trait.HasCombination.html#associatedtype.Combination\" class=\"associatedtype\">Combination</a> = <a class=\"struct\" href=\"itertools/adaptors/struct.Tuple2Combination.html\" title=\"struct itertools::adaptors::Tuple2Combination\">Tuple2Combination</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;I&gt;&gt;</h4></section></div></details>","HasCombination<I>","itertools::size_hint::SizeHint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TupleCollect-for-(A,+A)\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#401\">source</a><a href=\"#impl-TupleCollect-for-(A,+A)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"itertools/tuple_impl/trait.TupleCollect.html\" title=\"trait itertools::tuple_impl::TupleCollect\">TupleCollect</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, A)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"itertools/tuple_impl/trait.TupleCollect.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = A</h4></section><section id=\"associatedtype.Buffer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Buffer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"itertools/tuple_impl/trait.TupleCollect.html#associatedtype.Buffer\" class=\"associatedtype\">Buffer</a> = [<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;A&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">1</a>]</h4></section><section id=\"method.collect_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#401\">source</a><a href=\"#method.collect_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/tuple_impl/trait.TupleCollect.html#tymethod.collect_from_iter\" class=\"fn\">collect_from_iter</a>&lt;I&gt;(iter: I, buf: &amp;mut Self::<a class=\"associatedtype\" href=\"itertools/tuple_impl/trait.TupleCollect.html#associatedtype.Buffer\" title=\"type itertools::tuple_impl::TupleCollect::Buffer\">Buffer</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A&gt;,</div></h4></section><section id=\"method.collect_from_iter_no_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#401\">source</a><a href=\"#method.collect_from_iter_no_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/tuple_impl/trait.TupleCollect.html#tymethod.collect_from_iter_no_buf\" class=\"fn\">collect_from_iter_no_buf</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A&gt;,</div></h4></section><section id=\"method.num_items\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#401\">source</a><a href=\"#method.num_items\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/tuple_impl/trait.TupleCollect.html#tymethod.num_items\" class=\"fn\">num_items</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.left_shift_push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#401\">source</a><a href=\"#method.left_shift_push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/tuple_impl/trait.TupleCollect.html#tymethod.left_shift_push\" class=\"fn\">left_shift_push</a>(&amp;mut self, item: A)</h4></section><section id=\"method.buffer_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/tuple_impl.rs.html#310-313\">source</a><a href=\"#method.buffer_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/tuple_impl/trait.TupleCollect.html#method.buffer_len\" class=\"fn\">buffer_len</a>(buf: &amp;Self::<a class=\"associatedtype\" href=\"itertools/tuple_impl/trait.TupleCollect.html#associatedtype.Buffer\" title=\"type itertools::tuple_impl::TupleCollect::Buffer\">Buffer</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></div></details>","TupleCollect","itertools::size_hint::SizeHint"]],
"layout_2020":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","layout_2020::display_list::ItemTag"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","layout_2020::display_list::ItemTag"]],
"markup5ever":[],
"naga":[],
"net":[],
"rustls":[],
"script":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#316\">source</a><a href=\"#impl-Trace-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,\n    B: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#316\">source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/trait.JSTraceable.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;self, trc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSTracer.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSTracer\">JSTracer</a>)</h4></section></summary><div class='docblock'>Trace <code>self</code>.</div></details></div></details>","Traceable","script::script_thread::ImageCacheMsg"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace-for-(A,+B,+C,+D,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#319\">source</a><a href=\"#impl-Trace-for-(A,+B,+C,+D,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E&gt; <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B, C, D, E)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,\n    B: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,\n    C: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,\n    D: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,\n    E: <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#319\">source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/trait.JSTraceable.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;self, trc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSTracer.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSTracer\">JSTracer</a>)</h4></section></summary><div class='docblock'>Trace <code>self</code>.</div></details></div></details>","Traceable","script::task_queue::QueuedTask"]],
"sctk_adwaita":[],
"serde_derive":[],
"servo_media_player":[],
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToComputedValue-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#513-538\">source</a><a href=\"#impl-ToComputedValue-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>,\n    B: <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ComputedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ComputedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" class=\"associatedtype\">ComputedValue</a> = (&lt;A as <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>, &lt;B as <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>)</h4></section></summary><div class='docblock'>The computed value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#524-529\">source</a><a href=\"#method.to_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.to_computed_value\" class=\"fn\">to_computed_value</a>(&amp;self, context: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Context.html\" title=\"struct style::values::computed::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a></h4></section></summary><div class='docblock'>Convert a specified value to a computed value, using itself and the data\ninside the <code>Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#532-537\">source</a><a href=\"#method.from_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\" class=\"fn\">from_computed_value</a>(computed: &amp;Self::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a computed value to specified value form. <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\">Read more</a></div></details></div></details>","ToComputedValue","style::piecewise_linear::PiecewiseLinearFunctionBuildParameters"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#121-146\">source</a><a href=\"#impl-ToResolvedValue-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a>,\n    B: <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = (&lt;A as <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>, &lt;B as <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>)</h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#132-137\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a></h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#140-145\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(resolved: Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","style::piecewise_linear::PiecewiseLinearFunctionBuildParameters"]],
"warp":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T10, T11, T12, T13, T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T11, T12, T13, T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T12, T13, T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T13, T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T16,)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T16,)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T16,)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T16,)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T16,)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>,\n) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T8, T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Func%3C(T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Func%3C(T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, R, T9, T10, T11, T12, T13, T14, T15, T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Func.html\" title=\"trait warp::generic::Func\">Func</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Func.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = R</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Func.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T9, T10, T11, T12, T13, T14, T15, T16)</a>) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Func.html#associatedtype.Output\" title=\"type warp::generic::Func::Output\">Output</a></h4></section></div></details>","Func<(T9, T10, T11, T12, T13, T14, T15, T16)>","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OneOrTuple-for-(T16,)\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/test.rs.html#745-762\">source</a><a href=\"#impl-OneOrTuple-for-(T16,)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T16&gt; <a class=\"trait\" href=\"warp/test/inner/trait.OneOrTuple.html\" title=\"trait warp::test::inner::OneOrTuple\">OneOrTuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T16,)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/test/inner/trait.OneOrTuple.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T16</h4></section><section id=\"method.one_or_tuple\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/test.rs.html#745-762\">source</a><a href=\"#method.one_or_tuple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/test/inner/trait.OneOrTuple.html#tymethod.one_or_tuple\" class=\"fn\">one_or_tuple</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"warp/test/inner/trait.OneOrTuple.html#associatedtype.Output\" title=\"type warp::test::inner::OneOrTuple::Output\">Output</a></h4></section></div></details>","OneOrTuple","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reply-for-(T,)\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/reply.rs.html#495-503\">source</a><a href=\"#impl-Reply-for-(T,)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"warp/reply/trait.Reply.html\" title=\"trait warp::reply::Reply\">Reply</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T,)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"warp/reply/trait.Reply.html\" title=\"trait warp::reply::Reply\">Reply</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/reply.rs.html#500-502\">source</a><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/reply/trait.Reply.html#tymethod.into_response\" class=\"fn\">into_response</a>(self) -&gt; <a class=\"type\" href=\"warp/reply/type.Response.html\" title=\"type warp::reply::Response\">Response</a></h4></section></summary><div class='docblock'>Converts the given value into a <a href=\"type.Response.html\"><code>Response</code></a>.</div></details></div></details>","Reply","warp::generic::One"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple-for-(T16,)\" class=\"impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#impl-Tuple-for-(T16,)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T16&gt; <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T16,)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.HList\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.HList\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" class=\"associatedtype\">HList</a> = <a class=\"struct\" href=\"warp/generic/struct.Product.html\" title=\"struct warp::generic::Product\">Product</a>&lt;T16, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.hlist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#233-250\">source</a><a href=\"#method.hlist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Tuple.html#tymethod.hlist\" class=\"fn\">hlist</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a></h4></section><section id=\"method.combine\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/warp/generic.rs.html#31-38\">source</a><a href=\"#method.combine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"warp/generic/trait.Tuple.html#method.combine\" class=\"fn\">combine</a>&lt;T&gt;(\n    self,\n    other: T,\n) -&gt; &lt;&lt;&lt;Self as <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>&gt;::<a class=\"associatedtype\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a> as <a class=\"trait\" href=\"warp/generic/trait.Combine.html\" title=\"trait warp::generic::Combine\">Combine</a>&lt;&lt;T as <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>&gt;::<a class=\"associatedtype\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a>&gt;&gt;::<a class=\"associatedtype\" href=\"warp/generic/trait.Combine.html#associatedtype.Output\" title=\"type warp::generic::Combine::Output\">Output</a> as <a class=\"trait\" href=\"warp/generic/trait.HList.html\" title=\"trait warp::generic::HList\">HList</a>&gt;::<a class=\"associatedtype\" href=\"warp/generic/trait.HList.html#associatedtype.Tuple\" title=\"type warp::generic::HList::Tuple\">Tuple</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    T: <a class=\"trait\" href=\"warp/generic/trait.Tuple.html\" title=\"trait warp::generic::Tuple\">Tuple</a>,\n    Self::<a class=\"associatedtype\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a>: <a class=\"trait\" href=\"warp/generic/trait.Combine.html\" title=\"trait warp::generic::Combine\">Combine</a>&lt;T::<a class=\"associatedtype\" href=\"warp/generic/trait.Tuple.html#associatedtype.HList\" title=\"type warp::generic::Tuple::HList\">HList</a>&gt;,</div></h4></section></div></details>","Tuple","warp::generic::One"]],
"wayland_backend":[],
"webrender_api":[],
"wgpu_core":[],
"wgpu_hal":[],
"winit":[],
"x11rb":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-Serialize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>,\n    B: <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a> as <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb::connection::BufWithFds","x11rb::connection::EventAndSeqNumber","x11rb::connection::RawEventAndSeqNumber","x11rb::rust_connection::stream::PeerAddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-TryParse-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a>,\n    B: <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(remaining: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb/rust_connection/enum.ParseError.html\" title=\"enum x11rb::rust_connection::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb::connection::BufWithFds","x11rb::connection::EventAndSeqNumber","x11rb::connection::RawEventAndSeqNumber","x11rb::rust_connection::stream::PeerAddr"]],
"x11rb_protocol":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-Serialize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a>,\n    B: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb_protocol::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb_protocol::xauth::AuthInfo","x11rb_protocol::BufWithFds","x11rb_protocol::RawEventAndSeqNumber"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#impl-TryParse-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a>,\n    B: <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#518\">source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(remaining: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(A, B)</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb_protocol/errors/enum.ParseError.html\" title=\"enum x11rb_protocol::errors::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb_protocol::xauth::AuthInfo","x11rb_protocol::BufWithFds","x11rb_protocol::RawEventAndSeqNumber"]],
"xml5ever":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()