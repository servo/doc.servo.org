(function() {var type_impls = {
"script":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3093-3145\">source</a><a href=\"#impl-AsBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.AsBytes.html\" title=\"trait zerocopy::AsBytes\">AsBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2720\">source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a href=\"zerocopy/trait.AsBytes.html#method.as_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2871\">source</a><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to\" class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2928\">source</a><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\" class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_prefix\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#2989\">source</a><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\" class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a href=\"zerocopy/trait.AsBytes.html#method.write_to_suffix\">Read more</a></div></details></div></details>","AsBytes","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#770\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#353\">source</a><a href=\"#impl-AsULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#356\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#360\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(unaligned: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#515-518\">source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#523\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#178\">source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#178\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#726\">source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#726\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#554-557\">source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#562\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#278\">source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#278\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#797\">source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#797\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#593-596\">source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/portable-simd/crates/core_simd/src/masks.rs.html#601\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#378\">source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#378\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#868\">source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#868\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#161\">source</a><a href=\"#impl-CheckedBitPattern-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" title=\"associated function bytemuck::checked::CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/checked.rs.html#165\">source</a><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/checked/trait.CheckedBitPattern.html#tymethod.is_valid_bit_pattern\" class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"bytemuck/checked/trait.CheckedBitPattern.html\" title=\"trait bytemuck::checked::CheckedBitPattern\">CheckedBitPattern</a>&gt;::<a class=\"associatedtype\" href=\"bytemuck/checked/trait.CheckedBitPattern.html#associatedtype.Bits\" title=\"type bytemuck::checked::CheckedBitPattern::Bits\">Bits</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#183-206\">source</a><a href=\"#impl-Contiguous-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/contiguous/trait.Contiguous.html\" title=\"trait bytemuck::contiguous::Contiguous\">Contiguous</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#183-206\">source</a><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MAX_VALUE\" class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#183-206\">source</a><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"bytemuck/contiguous/trait.Contiguous.html#associatedconstant.MIN_VALUE\" class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#122\">source</a><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\" class=\"fn\">from_integer</a>(value: Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.from_integer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/contiguous.rs.html#158\">source</a><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\" class=\"fn\">into_integer</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"bytemuck/contiguous/trait.Contiguous.html#associatedtype.Int\" title=\"type bytemuck::contiguous::Contiguous::Int\">Int</a></h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a href=\"bytemuck/contiguous/trait.Contiguous.html#method.into_integer\">Read more</a></div></details></div></details>","Contiguous","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/fmt/mod.rs.html#2383\">source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/fmt/mod.rs.html#2385\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/default.rs.html#163\">source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/default.rs.html#163\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#71\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#72-74\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/fmt/mod.rs.html#2391\">source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/fmt/mod.rs.html#2392\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FmtConst-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#153\">source</a><a href=\"#impl-FmtConst-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.FmtConst.html\" title=\"trait phf_shared::FmtConst\">FmtConst</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_const\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#153\">source</a><a href=\"#method.fmt_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.FmtConst.html#tymethod.fmt_const\" class=\"fn\">fmt_const</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Print a <code>const</code> expression representing this value.</div></details></div></details>","FmtConst","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FmtConst-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#159\">source</a><a href=\"#impl-FmtConst-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.FmtConst.html\" title=\"trait phf_shared::FmtConst\">FmtConst</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_const\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#159\">source</a><a href=\"#method.fmt_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.FmtConst.html#tymethod.fmt_const\" class=\"fn\">fmt_const</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Print a <code>const</code> expression representing this value.</div></details></div></details>","FmtConst","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventBubbles%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/script/dom/event.rs.html#536-543\">source</a><a href=\"#impl-From%3CEventBubbles%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"script/dom/event/enum.EventBubbles.html\" title=\"enum script::dom::event::EventBubbles\">EventBubbles</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/script/dom/event.rs.html#537-542\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bubbles: <a class=\"enum\" href=\"script/dom/event/enum.EventBubbles.html\" title=\"enum script::dom::event::EventBubbles\">EventBubbles</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventBubbles>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventCancelable%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/script/dom/event.rs.html#561-568\">source</a><a href=\"#impl-From%3CEventCancelable%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"script/dom/event/enum.EventCancelable.html\" title=\"enum script::dom::event::EventCancelable\">EventCancelable</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/script/dom/event.rs.html#562-567\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bubbles: <a class=\"enum\" href=\"script/dom/event/enum.EventCancelable.html\" title=\"enum script::dom::event::EventCancelable\">EventCancelable</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventCancelable>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHourBase%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CHourBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.HourBase.html\" title=\"enum time::format_description::parse::format_item::HourBase\">HourBase</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.HourBase.html\" title=\"enum time::format_description::parse::format_item::HourBase\">HourBase</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HourBase>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.MonthCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::MonthCaseSensitive\">MonthCaseSensitive</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.MonthCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::MonthCaseSensitive\">MonthCaseSensitive</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MonthCaseSensitive>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCase%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CPeriodCase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.PeriodCase.html\" title=\"enum time::format_description::parse::format_item::PeriodCase\">PeriodCase</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.PeriodCase.html\" title=\"enum time::format_description::parse::format_item::PeriodCase\">PeriodCase</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCase>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.PeriodCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::PeriodCaseSensitive\">PeriodCaseSensitive</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.PeriodCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::PeriodCaseSensitive\">PeriodCaseSensitive</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCaseSensitive>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPrefValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/servo_config/pref_util.rs.html#143-148\">source</a><a href=\"#impl-From%3CPrefValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"servo_config/pref_util/enum.PrefValue.html\" title=\"enum servo_config::pref_util::PrefValue\">PrefValue</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/servo_config/pref_util.rs.html#143-148\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"enum\" href=\"servo_config/pref_util/enum.PrefValue.html\" title=\"enum servo_config::pref_util::PrefValue\">PrefValue</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PrefValue>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignBehavior%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CSignBehavior%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.SignBehavior.html\" title=\"enum time::format_description::parse::format_item::SignBehavior\">SignBehavior</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.SignBehavior.html\" title=\"enum time::format_description::parse::format_item::SignBehavior\">SignBehavior</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SignBehavior>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.WeekdayCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::WeekdayCaseSensitive\">WeekdayCaseSensitive</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.WeekdayCaseSensitive.html\" title=\"enum time::format_description::parse::format_item::WeekdayCaseSensitive\">WeekdayCaseSensitive</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayCaseSensitive>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.WeekdayOneIndexed.html\" title=\"enum time::format_description::parse::format_item::WeekdayOneIndexed\">WeekdayOneIndexed</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.WeekdayOneIndexed.html\" title=\"enum time::format_description::parse::format_item::WeekdayOneIndexed\">WeekdayOneIndexed</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayOneIndexed>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CYearBase%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#impl-From%3CYearBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"time/format_description/parse/format_item/enum.YearBase.html\" title=\"enum time::format_description::parse::format_item::YearBase\">YearBase</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/time/format_description/parse/format_item.rs.html#421-526\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: <a class=\"enum\" href=\"time/format_description/parse/format_item/enum.YearBase.html\" title=\"enum time::format_description::parse::format_item::YearBase\">YearBase</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<YearBase>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromJSValConvertible-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/conversions.rs.html#292\">source</a><a href=\"#impl-FromJSValConvertible-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html\" title=\"trait script::dom::bindings::import::base::FromJSValConvertible\">FromJSValConvertible</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Config\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Config\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html#associatedtype.Config\" class=\"associatedtype\">Config</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Optional configurable behaviour switch; use () for no configuration.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_jsval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/conversions.rs.html#294-298\">source</a><a href=\"#method.from_jsval\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html#tymethod.from_jsval\" class=\"fn\">from_jsval</a>(\n    _cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSContext.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSContext\">JSContext</a>,\n    val: <a class=\"struct\" href=\"script/dom/bindings/import/module/struct.Handle.html\" title=\"struct script::dom::bindings::import::module::Handle\">Handle</a>&lt;'_, <a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/JS/struct.Value.html\" title=\"struct script::dom::bindings::import::module::jsapi::JS::Value\">Value</a>&gt;,\n    _option: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"script/dom/bindings/import/base/enum.ConversionResult.html\" title=\"enum script::dom::bindings::import::base::ConversionResult\">ConversionResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Convert <code>val</code> to type <code>Self</code>.\nOptional configuration of type <code>T</code> can be passed as the <code>option</code>\nargument.\nIf it returns <code>Err(())</code>, a JSAPI exception is pending.\nIf it returns <code>Ok(Failure(reason))</code>, there is no pending JSAPI exception.</div></details></div></details>","FromJSValConvertible","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/str/traits.rs.html#641\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/str/traits.rs.html#667\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3093-3145\">source</a><a href=\"#impl-FromZeroes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.FromZeroes.html\" title=\"trait zerocopy::FromZeroes\">FromZeroes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#1425\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.FromZeroes.html#method.zero\" class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a href=\"zerocopy/trait.FromZeroes.html#method.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#1465-1467\">source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerocopy/trait.FromZeroes.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a href=\"zerocopy/trait.FromZeroes.html#method.new_zeroed\">Read more</a></div></details></div></details>","FromZeroes","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#852\">source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#854\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/value.rs.html#293\">source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"serde/de/trait.IntoDeserializer.html\" title=\"trait serde::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"serde/de/trait.Error.html\" title=\"trait serde::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"serde/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/value.rs.html#293\">source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#847\">source</a><a href=\"#impl-MallocSizeOf-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#847\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#431\">source</a><a href=\"#impl-MallocSizeOf-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#431\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wr_malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"wr_malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct wr_malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#68\">source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/ops/bit.rs.html#68\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1593\">source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/cmp/trait.Ord.html\" title=\"trait script::dom::bindings::import::module::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1595\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"script/dom/bindings/import/module/cmp/enum.Ordering.html\" title=\"enum script::dom::bindings::import::module::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"script/dom/bindings/import/module/cmp/enum.Ordering.html\" title=\"enum script::dom::bindings::import::module::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1609\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1614\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1619\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"script/dom/bindings/import/module/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#impl-PartialEq%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html\" title=\"trait script::dom::bindings::import::module::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde_json/value/partial_eq.rs.html#97-103\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1500-1502\">source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html\" title=\"trait script::dom::bindings::import::module::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1547\">source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html\" title=\"trait script::dom::bindings::import::module::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1549\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"script/dom/bindings/import/module/cmp/enum.Ordering.html\" title=\"enum script::dom::bindings::import::module::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"script/dom/bindings/import/module/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peek-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/lib.rs.html#308\">source</a><a href=\"#impl-Peek-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"peek_poke/trait.Peek.html\" title=\"trait peek_poke::Peek\">Peek</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/lib.rs.html#310\">source</a><a href=\"#method.peek_from\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\" class=\"fn\">peek_from</a>(bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Deserialize from the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\">Read more</a></div></details></div></details>","Peek","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#166-181\">source</a><a href=\"#impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfBorrow.html\" title=\"trait phf_shared::PhfBorrow\">PhfBorrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#166-181\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfBorrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a reference to <code>self</code> to a reference to the borrowed type.</div></details></div></details>","PhfBorrow<bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#172-189\">source</a><a href=\"#impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfBorrow.html\" title=\"trait phf_shared::PhfBorrow\">PhfBorrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#172-189\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfBorrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a reference to <code>self</code> to a reference to the borrowed type.</div></details></div></details>","PhfBorrow<bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfHash-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#353\">source</a><a href=\"#impl-PhfHash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfHash.html\" title=\"trait phf_shared::PhfHash\">PhfHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#353\">source</a><a href=\"#method.phf_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#tymethod.phf_hash\" class=\"fn\">phf_hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds the value into the state given, updating the hasher as necessary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#68-70\">source</a><a href=\"#method.phf_hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#method.phf_hash_slice\" class=\"fn\">phf_hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the state provided.</div></details></div></details>","PhfHash","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfHash-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#363\">source</a><a href=\"#impl-PhfHash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"phf_shared/trait.PhfHash.html\" title=\"trait phf_shared::PhfHash\">PhfHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#363\">source</a><a href=\"#method.phf_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#tymethod.phf_hash\" class=\"fn\">phf_hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds the value into the state given, updating the hasher as necessary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/phf_shared/lib.rs.html#72-74\">source</a><a href=\"#method.phf_hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"phf_shared/trait.PhfHash.html#method.phf_hash_slice\" class=\"fn\">phf_hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the state provided.</div></details></div></details>","PhfHash","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Poke-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/lib.rs.html#297\">source</a><a href=\"#impl-Poke-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"peek_poke/trait.Poke.html\" title=\"trait peek_poke::Poke\">Poke</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/lib.rs.html#299\">source</a><a href=\"#method.max_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\" class=\"fn\">max_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum number of bytes that the serialized version of <code>Self</code>\nwill occupy. <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poke_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/lib.rs.html#303\">source</a><a href=\"#method.poke_into\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\" class=\"fn\">poke_into</a>(&amp;self, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Serialize into the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\">Read more</a></div></details></div></details>","Poke","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#21\">source</a><a href=\"#impl-Serialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#21\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SmartDisplay-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/powerfmt/smart_display_impls.rs.html#36\">source</a><a href=\"#impl-SmartDisplay-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"powerfmt/smart_display/trait.SmartDisplay.html\" title=\"trait powerfmt::smart_display::SmartDisplay\">SmartDisplay</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#associatedtype.Metadata\" class=\"associatedtype\">Metadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>User-provided metadata type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/powerfmt/smart_display_impls.rs.html#40\">source</a><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#tymethod.metadata\" class=\"fn\">metadata</a>(&amp;self, _: <a class=\"struct\" href=\"powerfmt/smart_display/struct.FormatterOptions.html\" title=\"struct powerfmt::smart_display::FormatterOptions\">FormatterOptions</a>) -&gt; <a class=\"struct\" href=\"powerfmt/smart_display/struct.Metadata.html\" title=\"struct powerfmt::smart_display::Metadata\">Metadata</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Compute any information needed to format the value. This must, at a minimum, determine the\nwidth of the value before any padding is added by the formatter. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#tymethod.metadata\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/powerfmt/smart_display_impls.rs.html#45\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter. This is the same as <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" title=\"method core::fmt::Display::fmt\"><code>Display::fmt</code></a>. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_with_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/powerfmt/smart_display.rs.html#682\">source</a><a href=\"#method.fmt_with_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt_with_metadata\" class=\"fn\">fmt_with_metadata</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    _metadata: <a class=\"struct\" href=\"powerfmt/smart_display/struct.Metadata.html\" title=\"struct powerfmt::smart_display::Metadata\">Metadata</a>&lt;'_, Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter and metadata. The formatted output should have\nthe width indicated by the metadata. This is before any padding is added by the\nformatter. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt_with_metadata\">Read more</a></div></details></div></details>","SmartDisplay","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpecifiedValueInfo-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/style_traits/specified_value_info.rs.html#79\">source</a><a href=\"#impl-SpecifiedValueInfo-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html\" title=\"trait style_traits::specified_value_info::SpecifiedValueInfo\">SpecifiedValueInfo</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTED_TYPES\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/specified_value_info.rs.html#67\">source</a><a href=\"#associatedconstant.SUPPORTED_TYPES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#associatedconstant.SUPPORTED_TYPES\" class=\"constant\">SUPPORTED_TYPES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>Supported CssTypes by the given value type. <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#associatedconstant.SUPPORTED_TYPES\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_completion_keywords\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/specified_value_info.rs.html#76\">source</a><a href=\"#method.collect_completion_keywords\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#method.collect_completion_keywords\" class=\"fn\">collect_completion_keywords</a>(_f: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>]))</h4></section></summary><div class='docblock'>Collect value starting words for the given specified value type.\nThis includes keyword and function names which can appear at the\nbeginning of a value of this type. <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#method.collect_completion_keywords\">Read more</a></div></details></div></details>","SpecifiedValueInfo","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#402\">source</a><a href=\"#impl-ToAnimatedValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#402\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, _: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#402\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(\n    animated: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details></div></details>","ToAnimatedValue","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToComputedValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#712\">source</a><a href=\"#impl-ToComputedValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ComputedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ComputedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" class=\"associatedtype\">ComputedValue</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The computed value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#712\">source</a><a href=\"#method.to_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.to_computed_value\" class=\"fn\">to_computed_value</a>(&amp;self, _: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Context.html\" title=\"struct style::values::computed::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a specified value to a computed value, using itself and the data\ninside the <code>Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#712\">source</a><a href=\"#method.from_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\" class=\"fn\">from_computed_value</a>(other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a computed value to specified value form. <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\">Read more</a></div></details></div></details>","ToComputedValue","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJSValConvertible-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/conversions.rs.html#284\">source</a><a href=\"#impl-ToJSValConvertible-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/trait.ToJSValConvertible.html\" title=\"trait script::dom::bindings::import::module::ToJSValConvertible\">ToJSValConvertible</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_jsval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/conversions.rs.html#286\">source</a><a href=\"#method.to_jsval\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/dom/bindings/import/module/trait.ToJSValConvertible.html#tymethod.to_jsval\" class=\"fn\">to_jsval</a>(&amp;self, _cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSContext.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSContext\">JSContext</a>, rval: <a class=\"struct\" href=\"script/dom/bindings/import/module/struct.MutableHandle.html\" title=\"struct script::dom::bindings::import::module::MutableHandle\">MutableHandle</a>&lt;'_, <a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/JS/struct.Value.html\" title=\"struct script::dom::bindings::import::module::jsapi::JS::Value\">Value</a>&gt;)</h4></section></summary><div class='docblock'>Convert <code>self</code> to a <code>JSVal</code>. JSAPI failure causes a panic.</div></details></div></details>","ToJSValConvertible","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#79\">source</a><a href=\"#impl-ToResolvedValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#79\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, _: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#79\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(\n    resolved: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToShmem-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/to_shmem/lib.rs.html#189-205\">source</a><a href=\"#impl-ToShmem-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"to_shmem/trait.ToShmem.html\" title=\"trait to_shmem::ToShmem\">ToShmem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_shmem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/to_shmem/lib.rs.html#189-205\">source</a><a href=\"#method.to_shmem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\" class=\"fn\">to_shmem</a>(\n    &amp;self,\n    _builder: &amp;mut <a class=\"struct\" href=\"to_shmem/struct.SharedMemoryBuilder.html\" title=\"struct to_shmem::SharedMemoryBuilder\">SharedMemoryBuilder</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/mem/manually_drop/struct.ManuallyDrop.html\" title=\"struct core::mem::manually_drop::ManuallyDrop\">ManuallyDrop</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Clones this value into a form suitable for writing into a\nSharedMemoryBuilder. <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\">Read more</a></div></details></div></details>","ToShmem","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#401\">source</a><a href=\"#impl-Trace-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#401\">source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/trait.JSTraceable.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSTracer.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSTracer\">JSTracer</a>)</h4></section></summary><div class='docblock'>Trace <code>self</code>.</div></details></div></details>","Traceable","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ULE-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#339\">source</a><a href=\"#impl-ULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerovec/ule/trait.ULE.html\" title=\"trait zerovec::ule::ULE\">ULE</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#341\">source</a><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#tymethod.validate_byte_slice\" class=\"fn\">validate_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a href=\"zerovec/ule/trait.ULE.html#tymethod.validate_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#101\">source</a><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\" class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime. <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#132\">source</a><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"zerovec/ule/trait.ULE.html#method.from_byte_slice_unchecked\" class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a></h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime, assuming\nthat this byte slice has previously been run through <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\" title=\"associated function zerovec::ule::ULE::parse_byte_slice::parse_byte_slice\"><code>Self::parse_byte_slice()</code></a> with\nsuccess. <a href=\"zerovec/ule/trait.ULE.html#method.from_byte_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#151\">source</a><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#method.as_byte_slice\" class=\"fn\">as_byte_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;[Self]</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a href=\"zerovec/ule/trait.ULE.html#method.as_byte_slice\">Read more</a></div></details></div></details>","ULE","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#impl-Value-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"tracing_core/field/trait.Value.html\" title=\"trait tracing_core::field::Value\">Value</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tracing_core/field.rs.html#517-526\">source</a><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tracing_core/field/trait.Value.html#tymethod.record\" class=\"fn\">record</a>(&amp;self, key: &amp;<a class=\"struct\" href=\"tracing_core/field/struct.Field.html\" title=\"struct tracing_core::field::Field\">Field</a>, visitor: &amp;mut dyn <a class=\"trait\" href=\"tracing_core/field/trait.Visit.html\" title=\"trait tracing_core::field::Visit\">Visit</a>)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/yoke/macro_impls.rs.html#57\">source</a><a href=\"#impl-Yokeable%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/yoke/macro_impls.rs.html#57\">source</a><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform\" class=\"fn\">transform</a>(&amp;self) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/yoke/macro_impls.rs.html#57\">source</a><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\" class=\"fn\">transform_owned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/yoke/macro_impls.rs.html#57\">source</a><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.make\" class=\"fn\">make</a>(this: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.make\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/yoke/macro_impls.rs.html#57\">source</a><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\" class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"yoke/yokeable/trait.Yokeable.html\" title=\"trait yoke::yokeable::Yokeable\">Yokeable</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"yoke/yokeable/trait.Yokeable.html#associatedtype.Output\" title=\"type yoke::yokeable::Yokeable::Output\">Output</a>),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a href=\"yoke/yokeable/trait.Yokeable.html#tymethod.transform_mut\">Read more</a></div></details></div></details>","Yokeable<'a>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerofrom/macro_impls.rs.html#36\">source</a><a href=\"#impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"zerofrom/zero_from/trait.ZeroFrom.html\" title=\"trait zerofrom::zero_from::ZeroFrom\">ZeroFrom</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerofrom/macro_impls.rs.html#36\">source</a><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerofrom/zero_from/trait.ZeroFrom.html#tymethod.zero_from\" class=\"fn\">zero_from</a>(this: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'a, bool>","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable.rs.html#37\">source</a><a href=\"#impl-Zeroable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/zeroable/trait.Zeroable.html\" title=\"trait bytemuck::zeroable::Zeroable\">Zeroable</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable.rs.html#32\">source</a><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.80.1/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\">Read more</a></div></details></div></details>","Zeroable","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/bool.rs.html#3\">source</a><a href=\"#impl-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.62.0\">1.62.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/bool.rs.html#33\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html#tymethod.then_some\" class=\"fn\">then_some</a>&lt;T&gt;(self, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(t)</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<p>Arguments passed to <code>then_some</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html#method.then\" title=\"method bool::then\"><code>then</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"bool-val\">true</span>.then_some(function_with_side_effects());\n<span class=\"bool-val\">false</span>.then_some(function_with_side_effects());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `then_some` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/bool.rs.html#59\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html#tymethod.then\" class=\"fn\">then</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(f())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"bool-val\">true</span>.then(|| { a += <span class=\"number\">1</span>; });\n<span class=\"bool-val\">false</span>.then(|| { a += <span class=\"number\">1</span>; });\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `then`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details></div></details>",0,"script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-ConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/marker.rs.html#992-1003\">source</a><a href=\"#impl-ConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.ConstParamTy.html\" title=\"trait core::marker::ConstParamTy\">ConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/marker.rs.html#420-430\">source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","Copy","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1511\">source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"script/dom/bindings/import/module/cmp/trait.Eq.html\" title=\"trait script::dom::bindings::import::module::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","Eq","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-EqULE-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/plain.rs.html#366\">source</a><a href=\"#impl-EqULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerovec/ule/trait.EqULE.html\" title=\"trait zerovec::ule::EqULE\">EqULE</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","EqULE","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-NoUninit-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/bytemuck/no_uninit.rs.html#67\">source</a><a href=\"#impl-NoUninit-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/no_uninit/trait.NoUninit.html\" title=\"trait bytemuck::no_uninit::NoUninit\">NoUninit</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","NoUninit","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.1/src/core/marker.rs.html#214-226\">source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/lib.rs.html#3093-3145\">source</a><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::GLboolean"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()