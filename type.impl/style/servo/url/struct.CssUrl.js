(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-Clone-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#50-130\">source</a><a href=\"#impl-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_from_string\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#55-62\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.parse_from_string\" class=\"fn\">parse_from_string</a>(\n    url: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n    context: &amp;<a class=\"struct\" href=\"style/parser/struct.ParserContext.html\" title=\"struct style::parser::ParserContext\">ParserContext</a>&lt;'_&gt;,\n    _: <a class=\"enum\" href=\"style/stylesheets/enum.CorsMode.html\" title=\"enum style::stylesheets::CorsMode\">CorsMode</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Try to parse a URL from a string value that is a valid CSS token for a\nURL.</p>\n<p>FIXME(emilio): Should honor CorsMode.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_invalid\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#66-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.is_invalid\" class=\"fn\">is_invalid</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the URL is definitely invalid. For Servo URLs, we can\nuse its |resolved| status.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_fragment\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#76-79\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.is_fragment\" class=\"fn\">is_fragment</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if this URL looks like a fragment.\nSee https://drafts.csswg.org/css-values/#local-urls</p>\n<p>Since Servo currently stores resolved URLs, this is hard to implement. We\neither need to change servo to lazily resolve (like Gecko), or note this\ninformation in the tokenizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.url\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#82-84\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.url\" class=\"fn\">url</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"servo_arc/struct.Arc.html\" title=\"struct servo_arc::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the resolved url if it was valid.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#89-94\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.as_str\" class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Return the resolved url as string, or the empty string if it’s invalid.</p>\n<p>TODO(emilio): Should we return the original one if needed?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_cascade\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#98-103\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.for_cascade\" class=\"fn\">for_cascade</a>(url: <a class=\"struct\" href=\"servo_arc/struct.Arc.html\" title=\"struct servo_arc::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"url/struct.Url.html\" title=\"struct url::Url\">Url</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates an already specified url value from an already resolved URL\nfor insertion in the cascade.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_for_testing\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#106-111\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.new_for_testing\" class=\"fn\">new_for_testing</a>(url: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Gets a new url from a string for unit tests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_with_cors_mode\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#118-129\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/url/struct.CssUrl.html#tymethod.parse_with_cors_mode\" class=\"fn\">parse_with_cors_mode</a>&lt;'i, 't&gt;(\n    context: &amp;<a class=\"struct\" href=\"style/parser/struct.ParserContext.html\" title=\"struct style::parser::ParserContext\">ParserContext</a>&lt;'_&gt;,\n    input: &amp;mut <a class=\"struct\" href=\"style/values/struct.Parser.html\" title=\"struct style::values::Parser\">Parser</a>&lt;'i, 't&gt;,\n    cors_mode: <a class=\"enum\" href=\"style/stylesheets/enum.CorsMode.html\" title=\"enum style::stylesheets::CorsMode\">CorsMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"type\" href=\"style_traits/type.ParseError.html\" title=\"type style_traits::ParseError\">ParseError</a>&lt;'i&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a URL request and records that the corresponding request needs to\nbe CORS-enabled.</p>\n<p>This is only for shape images and masks in Gecko, thus unimplemented for\nnow so somebody notices when trying to do so.</p>\n</div></details></div></details>",0,"style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-Debug-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-MallocSizeOf-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parse-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#132-139\">source</a><a href=\"#impl-Parse-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/parser/trait.Parse.html\" title=\"trait style::parser::Parse\">Parse</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#133-138\">source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/parser/trait.Parse.html#tymethod.parse\" class=\"fn\">parse</a>&lt;'i, 't&gt;(\n    context: &amp;<a class=\"struct\" href=\"style/parser/struct.ParserContext.html\" title=\"struct style::parser::ParserContext\">ParserContext</a>&lt;'_&gt;,\n    input: &amp;mut <a class=\"struct\" href=\"style/values/struct.Parser.html\" title=\"struct style::values::Parser\">Parser</a>&lt;'i, 't&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"type\" href=\"style_traits/type.ParseError.html\" title=\"type style_traits::ParseError\">ParseError</a>&lt;'i&gt;&gt;</h4></section></summary><div class='docblock'>Parse a value of this type. <a href=\"style/parser/trait.Parse.html#tymethod.parse\">Read more</a></div></details></div></details>","Parse","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#141-147\">source</a><a href=\"#impl-PartialEq-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#142-146\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-Serialize-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpecifiedValueInfo-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#impl-SpecifiedValueInfo-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html\" title=\"trait style_traits::specified_value_info::SpecifiedValueInfo\">SpecifiedValueInfo</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SUPPORTED_TYPES\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#associatedconstant.SUPPORTED_TYPES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#associatedconstant.SUPPORTED_TYPES\" class=\"constant\">SUPPORTED_TYPES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>Supported CssTypes by the given value type. <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#associatedconstant.SUPPORTED_TYPES\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_completion_keywords\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#28\">source</a><a href=\"#method.collect_completion_keywords\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#method.collect_completion_keywords\" class=\"fn\">collect_completion_keywords</a>(_f: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>]))</h4></section></summary><div class='docblock'>Collect value starting words for the given specified value type.\nThis includes keyword and function names which can appear at the\nbeginning of a value of this type. <a href=\"style_traits/specified_value_info/trait.SpecifiedValueInfo.html#method.collect_completion_keywords\">Read more</a></div></details></div></details>","SpecifiedValueInfo","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToCss-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#151-171\">source</a><a href=\"#impl-ToCss-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/values/trait.ToCss.html\" title=\"trait style_traits::values::ToCss\">ToCss</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#152-170\">source</a><a href=\"#method.to_css\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#tymethod.to_css\" class=\"fn\">to_css</a>&lt;W&gt;(&amp;self, dest: &amp;mut <a class=\"struct\" href=\"style_traits/values/struct.CssWriter.html\" title=\"struct style_traits::values::CssWriter\">CssWriter</a>&lt;'_, W&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a><div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax, writing to <code>dest</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#93\">source</a><a href=\"#method.to_css_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\" class=\"fn\">to_css_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax and return a string. <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\">Read more</a></div></details></div></details>","ToCss","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToShmem-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#44-48\">source</a><a href=\"#impl-ToShmem-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"to_shmem/trait.ToShmem.html\" title=\"trait to_shmem::ToShmem\">ToShmem</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_shmem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#45-47\">source</a><a href=\"#method.to_shmem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\" class=\"fn\">to_shmem</a>(&amp;self, _builder: &amp;mut <a class=\"struct\" href=\"to_shmem/struct.SharedMemoryBuilder.html\" title=\"struct to_shmem::SharedMemoryBuilder\">SharedMemoryBuilder</a>) -&gt; <a class=\"type\" href=\"to_shmem/type.Result.html\" title=\"type to_shmem::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Clones this value into a form suitable for writing into a\nSharedMemoryBuilder. <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\">Read more</a></div></details></div></details>","ToShmem","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"],["<section id=\"impl-Eq-for-CssUrl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/url.rs.html#149\">source</a><a href=\"#impl-Eq-for-CssUrl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"style/servo/url/struct.CssUrl.html\" title=\"struct style::servo::url::CssUrl\">CssUrl</a></h3></section>","Eq","style::servo::url::SpecifiedUrl","style::servo::url::SpecifiedImageUrl"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()