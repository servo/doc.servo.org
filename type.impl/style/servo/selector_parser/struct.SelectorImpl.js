(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#impl-Clone-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::selector_parser::AttrValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#impl-Debug-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::selector_parser::AttrValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#460\">source</a><a href=\"#impl-MallocSizeOf-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#460\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::selector_parser::AttrValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#impl-PartialEq-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::selector_parser::AttrValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SelectorImpl-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#479-491\">source</a><a href=\"#impl-SelectorImpl-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"selectors/parser/trait.SelectorImpl.html\" title=\"trait selectors::parser::SelectorImpl\">SelectorImpl</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PseudoElement\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PseudoElement\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.PseudoElement\" class=\"associatedtype\">PseudoElement</a> = <a class=\"enum\" href=\"style/servo/selector_parser/enum.PseudoElement.html\" title=\"enum style::servo::selector_parser::PseudoElement\">PseudoElement</a></h4></section></summary><div class='docblock'>pseudo-elements</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.NonTSPseudoClass\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NonTSPseudoClass\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.NonTSPseudoClass\" class=\"associatedtype\">NonTSPseudoClass</a> = <a class=\"enum\" href=\"style/servo/selector_parser/enum.NonTSPseudoClass.html\" title=\"enum style::servo::selector_parser::NonTSPseudoClass\">NonTSPseudoClass</a></h4></section></summary><div class='docblock'>non tree-structural pseudo-classes\n(see: https://drafts.csswg.org/selectors/#structural-pseudos)</div></details><section id=\"associatedtype.ExtraMatchingData\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ExtraMatchingData\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.ExtraMatchingData\" class=\"associatedtype\">ExtraMatchingData</a>&lt;'a&gt; = <a class=\"struct\" href=\"style/servo/selector_parser/struct.ExtraMatchingData.html\" title=\"struct style::servo::selector_parser::ExtraMatchingData\">ExtraMatchingData</a>&lt;'a&gt;</h4></section><section id=\"associatedtype.AttrValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AttrValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.AttrValue\" class=\"associatedtype\">AttrValue</a> = <a class=\"struct\" href=\"style/values/struct.AtomString.html\" title=\"struct style::values::AtomString\">AtomString</a></h4></section><section id=\"associatedtype.Identifier\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identifier\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.Identifier\" class=\"associatedtype\">Identifier</a> = <a class=\"struct\" href=\"style/values/struct.GenericAtomIdent.html\" title=\"struct style::values::GenericAtomIdent\">GenericAtomIdent</a>&lt;<a class=\"struct\" href=\"servo_atoms/struct.AtomStaticSet.html\" title=\"struct servo_atoms::AtomStaticSet\">AtomStaticSet</a>&gt;</h4></section><section id=\"associatedtype.LocalName\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LocalName\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.LocalName\" class=\"associatedtype\">LocalName</a> = <a class=\"struct\" href=\"style/values/struct.GenericAtomIdent.html\" title=\"struct style::values::GenericAtomIdent\">GenericAtomIdent</a>&lt;<a class=\"struct\" href=\"markup5ever/struct.LocalNameStaticSet.html\" title=\"struct markup5ever::LocalNameStaticSet\">LocalNameStaticSet</a>&gt;</h4></section><section id=\"associatedtype.NamespacePrefix\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NamespacePrefix\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.NamespacePrefix\" class=\"associatedtype\">NamespacePrefix</a> = <a class=\"struct\" href=\"style/values/struct.GenericAtomIdent.html\" title=\"struct style::values::GenericAtomIdent\">GenericAtomIdent</a>&lt;<a class=\"struct\" href=\"markup5ever/struct.PrefixStaticSet.html\" title=\"struct markup5ever::PrefixStaticSet\">PrefixStaticSet</a>&gt;</h4></section><section id=\"associatedtype.NamespaceUrl\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NamespaceUrl\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.NamespaceUrl\" class=\"associatedtype\">NamespaceUrl</a> = <a class=\"struct\" href=\"style/values/struct.GenericAtomIdent.html\" title=\"struct style::values::GenericAtomIdent\">GenericAtomIdent</a>&lt;<a class=\"struct\" href=\"markup5ever/struct.NamespaceStaticSet.html\" title=\"struct markup5ever::NamespaceStaticSet\">NamespaceStaticSet</a>&gt;</h4></section><section id=\"associatedtype.BorrowedLocalName\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BorrowedLocalName\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.BorrowedLocalName\" class=\"associatedtype\">BorrowedLocalName</a> = <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;<a class=\"struct\" href=\"markup5ever/struct.LocalNameStaticSet.html\" title=\"struct markup5ever::LocalNameStaticSet\">LocalNameStaticSet</a>&gt;</h4></section><section id=\"associatedtype.BorrowedNamespaceUrl\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BorrowedNamespaceUrl\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.BorrowedNamespaceUrl\" class=\"associatedtype\">BorrowedNamespaceUrl</a> = <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;<a class=\"struct\" href=\"markup5ever/struct.NamespaceStaticSet.html\" title=\"struct markup5ever::NamespaceStaticSet\">NamespaceStaticSet</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.should_collect_attr_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/selectors/parser.rs.html#257-260\">source</a><a href=\"#method.should_collect_attr_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"selectors/parser/trait.SelectorImpl.html#method.should_collect_attr_hash\" class=\"fn\">should_collect_attr_hash</a>(_name: &amp;Self::<a class=\"associatedtype\" href=\"selectors/parser/trait.SelectorImpl.html#associatedtype.LocalName\" title=\"type selectors::parser::SelectorImpl::LocalName\">LocalName</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether attribute hashes should be collected for filtering\npurposes.</div></details></div></details>","SelectorImpl","style::selector_parser::AttrValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#684-696\">source</a><a href=\"#impl-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.each_eagerly_cascaded_pseudo_element\" class=\"method\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#688-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/servo/selector_parser/struct.SelectorImpl.html#tymethod.each_eagerly_cascaded_pseudo_element\" class=\"fn\">each_eagerly_cascaded_pseudo_element</a>&lt;F&gt;(fun: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"enum\" href=\"style/servo/selector_parser/enum.PseudoElement.html\" title=\"enum style::servo::selector_parser::PseudoElement\">PseudoElement</a>),</div></h4></section></summary><div class=\"docblock\"><p>A helper to traverse each eagerly cascaded pseudo-element, executing\n<code>fun</code> on it.</p>\n</div></details></div></details>",0,"style::selector_parser::AttrValue"],["<section id=\"impl-StructuralPartialEq-for-SelectorImpl\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/servo/selector_parser.rs.html#459\">source</a><a href=\"#impl-StructuralPartialEq-for-SelectorImpl\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"style/servo/selector_parser/struct.SelectorImpl.html\" title=\"struct style::servo::selector_parser::SelectorImpl\">SelectorImpl</a></h3></section>","StructuralPartialEq","style::selector_parser::AttrValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()