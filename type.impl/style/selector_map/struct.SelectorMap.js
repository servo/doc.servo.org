(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#impl-Clone-for-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#impl-Debug-for-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#138-143\">source</a><a href=\"#impl-Default-for-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#140-142\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#impl-MallocSizeOf-for-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#116\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#145-192\">source</a><a href=\"#impl-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#147-159\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Trivially constructs an empty <code>SelectorMap</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_if_needed\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#162-168\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.shrink_if_needed\" class=\"fn\">shrink_if_needed</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrink the capacity of the map if needed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#171-181\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the hashmap retaining storage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#184-186\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether there are any entries in the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#189-191\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of entries.</p>\n</div></details></div></details>",0,"style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SelectorMap%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#388-678\">source</a><a href=\"#impl-SelectorMap%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"style/selector_map/trait.SelectorMapEntry.html\" title=\"trait style::selector_map::SelectorMapEntry\">SelectorMapEntry</a>&gt; <a class=\"struct\" href=\"style/selector_map/struct.SelectorMap.html\" title=\"struct style::selector_map::SelectorMap\">SelectorMap</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#390-486\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.insert\" class=\"fn\">insert</a>(\n    &amp;mut self,\n    entry: T,\n    quirks_mode: <a class=\"enum\" href=\"style/context/enum.QuirksMode.html\" title=\"enum style::context::QuirksMode\">QuirksMode</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"style/struct.AllocErr.html\" title=\"struct style::AllocErr\">AllocErr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Inserts an entry into the correct bucket(s).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#498-516\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.lookup\" class=\"fn\">lookup</a>&lt;'a, E, F&gt;(\n    &amp;'a self,\n    element: E,\n    quirks_mode: <a class=\"enum\" href=\"style/context/enum.QuirksMode.html\" title=\"enum style::context::QuirksMode\">QuirksMode</a>,\n    relevant_attributes: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"type\" href=\"style/selector_map/type.RelevantAttributes.html\" title=\"type style::selector_map::RelevantAttributes\">RelevantAttributes</a>&gt;,\n    f: F,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"style/dom/trait.TElement.html\" title=\"trait style::dom::TElement\">TElement</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Looks up entries by id, class, local name, namespace, and other (in\norder).</p>\n<p>Each entry is passed to the callback, which returns true to continue\niterating entries, or false to terminate the lookup.</p>\n<p>Returns false if the callback ever returns false.</p>\n<p>FIXME(bholley) This overlaps with SelectorMap<Rule>::get_all_matching_rules,\nbut that function is extremely hot and I’d rather not rearrange it.</p>\n</div></details><section id=\"method.lookup_with_state\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#519-620\">source</a><h4 class=\"code-header\">fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.lookup_with_state\" class=\"fn\">lookup_with_state</a>&lt;'a, E, F&gt;(\n    &amp;'a self,\n    element: E,\n    element_state: <a class=\"struct\" href=\"dom/struct.ElementState.html\" title=\"struct dom::ElementState\">ElementState</a>,\n    quirks_mode: <a class=\"enum\" href=\"style/context/enum.QuirksMode.html\" title=\"enum style::context::QuirksMode\">QuirksMode</a>,\n    relevant_attributes: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"type\" href=\"style/selector_map/type.RelevantAttributes.html\" title=\"type style::selector_map::RelevantAttributes\">RelevantAttributes</a>&gt;,\n    f: F,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"style/dom/trait.TElement.html\" title=\"trait style::dom::TElement\">TElement</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_with_additional\" class=\"method\"><a class=\"src rightside\" href=\"src/style/selector_map.rs.html#630-677\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/selector_map/struct.SelectorMap.html#tymethod.lookup_with_additional\" class=\"fn\">lookup_with_additional</a>&lt;'a, E, F&gt;(\n    &amp;'a self,\n    element: E,\n    quirks_mode: <a class=\"enum\" href=\"style/context/enum.QuirksMode.html\" title=\"enum style::context::QuirksMode\">QuirksMode</a>,\n    additional_id: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"type\" href=\"style/type.Atom.html\" title=\"type style::Atom\">WeakAtom</a>&gt;,\n    additional_classes: &amp;[<a class=\"type\" href=\"style/type.Atom.html\" title=\"type style::Atom\">Atom</a>],\n    additional_states: <a class=\"struct\" href=\"dom/struct.ElementState.html\" title=\"struct dom::ElementState\">ElementState</a>,\n    f: F,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"style/dom/trait.TElement.html\" title=\"trait style::dom::TElement\">TElement</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Performs a normal lookup, and also looks up entries for the passed-in\nid and classes.</p>\n<p>Each entry is passed to the callback, which returns true to continue\niterating entries, or false to terminate the lookup.</p>\n<p>Returns false if the callback ever returns false.</p>\n</div></details></div></details>",0,"style::invalidation::element::invalidation_map::StateDependencyMap","style::invalidation::element::invalidation_map::TSStateDependencyMap"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()