(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-Atom%3CAtomStaticSet%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#399\">source</a><a href=\"#impl-ToAnimatedValue-for-Atom%3CAtomStaticSet%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"type\" href=\"style/type.Atom.html\" title=\"type style::Atom\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;<a class=\"struct\" href=\"servo_atoms/struct.AtomStaticSet.html\" title=\"struct servo_atoms::AtomStaticSet\">AtomStaticSet</a>&gt;</h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#399\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, _: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">Context</a>&lt;'_&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#399\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(animated: Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details></div></details>","ToAnimatedValue","style::custom_properties::Name"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToComputedValue-for-Atom%3CAtomStaticSet%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#719\">source</a><a href=\"#impl-ToComputedValue-for-Atom%3CAtomStaticSet%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a> for <a class=\"type\" href=\"style/type.Atom.html\" title=\"type style::Atom\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ComputedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ComputedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" class=\"associatedtype\">ComputedValue</a> = <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;<a class=\"struct\" href=\"servo_atoms/struct.AtomStaticSet.html\" title=\"struct servo_atoms::AtomStaticSet\">AtomStaticSet</a>&gt;</h4></section></summary><div class='docblock'>The computed value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#719\">source</a><a href=\"#method.to_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.to_computed_value\" class=\"fn\">to_computed_value</a>(&amp;self, _: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Context.html\" title=\"struct style::values::computed::Context\">Context</a>&lt;'_&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert a specified value to a computed value, using itself and the data\ninside the <code>Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#719\">source</a><a href=\"#method.from_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\" class=\"fn\">from_computed_value</a>(other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a computed value to specified value form. <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\">Read more</a></div></details></div></details>","ToComputedValue","style::custom_properties::Name"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-Atom%3CAtomStaticSet%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#93\">source</a><a href=\"#impl-ToResolvedValue-for-Atom%3CAtomStaticSet%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"type\" href=\"style/type.Atom.html\" title=\"type style::Atom\">Atom</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = <a class=\"struct\" href=\"string_cache/atom/struct.Atom.html\" title=\"struct string_cache::atom::Atom\">Atom</a>&lt;<a class=\"struct\" href=\"servo_atoms/struct.AtomStaticSet.html\" title=\"struct servo_atoms::AtomStaticSet\">AtomStaticSet</a>&gt;</h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#93\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, _: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">Context</a>&lt;'_&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#93\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(resolved: Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","style::custom_properties::Name"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()