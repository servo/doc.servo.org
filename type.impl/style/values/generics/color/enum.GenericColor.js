(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-Clone-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-Debug-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#40-82\">source</a><a href=\"#impl-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;<a class=\"struct\" href=\"style/values/computed/percentage/struct.Percentage.html\" title=\"struct style::values::computed::percentage::Percentage\">Percentage</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TRANSPARENT_BLACK\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#42\">source</a><h4 class=\"code-header\">pub const <a href=\"style/values/generics/color/enum.GenericColor.html#associatedconstant.TRANSPARENT_BLACK\" class=\"constant\">TRANSPARENT_BLACK</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>A fully transparent color.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BLACK\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#45\">source</a><h4 class=\"code-header\">pub const <a href=\"style/values/generics/color/enum.GenericColor.html#associatedconstant.BLACK\" class=\"constant\">BLACK</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>An opaque black color.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.WHITE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#48\">source</a><h4 class=\"code-header\">pub const <a href=\"style/values/generics/color/enum.GenericColor.html#associatedconstant.WHITE\" class=\"constant\">WHITE</a>: Self = _</h4></section></summary><div class=\"docblock\"><p>An opaque white color.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_mix\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#52-58\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.from_color_mix\" class=\"fn\">from_color_mix</a>(color_mix: <a class=\"type\" href=\"style/values/computed/color/type.ColorMix.html\" title=\"type style::values::computed::color::ColorMix\">ColorMix</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new computed <a href=\"style/values/computed/color/type.Color.html\" title=\"type style::values::computed::color::Color\"><code>Color</code></a> from a given color-mix, simplifying it to an absolute color\nif possible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_to_absolute\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/color.rs.html#62-81\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.resolve_to_absolute\" class=\"fn\">resolve_to_absolute</a>(\n    &amp;self,\n    current_color: &amp;<a class=\"struct\" href=\"style/color/struct.AbsoluteColor.html\" title=\"struct style::color::AbsoluteColor\">AbsoluteColor</a>,\n) -&gt; <a class=\"struct\" href=\"style/color/struct.AbsoluteColor.html\" title=\"struct style::color::AbsoluteColor\">AbsoluteColor</a></h4></section></summary><div class=\"docblock\"><p>Combine this complex color with the given foreground color into an\nabsolute color.</p>\n</div></details></div></details>",0,"style::values::animated::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#129-152\">source</a><a href=\"#impl-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage&gt; <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">Color</a>&lt;Percentage&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_absolute\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#131-136\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.as_absolute\" class=\"fn\">as_absolute</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"style/color/struct.AbsoluteColor.html\" title=\"struct style::color::AbsoluteColor\">AbsoluteColor</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If this color is absolute return it’s value, otherwise return None.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.currentcolor\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#139-141\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.currentcolor\" class=\"fn\">currentcolor</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a color value representing currentcolor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_currentcolor\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#144-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.is_currentcolor\" class=\"fn\">is_currentcolor</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether it is a currentcolor value (no numeric color component).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_absolute\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#149-151\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/generics/color/enum.GenericColor.html#tymethod.is_absolute\" class=\"fn\">is_absolute</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether this color is an absolute color.</p>\n</div></details></div></details>",0,"style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-MallocSizeOf-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage&gt; <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;<div class=\"where\">where\n    Percentage: <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-PartialEq-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-ToAnimatedValue-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage&gt; <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;<div class=\"where\">where\n    Percentage: <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;&lt;Percentage as <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>&gt;</h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(from: Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a></h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details></div></details>","ToAnimatedValue","style::values::animated::color::Color","style::values::computed::color::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToShmem-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-ToShmem-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage&gt; <a class=\"trait\" href=\"to_shmem/trait.ToShmem.html\" title=\"trait to_shmem::ToShmem\">ToShmem</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;<div class=\"where\">where\n    Percentage: <a class=\"trait\" href=\"to_shmem/trait.ToShmem.html\" title=\"trait to_shmem::ToShmem\">ToShmem</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_shmem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#method.to_shmem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\" class=\"fn\">to_shmem</a>(&amp;self, builder: &amp;mut <a class=\"struct\" href=\"to_shmem/struct.SharedMemoryBuilder.html\" title=\"struct to_shmem::SharedMemoryBuilder\">SharedMemoryBuilder</a>) -&gt; <a class=\"type\" href=\"to_shmem/type.Result.html\" title=\"type to_shmem::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Clones this value into a form suitable for writing into a\nSharedMemoryBuilder. <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\">Read more</a></div></details></div></details>","ToShmem","style::values::animated::color::Color","style::values::computed::color::Color"],["<section id=\"impl-StructuralPartialEq-for-GenericColor%3CPercentage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/color.rs.html#15\">source</a><a href=\"#impl-StructuralPartialEq-for-GenericColor%3CPercentage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Percentage&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"style/values/generics/color/enum.GenericColor.html\" title=\"enum style::values::generics::color::GenericColor\">GenericColor</a>&lt;Percentage&gt;</h3></section>","StructuralPartialEq","style::values::animated::color::Color","style::values::computed::color::Color"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()