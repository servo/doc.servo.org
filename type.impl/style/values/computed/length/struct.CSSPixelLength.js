(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#421-428\">source</a><a href=\"#impl-Add-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#425-427\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#430-435\">source</a><a href=\"#impl-AddAssign-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#432-434\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Animate-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#252\">source</a><a href=\"#impl-Animate-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.Animate.html\" title=\"trait style::values::animated::Animate\">Animate</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.animate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#252\">source</a><a href=\"#method.animate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.Animate.html#tymethod.animate\" class=\"fn\">animate</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, procedure: <a class=\"enum\" href=\"style/values/animated/enum.Procedure.html\" title=\"enum style::values::animated::Procedure\">Procedure</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Animate a value towards another one, given an animation procedure.</div></details></div></details>","Animate","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#301-392\">source</a><a href=\"#impl-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#304-306\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.new\" class=\"fn\">new</a>(px: <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new CSSPixelLength.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalized\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#310-312\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.normalized\" class=\"fn\">normalized</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a normalized (NaN turned to zero) version of this length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finite\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#316-318\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.finite\" class=\"fn\">finite</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a finite (normalized and clamped to float min and max) version of this length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scale_by\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#322-324\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.scale_by\" class=\"fn\">scale_by</a>(self, scale: <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Scale the length by a given amount.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.px\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#328-330\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.px\" class=\"fn\">px</a>(self) -&gt; <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a></h4></section></summary><div class=\"docblock\"><p>Return the containing pixel value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zoom\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#334-336\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.zoom\" class=\"fn\">zoom</a>(self, zoom: <a class=\"struct\" href=\"style/values/computed/box_/struct.Zoom.html\" title=\"struct style::values::computed::box_::Zoom\">Zoom</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Zooms a particular length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32_au\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#340-342\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.to_i32_au\" class=\"fn\">to_i32_au</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Return the length with app_unit i32 type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#346-348\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return the absolute value of this length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_to_non_negative\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#352-354\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.clamp_to_non_negative\" class=\"fn\">clamp_to_non_negative</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return the clamped value of this length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#358-360\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the minimum between <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#364-366\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the maximum between <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_assign\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#370-372\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.max_assign\" class=\"fn\">max_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Sets <code>self</code> to the maximum between <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_between_extremums\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.clamp_between_extremums\" class=\"fn\">clamp_between_extremums</a>(\n    self,\n    min_size: Self,\n    max_size: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Clamp the value to a lower bound and an optional upper bound.</p>\n<p>Can be used for example with <code>min-width</code> and <code>max-width</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_below_max\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#386-391\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length/struct.CSSPixelLength.html#tymethod.clamp_below_max\" class=\"fn\">clamp_below_max</a>(self, max_size: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Clamp the value to an optional upper bound.</p>\n<p>Can be used for example with <code>max-width</code>.</p>\n</div></details></div></details>",0,"style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#253\">source</a><a href=\"#impl-Clone-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#253\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeSquaredDistance-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#254\">source</a><a href=\"#impl-ComputeSquaredDistance-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/distance/trait.ComputeSquaredDistance.html\" title=\"trait style::values::distance::ComputeSquaredDistance\">ComputeSquaredDistance</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_squared_distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#254\">source</a><a href=\"#method.compute_squared_distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/distance/trait.ComputeSquaredDistance.html#tymethod.compute_squared_distance\" class=\"fn\">compute_squared_distance</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"style/values/distance/struct.SquaredDistance.html\" title=\"struct style::values::distance::SquaredDistance\">SquaredDistance</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes the squared distance between two animatable values.</div></details></div></details>","ComputeSquaredDistance","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#294-299\">source</a><a href=\"#impl-Debug-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#295-298\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#256\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#256\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cf32%3E-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#446-453\">source</a><a href=\"#impl-Div%3Cf32%3E-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#450-452\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<f32>","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#437-444\">source</a><a href=\"#impl-Div-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#441-443\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: Self) -&gt; <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAu%3E-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#503-508\">source</a><a href=\"#impl-From%3CAu%3E-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt; for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#505-507\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(len: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Au>","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#257\">source</a><a href=\"#impl-MallocSizeOf-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#257\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf32%3E-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#462-469\">source</a><a href=\"#impl-Mul%3Cf32%3E-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#466-468\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<f32>","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cf32%3E-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#455-460\">source</a><a href=\"#impl-MulAssign%3Cf32%3E-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#457-459\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<f32>","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#471-478\">source</a><a href=\"#impl-Neg-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#475-477\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#258\">source</a><a href=\"#impl-PartialEq-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#258\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#259\">source</a><a href=\"#impl-PartialOrd-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#259\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#260\">source</a><a href=\"#impl-Serialize-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#260\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#480-487\">source</a><a href=\"#impl-Sub-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#484-486\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#489-494\">source</a><a href=\"#impl-SubAssign-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#491-493\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#415-419\">source</a><a href=\"#impl-Sum-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#416-418\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#281-292\">source</a><a href=\"#impl-ToAnimatedValue-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#284-286\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">AnimatedContext</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a></h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#289-291\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(value: Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details></div></details>","ToAnimatedValue","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedZero-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#261\">source</a><a href=\"#impl-ToAnimatedZero-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedZero.html\" title=\"trait style::values::animated::ToAnimatedZero\">ToAnimatedZero</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#261\">source</a><a href=\"#method.to_animated_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\" class=\"fn\">to_animated_zero</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Returns a value that, when added with an underlying value, will produce the underlying\nvalue. This is used for SMIL animation’s “by-animation” where SMIL first interpolates from\nthe zero value to the ‘by’ value, and then adds the result to the underlying value. <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\">Read more</a></div></details></div></details>","ToAnimatedZero","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToComputedValue-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#262\">source</a><a href=\"#impl-ToComputedValue-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a><div class=\"where\">where\n    <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>: <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&lt;ComputedValue = <a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ComputedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ComputedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" class=\"associatedtype\">ComputedValue</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The computed value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#262\">source</a><a href=\"#method.from_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\" class=\"fn\">from_computed_value</a>(from: &amp;Self::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a computed value to specified value form. <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#262\">source</a><a href=\"#method.to_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.to_computed_value\" class=\"fn\">to_computed_value</a>(&amp;self, context: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Context.html\" title=\"struct style::values::computed::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a></h4></section></summary><div class='docblock'>Convert a specified value to a computed value, using itself and the data\ninside the <code>Context</code>.</div></details></div></details>","ToComputedValue","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToCss-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#404-413\">source</a><a href=\"#impl-ToCss-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/values/trait.ToCss.html\" title=\"trait style_traits::values::ToCss\">ToCss</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#406-412\">source</a><a href=\"#method.to_css\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#tymethod.to_css\" class=\"fn\">to_css</a>&lt;W&gt;(&amp;self, dest: &amp;mut <a class=\"struct\" href=\"style_traits/values/struct.CssWriter.html\" title=\"struct style_traits::values::CssWriter\">CssWriter</a>&lt;'_, W&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a><div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax, writing to <code>dest</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#93\">source</a><a href=\"#method.to_css_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\" class=\"fn\">to_css_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax and return a string. <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\">Read more</a></div></details></div></details>","ToCss","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#268-279\">source</a><a href=\"#impl-ToResolvedValue-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#271-273\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">ResolvedContext</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a></h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#276-278\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(value: Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToShmem-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#263\">source</a><a href=\"#impl-ToShmem-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"to_shmem/trait.ToShmem.html\" title=\"trait to_shmem::ToShmem\">ToShmem</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_shmem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#263\">source</a><a href=\"#method.to_shmem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\" class=\"fn\">to_shmem</a>(&amp;self, builder: &amp;mut <a class=\"struct\" href=\"to_shmem/struct.SharedMemoryBuilder.html\" title=\"struct to_shmem::SharedMemoryBuilder\">SharedMemoryBuilder</a>) -&gt; <a class=\"type\" href=\"to_shmem/type.Result.html\" title=\"type to_shmem::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Clones this value into a form suitable for writing into a\nSharedMemoryBuilder. <a href=\"to_shmem/trait.ToShmem.html#tymethod.to_shmem\">Read more</a></div></details></div></details>","ToShmem","style::values::computed::length::Length"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#394-402\">source</a><a href=\"#impl-Zero-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#395-397\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#399-401\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","style::values::computed::length::Length"],["<section id=\"impl-Copy-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#255\">source</a><a href=\"#impl-Copy-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section>","Copy","style::values::computed::length::Length"],["<section id=\"impl-StructuralPartialEq-for-CSSPixelLength\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#258\">source</a><a href=\"#impl-StructuralPartialEq-for-CSSPixelLength\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h3></section>","StructuralPartialEq","style::values::computed::length::Length"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()