(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#63\">source</a><a href=\"#impl-Add-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#67\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#156\">source</a><a href=\"#impl-AddAssign-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#158\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#196\">source</a><a href=\"#impl-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#199\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class=\"docblock\"><p>FIXME(pcwalton): Workaround for lack of cross crate inlining of newtype structs!</p>\n</div></details><section id=\"method.scale_by\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#209\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.scale_by\" class=\"fn\">scale_by</a>(self, factor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.scale_by_trunc\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#216\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.scale_by_trunc\" class=\"fn\">scale_by_trunc</a>(self, factor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class=\"docblock\"><p>Scale, but truncate (useful for viewport-relative units)</p>\n</div></details><section id=\"method.from_f64_au\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#222\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.from_f64_au\" class=\"fn\">from_f64_au</a>(float: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><section id=\"method.from_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#228\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.from_px\" class=\"fn\">from_px</a>(px: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#234\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.to_px\" class=\"fn\">to_px</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Round this app unit down to the pixel towards zero and return it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil_to_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#240\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.ceil_to_px\" class=\"fn\">ceil_to_px</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Ceil this app unit to the appropriate pixel boundary and return it.</p>\n</div></details><section id=\"method.to_nearest_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#245\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.to_nearest_px\" class=\"fn\">to_nearest_px</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section><section id=\"method.to_nearest_pixel\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#250\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.to_nearest_pixel\" class=\"fn\">to_nearest_pixel</a>(self, pixels_per_px: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.to_f32_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#255\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.to_f32_px\" class=\"fn\">to_f32_px</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.to_f64_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#260\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.to_f64_px\" class=\"fn\">to_f64_px</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.from_f32_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#265\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.from_f32_px\" class=\"fn\">from_f32_px</a>(px: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><section id=\"method.from_f64_px\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#271\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.from_f64_px\" class=\"fn\">from_f64_px</a>(px: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#277\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section><section id=\"method.max_assign\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.max_assign\" class=\"fn\">max_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>)</h4></section><section id=\"method.min_assign\" class=\"method\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#287\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/struct.Au.html#tymethod.min_assign\" class=\"fn\">min_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>)</h4></section></div></details>",0,"style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Clone-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeSquaredDistance-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/distance.rs.html#81-86\">source</a><a href=\"#impl-ComputeSquaredDistance-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/distance/trait.ComputeSquaredDistance.html\" title=\"trait style::values::distance::ComputeSquaredDistance\">ComputeSquaredDistance</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_squared_distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/distance.rs.html#83-85\">source</a><a href=\"#method.compute_squared_distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/distance/trait.ComputeSquaredDistance.html#tymethod.compute_squared_distance\" class=\"fn\">compute_squared_distance</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"style/values/distance/struct.SquaredDistance.html\" title=\"struct style::values::distance::SquaredDistance\">SquaredDistance</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes the squared distance between two animatable values.</div></details></div></details>","ComputeSquaredDistance","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#37\">source</a><a href=\"#impl-Debug-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#38\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Default-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#44\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#45\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Ci32%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#120\">source</a><a href=\"#impl-Div%3Ci32%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#124\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<i32>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#111\">source</a><a href=\"#impl-Div-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#115\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3Ci32%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#177\">source</a><a href=\"#impl-DivAssign%3Ci32%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#179\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<i32>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCSSPixelLength%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#496-501\">source</a><a href=\"#impl-From%3CCSSPixelLength%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#498-500\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(len: <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CSSPixelLength>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonNegative%3CCSSPixelLength%3E%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#584-589\">source</a><a href=\"#impl-From%3CNonNegative%3CCSSPixelLength%3E%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"style/values/generics/struct.NonNegative.html\" title=\"struct style::values::generics::NonNegative\">NonNegative</a>&lt;<a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a>&gt;&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length.rs.html#586-588\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(non_negative_len: <a class=\"type\" href=\"style/values/computed/length/type.NonNegativeLength.html\" title=\"type style::values::computed::length::NonNegativeLength\">NonNegativeLength</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NonNegative<CSSPixelLength>>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Hash-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#862\">source</a><a href=\"#impl-MallocSizeOf-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#862\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#451\">source</a><a href=\"#impl-MallocSizeOf-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#451\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wr_malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"wr_malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct wr_malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Ci32%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#96\">source</a><a href=\"#impl-Mul%3Ci32%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#100\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<i32>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Ci32%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#170\">source</a><a href=\"#impl-MulAssign%3Ci32%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#172\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<i32>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#147\">source</a><a href=\"#impl-Neg-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#151\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Ord-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-PartialEq-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-PartialOrd-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3Ci32%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#138\">source</a><a href=\"#impl-Rem%3Ci32%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#142\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<i32>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#129\">source</a><a href=\"#impl-Rem-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#133\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#28\">source</a><a href=\"#impl-Serialize-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#28\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#72\">source</a><a href=\"#impl-Sub-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#76\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#163\">source</a><a href=\"#impl-SubAssign-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#165\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Au%3E-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#184\">source</a><a href=\"#impl-Sum%3C%26Au%3E-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt; for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#185\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Au>","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#190\">source</a><a href=\"#impl-Sum-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#191\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#234-246\">source</a><a href=\"#impl-ToAnimatedValue-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#238-240\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a></h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#243-245\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(animated: Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details></div></details>","ToAnimatedValue","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedZero-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#423-428\">source</a><a href=\"#impl-ToAnimatedZero-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedZero.html\" title=\"trait style::values::animated::ToAnimatedZero\">ToAnimatedZero</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/animated/mod.rs.html#425-427\">source</a><a href=\"#method.to_animated_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\" class=\"fn\">to_animated_zero</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Returns a value that, when added with an underlying value, will produce the underlying\nvalue. This is used for SMIL animation’s “by-animation” where SMIL first interpolates from\nthe zero value to the ‘by’ value, and then adds the result to the underlying value. <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\">Read more</a></div></details></div></details>","ToAnimatedZero","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToCss-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#490\">source</a><a href=\"#impl-ToCss-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/values/trait.ToCss.html\" title=\"trait style_traits::values::ToCss\">ToCss</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#491-493\">source</a><a href=\"#method.to_css\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#tymethod.to_css\" class=\"fn\">to_css</a>&lt;W&gt;(&amp;self, dest: &amp;mut <a class=\"struct\" href=\"style_traits/values/struct.CssWriter.html\" title=\"struct style_traits::values::CssWriter\">CssWriter</a>&lt;'_, W&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax, writing to <code>dest</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#93\">source</a><a href=\"#method.to_css_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\" class=\"fn\">to_css_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax and return a string. <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\">Read more</a></div></details></div></details>","ToCss","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#107-119\">source</a><a href=\"#impl-ToResolvedValue-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = <a class=\"struct\" href=\"style/values/computed/length/struct.CSSPixelLength.html\" title=\"struct style::values::computed::length::CSSPixelLength\">CSSPixelLength</a></h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#111-113\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">Context</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a></h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/resolved/mod.rs.html#116-118\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(resolved: Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#51\">source</a><a href=\"#impl-Zero-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#53\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#58\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<section id=\"impl-Copy-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Copy-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section>","Copy","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<section id=\"impl-Eq-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-Eq-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section>","Eq","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"],["<section id=\"impl-StructuralPartialEq-for-Au\" class=\"impl\"><a class=\"src rightside\" href=\"src/app_units/app_unit.rs.html#27\">source</a><a href=\"#impl-StructuralPartialEq-for-Au\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h3></section>","StructuralPartialEq","style::values::computed::border::LineWidth","style::values::computed::border::BorderSideWidth"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()