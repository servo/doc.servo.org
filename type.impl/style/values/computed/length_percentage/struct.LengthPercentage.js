(function() {var type_impls = {
"style":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Animate-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#1054-1087\">source</a><a href=\"#impl-Animate-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.Animate.html\" title=\"trait style::values::animated::Animate\">Animate</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"docblock\"><p>https://drafts.csswg.org/css-transitions/#animtype-lpcalc\nhttps://drafts.csswg.org/css-values-4/#combine-math\nhttps://drafts.csswg.org/css-values-4/#combine-mixed</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.animate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#1056-1086\">source</a><a href=\"#method.animate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.Animate.html#tymethod.animate\" class=\"fn\">animate</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, procedure: <a class=\"enum\" href=\"style/values/animated/enum.Procedure.html\" title=\"enum style::values::animated::Procedure\">Procedure</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Animate a value towards another one, given an animation procedure.</div></details></div></details>","Animate","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#572-580\">source</a><a href=\"#impl-Clone-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#573-579\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeSquaredDistance-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#612-623\">source</a><a href=\"#impl-ComputeSquaredDistance-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/distance/trait.ComputeSquaredDistance.html\" title=\"trait style::values::distance::ComputeSquaredDistance\">ComputeSquaredDistance</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_squared_distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#614-622\">source</a><a href=\"#method.compute_squared_distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/distance/trait.ComputeSquaredDistance.html#tymethod.compute_squared_distance\" class=\"fn\">compute_squared_distance</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"style/values/distance/struct.SquaredDistance.html\" title=\"struct style::values::distance::SquaredDistance\">SquaredDistance</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes the squared distance between two animatable values.</div></details></div></details>","ComputeSquaredDistance","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#556-560\">source</a><a href=\"#impl-Debug-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#557-559\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#661-670\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#662-669\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#152-158\">source</a><a href=\"#impl-Drop-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#153-157\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#225-548\">source</a><a href=\"#impl-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#228-230\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>1px length value for SVG defaults</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_percent\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#234-236\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.zero_percent\" class=\"fn\">zero_percent</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>0%</p>\n</div></details><section id=\"method.to_calc_node\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#238-246\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_calc_node\" class=\"fn\">to_calc_node</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"type\" href=\"style/values/computed/length_percentage/type.CalcNode.html\" title=\"type style::values::computed::length_percentage::CalcNode\">CalcNode</a>&gt;</h4></section><section id=\"method.map_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#248-260\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.map_lengths\" class=\"fn\">map_lengths</a>(&amp;self, map_fn: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_length\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#264-273\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.new_length\" class=\"fn\">new_length</a>(length: <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a length value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_percent\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#277-286\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.new_percent\" class=\"fn\">new_percent</a>(percentage: <a class=\"struct\" href=\"style/values/computed/percentage/struct.Percentage.html\" title=\"struct style::values::computed::percentage::Percentage\">Percentage</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a percentage value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hundred_percent_minus\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#290-305\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.hundred_percent_minus\" class=\"fn\">hundred_percent_minus</a>(v: Self, clamping_mode: <a class=\"enum\" href=\"style_traits/values/specified/enum.AllowedNumericType.html\" title=\"enum style_traits::values::specified::AllowedNumericType\">AllowedNumericType</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Given a <code>LengthPercentage</code> value <code>v</code>, construct the value representing\n<code>calc(100% - v)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hundred_percent_minus_list\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#309-321\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.hundred_percent_minus_list\" class=\"fn\">hundred_percent_minus_list</a>(\n    list: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>],\n    clamping_mode: <a class=\"enum\" href=\"style_traits/values/specified/enum.AllowedNumericType.html\" title=\"enum style_traits::values::specified::AllowedNumericType\">AllowedNumericType</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Given a list of <code>LengthPercentage</code> values, construct the value representing\n<code>calc(100% - the sum of the list)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_calc\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#325-351\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.new_calc\" class=\"fn\">new_calc</a>(node: <a class=\"type\" href=\"style/values/computed/length_percentage/type.CalcNode.html\" title=\"type style::values::computed::length_percentage::CalcNode\">CalcNode</a>, clamping_mode: <a class=\"enum\" href=\"style_traits/values/specified/enum.AllowedNumericType.html\" title=\"enum style_traits::values::specified::AllowedNumericType\">AllowedNumericType</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a <code>calc()</code> value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_calc_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#355-375\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.new_calc_unchecked\" class=\"fn\">new_calc_unchecked</a>(calc: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"style/values/computed/length_percentage/struct.CalcLengthPercentage.html\" title=\"struct style::values::computed::length_percentage::CalcLengthPercentage\">CalcLengthPercentage</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Private version of new_calc() that constructs a calc() variant without\nchecking.</p>\n</div></details><section id=\"method.tag\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#378-385\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.tag\" class=\"fn\">tag</a>(&amp;self) -&gt; <a class=\"enum\" href=\"style/values/computed/length_percentage/enum.Tag.html\" title=\"enum style::values::computed::length_percentage::Tag\">Tag</a></h4></section><section id=\"method.unpack_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#388-396\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.unpack_mut\" class=\"fn\">unpack_mut</a>&lt;'a&gt;(&amp;'a mut self) -&gt; <a class=\"enum\" href=\"style/values/computed/length_percentage/enum.UnpackedMut.html\" title=\"enum style::values::computed::length_percentage::UnpackedMut\">UnpackedMut</a>&lt;'a&gt;</h4></section><section id=\"method.unpack\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#399-407\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.unpack\" class=\"fn\">unpack</a>&lt;'a&gt;(&amp;'a self) -&gt; <a class=\"enum\" href=\"style/values/computed/length_percentage/enum.Unpacked.html\" title=\"enum style::values::computed::length_percentage::Unpacked\">Unpacked</a>&lt;'a&gt;</h4></section><section id=\"method.calc_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#410-419\">source</a><h4 class=\"code-header\">unsafe fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.calc_ptr\" class=\"fn\">calc_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"style/values/computed/length_percentage/struct.CalcLengthPercentage.html\" title=\"struct style::values::computed::length_percentage::CalcLengthPercentage\">CalcLengthPercentage</a></h4></section><section id=\"method.to_serializable\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#422-428\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_serializable\" class=\"fn\">to_serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"style/values/computed/length_percentage/enum.Serializable.html\" title=\"enum style::values::computed::length_percentage::Serializable\">Serializable</a></h4></section><section id=\"method.from_serializable\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#431-437\">source</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.from_serializable\" class=\"fn\">from_serializable</a>(s: <a class=\"enum\" href=\"style/values/computed/length_percentage/enum.Serializable.html\" title=\"enum style::values::computed::length_percentage::Serializable\">Serializable</a>) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_definitely_zero\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#441-447\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.is_definitely_zero\" class=\"fn\">is_definitely_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the computed value is absolute 0 or 0%.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#451-457\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.resolve\" class=\"fn\">resolve</a>(&amp;self, basis: <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a></h4></section></summary><div class=\"docblock\"><p>Resolves the percentage.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.percentage_relative_to\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#461-463\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.percentage_relative_to\" class=\"fn\">percentage_relative_to</a>(&amp;self, basis: <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a></h4></section></summary><div class=\"docblock\"><p>Resolves the percentage. Just an alias of resolve().</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_percentage\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#467-472\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.has_percentage\" class=\"fn\">has_percentage</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return whether there’s any percentage in this value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_length\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#475-483\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_length\" class=\"fn\">to_length</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts to a <code>&lt;length&gt;</code> if possible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_percentage\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#487-492\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_percentage\" class=\"fn\">to_percentage</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"style/values/computed/percentage/struct.Percentage.html\" title=\"struct style::values::computed::percentage::Percentage\">Percentage</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts to a <code>&lt;percentage&gt;</code> if possible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_percentage_of\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#496-505\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_percentage_of\" class=\"fn\">to_percentage_of</a>(&amp;self, basis: <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"style/values/computed/percentage/struct.Percentage.html\" title=\"struct style::values::computed::percentage::Percentage\">Percentage</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts to a <code>&lt;percentage&gt;</code> with given basis. Returns None if the basis is 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_used_value\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#509-511\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_used_value\" class=\"fn\">to_used_value</a>(&amp;self, containing_length: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a></h4></section></summary><div class=\"docblock\"><p>Returns the used value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_pixel_length\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#515-517\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.to_pixel_length\" class=\"fn\">to_pixel_length</a>(&amp;self, containing_length: <a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>) -&gt; <a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a></h4></section></summary><div class=\"docblock\"><p>Returns the used value as CSSPixelLength.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_to_used_value\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#521-524\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.maybe_to_used_value\" class=\"fn\">maybe_to_used_value</a>(&amp;self, container_len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"style/values/computed/struct.Au.html\" title=\"struct style::values::computed::Au\">Au</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the computed value into used value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_percentage_relative_to\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#529-534\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.maybe_percentage_relative_to\" class=\"fn\">maybe_percentage_relative_to</a>(\n    &amp;self,\n    container_len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">Length</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If there are special rules for computing percentages in a value (e.g.\nthe height property), they apply whenever a calc() expression contains\npercentages.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_to_non_negative\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#538-547\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.clamp_to_non_negative\" class=\"fn\">clamp_to_non_negative</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the clamped non-negative values.</p>\n</div></details></div></details>",0,"style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/text.rs.html#116-122\">source</a><a href=\"#impl-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.normal\" class=\"method\"><a class=\"src rightside\" href=\"src/style/values/computed/text.rs.html#119-121\">source</a><h4 class=\"code-header\">pub fn <a href=\"style/values/computed/length_percentage/struct.LengthPercentage.html#tymethod.normal\" class=\"fn\">normal</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return the <code>normal</code> computed value, which is just zero.</p>\n</div></details></div></details>",0,"style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#160-167\">source</a><a href=\"#impl-MallocSizeOf-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#161-166\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#550-554\">source</a><a href=\"#impl-PartialEq-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#551-553\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PositionComponent-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/position.rs.html#72-79\">source</a><a href=\"#impl-PositionComponent-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/generics/position/trait.PositionComponent.html\" title=\"trait style::values::generics::position::PositionComponent\">PositionComponent</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_center\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/position.rs.html#73-78\">source</a><a href=\"#method.is_center\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/generics/position/trait.PositionComponent.html#tymethod.is_center\" class=\"fn\">is_center</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns if the position component is 50% or center.\nFor pixel lengths, it always returns false.</div></details></div></details>","PositionComponent","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#652-659\">source</a><a href=\"#impl-Serialize-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#653-658\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAbsoluteLength-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/generics/transform.rs.html#409-417\">source</a><a href=\"#impl-ToAbsoluteLength-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/generics/transform/trait.ToAbsoluteLength.html\" title=\"trait style::values::generics::transform::ToAbsoluteLength\">ToAbsoluteLength</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_pixel_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/generics/transform.rs.html#411-416\">source</a><a href=\"#method.to_pixel_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/generics/transform/trait.ToAbsoluteLength.html#tymethod.to_pixel_length\" class=\"fn\">to_pixel_length</a>(\n    &amp;self,\n    containing_len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"style/values/computed/length/type.Length.html\" title=\"type style::values::computed::length::Length\">ComputedLength</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"style/values/type.CSSFloat.html\" title=\"type style::values::CSSFloat\">CSSFloat</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Returns the absolute length as pixel value.</div></details></div></details>","ToAbsoluteLength","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedValue-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#169-183\">source</a><a href=\"#impl-ToAnimatedValue-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedValue.html\" title=\"trait style::values::animated::ToAnimatedValue\">ToAnimatedValue</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AnimatedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AnimatedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" class=\"associatedtype\">AnimatedValue</a> = <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h4></section></summary><div class='docblock'>The type of the animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#172-177\">source</a><a href=\"#method.to_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.to_animated_value\" class=\"fn\">to_animated_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/animated/struct.Context.html\" title=\"struct style::values::animated::Context\">AnimatedContext</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a></h4></section></summary><div class='docblock'>Converts this value to an animated value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_animated_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#180-182\">source</a><a href=\"#method.from_animated_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedValue.html#tymethod.from_animated_value\" class=\"fn\">from_animated_value</a>(value: Self::<a class=\"associatedtype\" href=\"style/values/animated/trait.ToAnimatedValue.html#associatedtype.AnimatedValue\" title=\"type style::values::animated::ToAnimatedValue::AnimatedValue\">AnimatedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts back an animated value into a computed value.</div></details></div></details>","ToAnimatedValue","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToAnimatedZero-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#562-570\">source</a><a href=\"#impl-ToAnimatedZero-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/animated/trait.ToAnimatedZero.html\" title=\"trait style::values::animated::ToAnimatedZero\">ToAnimatedZero</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_animated_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#563-569\">source</a><a href=\"#method.to_animated_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\" class=\"fn\">to_animated_zero</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Returns a value that, when added with an underlying value, will produce the underlying\nvalue. This is used for SMIL animation’s “by-animation” where SMIL first interpolates from\nthe zero value to the ‘by’ value, and then adds the result to the underlying value. <a href=\"style/values/animated/trait.ToAnimatedZero.html#tymethod.to_animated_zero\">Read more</a></div></details></div></details>","ToAnimatedZero","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToCss-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#625-632\">source</a><a href=\"#impl-ToCss-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style_traits/values/trait.ToCss.html\" title=\"trait style_traits::values::ToCss\">ToCss</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#626-631\">source</a><a href=\"#method.to_css\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#tymethod.to_css\" class=\"fn\">to_css</a>&lt;W&gt;(&amp;self, dest: &amp;mut <a class=\"struct\" href=\"style_traits/values/struct.CssWriter.html\" title=\"struct style_traits::values::CssWriter\">CssWriter</a>&lt;'_, W&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a><div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax, writing to <code>dest</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_css_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style_traits/values.rs.html#93\">source</a><a href=\"#method.to_css_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\" class=\"fn\">to_css_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Serialize <code>self</code> in CSS syntax and return a string. <a href=\"style_traits/values/trait.ToCss.html#method.to_css_string\">Read more</a></div></details></div></details>","ToCss","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToResolvedValue-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#185-199\">source</a><a href=\"#impl-ToResolvedValue-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/values/resolved/trait.ToResolvedValue.html\" title=\"trait style::values::resolved::ToResolvedValue\">ToResolvedValue</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ResolvedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ResolvedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" class=\"associatedtype\">ResolvedValue</a> = <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h4></section></summary><div class='docblock'>The resolved value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#188-193\">source</a><a href=\"#method.to_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.to_resolved_value\" class=\"fn\">to_resolved_value</a>(self, context: &amp;<a class=\"struct\" href=\"style/values/resolved/struct.Context.html\" title=\"struct style::values::resolved::Context\">ResolvedContext</a>&lt;'_&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a></h4></section></summary><div class='docblock'>Convert a resolved value to a resolved value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_resolved_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#196-198\">source</a><a href=\"#method.from_resolved_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/resolved/trait.ToResolvedValue.html#tymethod.from_resolved_value\" class=\"fn\">from_resolved_value</a>(value: Self::<a class=\"associatedtype\" href=\"style/values/resolved/trait.ToResolvedValue.html#associatedtype.ResolvedValue\" title=\"type style::values::resolved::ToResolvedValue::ResolvedValue\">ResolvedValue</a>) -&gt; Self</h4></section></summary><div class='docblock'>Convert a resolved value to resolved value form.</div></details></div></details>","ToResolvedValue","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#634-643\">source</a><a href=\"#impl-Zero-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/trait.Zero.html\" title=\"trait style::Zero\">Zero</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#635-637\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the zero value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#640-642\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether this value is zero.</div></details></div></details>","Zero","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroNoPercent-for-LengthPercentage\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#645-650\">source</a><a href=\"#impl-ZeroNoPercent-for-LengthPercentage\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"style/trait.ZeroNoPercent.html\" title=\"trait style::ZeroNoPercent\">ZeroNoPercent</a> for <a class=\"struct\" href=\"style/values/computed/length_percentage/struct.LengthPercentage.html\" title=\"struct style::values::computed::length_percentage::LengthPercentage\">LengthPercentage</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero_no_percent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/length_percentage.rs.html#647-649\">source</a><a href=\"#method.is_zero_no_percent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/trait.ZeroNoPercent.html#tymethod.is_zero_no_percent\" class=\"fn\">is_zero_no_percent</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>So, <code>0px</code> should return <code>true</code>, but <code>0%</code> or <code>1px</code> should return <code>false</code></div></details></div></details>","ZeroNoPercent","style::values::computed::position::HorizontalPosition","style::values::computed::position::VerticalPosition","style::values::computed::text::WordSpacing"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()