(function() {var type_impls = {
"webrender":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#89-97\">source</a><a href=\"#impl-Clone-for-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#90-96\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#115-122\">source</a><a href=\"#impl-Debug-for-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;</h3></section></summary><div class=\"docblock\"><p>More-compact textual representation for debug logging.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#116-121\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#107\">source</a><a href=\"#impl-MallocSizeOf-for-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#107\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wr_malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"wr_malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct wr_malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#99-103\">source</a><a href=\"#impl-PartialEq-for-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#100-102\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#105\">source</a><a href=\"#impl-Serialize-for-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#105\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WeakFreeListHandle%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#124-133\">source</a><a href=\"#impl-WeakFreeListHandle%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"webrender/freelist/struct.WeakFreeListHandle.html\" title=\"struct webrender::freelist::WeakFreeListHandle\">WeakFreeListHandle</a>&lt;M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.invalid\" class=\"method\"><a class=\"src rightside\" href=\"src/webrender/freelist.rs.html#126-132\">source</a><h4 class=\"code-header\">pub fn <a href=\"webrender/freelist/struct.WeakFreeListHandle.html#tymethod.invalid\" class=\"fn\">invalid</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns an always-invalid handle.</p>\n</div></details></div></details>",0,"webrender::render_task_cache::RenderTaskCacheEntryHandle","webrender::picture_textures::PictureCacheTextureHandle"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()