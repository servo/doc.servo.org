(function() {var type_impls = {
"icu_provider_adapters":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AnyProvider-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#122-136\">source</a><a href=\"#impl-AnyProvider-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, F&gt; <a class=\"trait\" href=\"icu_provider/any/trait.AnyProvider.html\" title=\"trait icu_provider::any::AnyProvider\">AnyProvider</a> for <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n    D: <a class=\"trait\" href=\"icu_provider/any/trait.AnyProvider.html\" title=\"trait icu_provider::any::AnyProvider\">AnyProvider</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#127-135\">source</a><a href=\"#method.load_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"icu_provider/any/trait.AnyProvider.html#tymethod.load_any\" class=\"fn\">load_any</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/any/struct.AnyResponse.html\" title=\"struct icu_provider::any::AnyResponse\">AnyResponse</a>, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Loads an <a href=\"icu_provider/any/struct.AnyPayload.html\" title=\"struct icu_provider::any::AnyPayload\"><code>AnyPayload</code></a> according to the key and request.</div></details></div></details>","AnyProvider","icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufferProvider-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#102-120\">source</a><a href=\"#impl-BufferProvider-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, F&gt; <a class=\"trait\" href=\"icu_provider/buf/trait.BufferProvider.html\" title=\"trait icu_provider::buf::BufferProvider\">BufferProvider</a> for <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n    D: <a class=\"trait\" href=\"icu_provider/buf/trait.BufferProvider.html\" title=\"trait icu_provider::buf::BufferProvider\">BufferProvider</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_buffer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#107-119\">source</a><a href=\"#method.load_buffer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"icu_provider/buf/trait.BufferProvider.html#tymethod.load_buffer\" class=\"fn\">load_buffer</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;<a class=\"struct\" href=\"icu_provider/buf/struct.BufferMarker.html\" title=\"struct icu_provider::buf::BufferMarker\">BufferMarker</a>&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Loads a <a href=\"icu_provider/response/struct.DataPayload.html\" title=\"struct icu_provider::response::DataPayload\"><code>DataPayload</code></a><code>&lt;</code><a href=\"icu_provider/buf/struct.BufferMarker.html\" title=\"struct icu_provider::buf::BufferMarker\"><code>BufferMarker</code></a><code>&gt;</code> according to the key and request.</div></details></div></details>","BufferProvider","icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataProvider%3CM%3E-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#85-100\">source</a><a href=\"#impl-DataProvider%3CM%3E-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, F, M&gt; <a class=\"trait\" href=\"icu_provider/data_provider/trait.DataProvider.html\" title=\"trait icu_provider::data_provider::DataProvider\">DataProvider</a>&lt;M&gt; for <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n    M: <a class=\"trait\" href=\"icu_provider/marker/trait.KeyedDataMarker.html\" title=\"trait icu_provider::marker::KeyedDataMarker\">KeyedDataMarker</a>,\n    D: <a class=\"trait\" href=\"icu_provider/data_provider/trait.DataProvider.html\" title=\"trait icu_provider::data_provider::DataProvider\">DataProvider</a>&lt;M&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#91-99\">source</a><a href=\"#method.load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.DataProvider.html#tymethod.load\" class=\"fn\">load</a>(&amp;self, req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;M&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Query the provider for data, returning the result. <a href=\"icu_provider/data_provider/trait.DataProvider.html#tymethod.load\">Read more</a></div></details></div></details>","DataProvider<M>","icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#52\">source</a><a href=\"#impl-Debug-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#52\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynamicDataProvider%3CM%3E-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#68-83\">source</a><a href=\"#impl-DynamicDataProvider%3CM%3E-for-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, F, M&gt; <a class=\"trait\" href=\"icu_provider/data_provider/trait.DynamicDataProvider.html\" title=\"trait icu_provider::data_provider::DynamicDataProvider\">DynamicDataProvider</a>&lt;M&gt; for <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n    M: <a class=\"trait\" href=\"icu_provider/marker/trait.DataMarker.html\" title=\"trait icu_provider::marker::DataMarker\">DataMarker</a>,\n    D: <a class=\"trait\" href=\"icu_provider/data_provider/trait.DynamicDataProvider.html\" title=\"trait icu_provider::data_provider::DynamicDataProvider\">DynamicDataProvider</a>&lt;M&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/mod.rs.html#74-82\">source</a><a href=\"#method.load_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"icu_provider/data_provider/trait.DynamicDataProvider.html#tymethod.load_data\" class=\"fn\">load_data</a>(\n    &amp;self,\n    key: <a class=\"struct\" href=\"icu_provider/key/struct.DataKey.html\" title=\"struct icu_provider::key::DataKey\">DataKey</a>,\n    req: <a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"icu_provider/response/struct.DataResponse.html\" title=\"struct icu_provider::response::DataResponse\">DataResponse</a>&lt;M&gt;, <a class=\"struct\" href=\"icu_provider/error/struct.DataError.html\" title=\"struct icu_provider::error::DataError\">DataError</a>&gt;</h4></section></summary><div class='docblock'>Query the provider for data, returning the result. <a href=\"icu_provider/data_provider/trait.DynamicDataProvider.html#tymethod.load_data\">Read more</a></div></details></div></details>","DynamicDataProvider<M>","icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RequestFilterDataProvider%3CD,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/impls.rs.html#14-216\">source</a><a href=\"#impl-RequestFilterDataProvider%3CD,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, F&gt; <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_by_langid\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/impls.rs.html#72-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html#tymethod.filter_by_langid\" class=\"fn\">filter_by_langid</a>&lt;'a&gt;(\n    self,\n    predicate: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"struct\" href=\"icu_locid/langid/struct.LanguageIdentifier.html\" title=\"struct icu_locid::langid::LanguageIdentifier\">LanguageIdentifier</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a,\n) -&gt; <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;&gt;<div class=\"where\">where\n    F: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Filter out data requests with certain langids according to the predicate function. The\npredicate should return <code>true</code> to allow a langid and <code>false</code> to reject a langid.</p>\n<p>Data requests with no langid will be allowed. To reject data requests without a langid,\nchain this with <a href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html#method.require_langid\" title=\"method icu_provider_adapters::filter::RequestFilterDataProvider::require_langid\"><code>Self::require_langid</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu_locid::LanguageIdentifier;\n<span class=\"kw\">use </span>icu_locid::{langid, subtags::language};\n<span class=\"kw\">use </span>icu_provider::datagen::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider::hello_world::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider::prelude::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider_adapters::filter::Filterable;\n\n<span class=\"kw\">let </span>provider = HelloWorldProvider\n    .filterable(<span class=\"string\">\"Demo no-English filter\"</span>)\n    .filter_by_langid(|langid| langid.language != <span class=\"macro\">language!</span>(<span class=\"string\">\"en\"</span>));\n\n<span class=\"comment\">// German requests should succeed:\n</span><span class=\"kw\">let </span>req_de = DataRequest {\n    locale: <span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"de\"</span>).into(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_de);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(response, <span class=\"prelude-val\">Ok</span>(<span class=\"kw\">_</span>)));\n\n<span class=\"comment\">// English requests should fail:\n</span><span class=\"kw\">let </span>req_en = DataRequest {\n    locale: <span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"en-US\"</span>).into(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_en);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    response,\n    <span class=\"prelude-val\">Err</span>(DataError {\n        kind: DataErrorKind::FilteredResource,\n        ..\n    })\n));\n\n<span class=\"comment\">// English should not appear in the iterator result:\n</span><span class=\"kw\">let </span>supported_langids = provider\n    .supported_locales()\n    .expect(<span class=\"string\">\"Should successfully make an iterator of supported locales\"</span>)\n    .into_iter()\n    .map(|options| options.get_langid())\n    .collect::&lt;Vec&lt;LanguageIdentifier&gt;&gt;();\n<span class=\"macro\">assert!</span>(supported_langids.contains(<span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"de\"</span>)));\n<span class=\"macro\">assert!</span>(!supported_langids.contains(<span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"en\"</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_by_langid_allowlist_strict\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/impls.rs.html#142-160\">source</a><h4 class=\"code-header\">pub fn <a href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html#tymethod.filter_by_langid_allowlist_strict\" class=\"fn\">filter_by_langid_allowlist_strict</a>&lt;'a&gt;(\n    self,\n    allowlist: &amp;'a [<a class=\"struct\" href=\"icu_locid/langid/struct.LanguageIdentifier.html\" title=\"struct icu_locid::langid::LanguageIdentifier\">LanguageIdentifier</a>],\n) -&gt; <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;&gt;<div class=\"where\">where\n    F: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Filter out data request except those having a language identifier that exactly matches\none in the allowlist.</p>\n<p>This will be replaced with a smarter algorithm for locale filtering; see\n<a href=\"https://github.com/unicode-org/icu4x/issues/834\">https://github.com/unicode-org/icu4x/issues/834</a></p>\n<p>Data requests with no langid will be allowed. To reject data requests without a langid,\nchain this with <a href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html#method.require_langid\" title=\"method icu_provider_adapters::filter::RequestFilterDataProvider::require_langid\"><code>Self::require_langid</code></a>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu_locid::langid;\n<span class=\"kw\">use </span>icu_provider::hello_world::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider::prelude::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider_adapters::filter::Filterable;\n\n<span class=\"kw\">let </span>allowlist = [<span class=\"macro\">langid!</span>(<span class=\"string\">\"de\"</span>), <span class=\"macro\">langid!</span>(<span class=\"string\">\"zh\"</span>)];\n<span class=\"kw\">let </span>provider = HelloWorldProvider\n    .filterable(<span class=\"string\">\"Demo German+Chinese filter\"</span>)\n    .filter_by_langid_allowlist_strict(<span class=\"kw-2\">&amp;</span>allowlist);\n\n<span class=\"comment\">// German requests should succeed:\n</span><span class=\"kw\">let </span>req_de = DataRequest {\n    locale: <span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"de\"</span>).into(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_de);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(response, <span class=\"prelude-val\">Ok</span>(<span class=\"kw\">_</span>)));\n\n<span class=\"comment\">// English requests should fail:\n</span><span class=\"kw\">let </span>req_en = DataRequest {\n    locale: <span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"en-US\"</span>).into(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_en);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    response,\n    <span class=\"prelude-val\">Err</span>(DataError {\n        kind: DataErrorKind::FilteredResource,\n        ..\n    })\n));\n<span class=\"macro\">assert_eq!</span>(\n    response.unwrap_err().str_context,\n    <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"Demo German+Chinese filter\"</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_langid\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_provider_adapters/filter/impls.rs.html#200-215\">source</a><h4 class=\"code-header\">pub fn <a href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html#tymethod.require_langid\" class=\"fn\">require_langid</a>&lt;'a&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"icu_provider_adapters/filter/struct.RequestFilterDataProvider.html\" title=\"struct icu_provider_adapters::filter::RequestFilterDataProvider\">RequestFilterDataProvider</a>&lt;D, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"icu_provider/request/struct.DataRequest.html\" title=\"struct icu_provider::request::DataRequest\">DataRequest</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'a&gt;&gt;<div class=\"where\">where\n    F: 'a,</div></h4></section></summary><div class=\"docblock\"><p>Require that data requests contain a langid.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu_locid::langid;\n<span class=\"kw\">use </span>icu_provider::hello_world::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider::prelude::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>icu_provider_adapters::filter::Filterable;\n\n<span class=\"kw\">let </span>provider = HelloWorldProvider\n    .filterable(<span class=\"string\">\"Demo require-langid filter\"</span>)\n    .require_langid();\n\n<span class=\"comment\">// Requests with a langid should succeed:\n</span><span class=\"kw\">let </span>req_with_langid = DataRequest {\n    locale: <span class=\"kw-2\">&amp;</span><span class=\"macro\">langid!</span>(<span class=\"string\">\"de\"</span>).into(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_with_langid);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(response, <span class=\"prelude-val\">Ok</span>(<span class=\"kw\">_</span>)));\n\n<span class=\"comment\">// Requests without a langid should fail:\n</span><span class=\"kw\">let </span>req_no_langid = DataRequest {\n    locale: Default::default(),\n    metadata: Default::default(),\n};\n<span class=\"kw\">let </span>response: <span class=\"prelude-ty\">Result</span>&lt;DataResponse&lt;HelloWorldV1Marker&gt;, <span class=\"kw\">_</span>&gt; =\n    provider.load(req_no_langid);\n<span class=\"macro\">assert!</span>(<span class=\"macro\">matches!</span>(\n    response,\n    <span class=\"prelude-val\">Err</span>(DataError {\n        kind: DataErrorKind::FilteredResource,\n        ..\n    })\n));</code></pre></div>\n</div></details></div></details>",0,"icu_provider_adapters::filter::impls::RequestFilterDataProviderOutput"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()