(function() {var type_impls = {
"exr":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckDuplicates-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#355-357\">source</a><a href=\"#impl-CheckDuplicates-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/trait.CheckDuplicates.html\" title=\"trait exr::image::CheckDuplicates\">CheckDuplicates</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.already_contains\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#356\">source</a><a href=\"#method.already_contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/trait.CheckDuplicates.html#tymethod.already_contains\" class=\"fn\">already_contains</a>(&amp;self, _: &amp;<a class=\"struct\" href=\"exr/meta/attribute/struct.Text.html\" title=\"struct exr::meta::attribute::Text\">Text</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check for duplicate channel names.</div></details></div></details>","CheckDuplicates","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-Clone-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-Debug-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-Default-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoNonRecursive-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#77-83\">source</a><a href=\"#impl-IntoNonRecursive-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/recursive/trait.IntoNonRecursive.html\" title=\"trait exr::image::recursive::IntoNonRecursive\">IntoNonRecursive</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.NonRecursive\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NonRecursive\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/recursive/trait.IntoNonRecursive.html#associatedtype.NonRecursive\" class=\"associatedtype\">NonRecursive</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The resulting tuple type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_non_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#80-82\">source</a><a href=\"#method.into_non_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/recursive/trait.IntoNonRecursive.html#tymethod.into_non_recursive\" class=\"fn\">into_non_recursive</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoNonRecursive.html#associatedtype.NonRecursive\" title=\"type exr::image::recursive::IntoNonRecursive::NonRecursive\">NonRecursive</a></h4></section></summary><div class='docblock'>Convert this recursive type to a nice tuple.</div></details></div></details>","IntoNonRecursive","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoRecursive-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#54-57\">source</a><a href=\"#impl-IntoRecursive-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/recursive/trait.IntoRecursive.html\" title=\"trait exr::image::recursive::IntoRecursive\">IntoRecursive</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Recursive\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" class=\"associatedtype\">Recursive</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>The recursive type resulting from this tuple.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#56\">source</a><a href=\"#method.into_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/recursive/trait.IntoRecursive.html#tymethod.into_recursive\" class=\"fn\">into_recursive</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoRecursive.html#associatedtype.Recursive\" title=\"type exr::image::recursive::IntoRecursive::Recursive\">Recursive</a></h4></section></summary><div class='docblock'>Create a recursive type from this tuple.</div></details></div></details>","IntoRecursive","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LayersWriter-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/write/layers.rs.html#167-171\">source</a><a href=\"#impl-LayersWriter-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/write/layers/trait.LayersWriter.html\" title=\"trait exr::image::write::layers::LayersWriter\">LayersWriter</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_uncompressed_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/layers.rs.html#168-170\">source</a><a href=\"#method.extract_uncompressed_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/layers/trait.LayersWriter.html#tymethod.extract_uncompressed_block\" class=\"fn\">extract_uncompressed_block</a>(&amp;self, _: &amp;[<a class=\"struct\" href=\"exr/meta/header/struct.Header.html\" title=\"struct exr::meta::header::Header\">Header</a>], _: <a class=\"struct\" href=\"exr/block/struct.BlockIndex.html\" title=\"struct exr::block::BlockIndex\">BlockIndex</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Deliver a block of pixels from a single layer to be stored in the file</div></details></div></details>","LayersWriter","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-PartialEq-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadSpecificChannel-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#216-219\">source</a><a href=\"#impl-ReadSpecificChannel-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html\" title=\"trait exr::image::read::specific_channels::ReadSpecificChannel\">ReadSpecificChannel</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RecursivePixelReader\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RecursivePixelReader\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#associatedtype.RecursivePixelReader\" class=\"associatedtype\">RecursivePixelReader</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>A separate internal reader for the pixels. Will be of type <code>Recursive&lt;_, SampleReader&lt;_&gt;&gt;</code>,\ndepending on the pixels of the specific channel combination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_recursive_reader\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#218\">source</a><a href=\"#method.create_recursive_reader\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#tymethod.create_recursive_reader\" class=\"fn\">create_recursive_reader</a>(\n    &amp;self,\n    _: &amp;<a class=\"struct\" href=\"exr/meta/attribute/struct.ChannelList.html\" title=\"struct exr::meta::attribute::ChannelList\">ChannelList</a>,\n) -&gt; <a class=\"type\" href=\"exr/error/type.Result.html\" title=\"type exr::error::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#associatedtype.RecursivePixelReader\" title=\"type exr::image::read::specific_channels::ReadSpecificChannel::RecursivePixelReader\">RecursivePixelReader</a>&gt;</h4></section></summary><div class='docblock'>Create a separate internal reader for the pixels of the specific channel combination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.required\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#33-37\">source</a><a href=\"#method.required\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#method.required\" class=\"fn\">required</a>&lt;Sample&gt;(\n    self,\n    channel_name: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"exr/meta/attribute/struct.Text.html\" title=\"struct exr::meta::attribute::Text\">Text</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.ReadRequiredChannel.html\" title=\"struct exr::image::read::specific_channels::ReadRequiredChannel\">ReadRequiredChannel</a>&lt;Self, Sample&gt;</h4></section></summary><div class='docblock'>Plan to read an additional channel from the image, with the specified name.\nIf the channel cannot be found in the image when the image is read, the image will not be loaded.\nThe generic parameter can usually be inferred from the closure in <code>collect_pixels</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.optional\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#44-50\">source</a><a href=\"#method.optional\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#method.optional\" class=\"fn\">optional</a>&lt;Sample&gt;(\n    self,\n    channel_name: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"exr/meta/attribute/struct.Text.html\" title=\"struct exr::meta::attribute::Text\">Text</a>&gt;,\n    default_sample: Sample,\n) -&gt; <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.ReadOptionalChannel.html\" title=\"struct exr::image::read::specific_channels::ReadOptionalChannel\">ReadOptionalChannel</a>&lt;Self, Sample&gt;</h4></section></summary><div class='docblock'>Plan to read an additional channel from the image, with the specified name.\nIf the file does not contain this channel, the specified default sample will be returned instead.\nYou can check whether the channel has been loaded by\nchecking the presence of the optional channel description before instantiating your own image.\nThe generic parameter can usually be inferred from the closure in <code>collect_pixels</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_pixels\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#57-70\">source</a><a href=\"#method.collect_pixels\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#method.collect_pixels\" class=\"fn\">collect_pixels</a>&lt;Pixel, PixelStorage, CreatePixels, SetPixel&gt;(\n    self,\n    create_pixels: CreatePixels,\n    set_pixel: SetPixel,\n) -&gt; <a class=\"struct\" href=\"exr/image/read/specific_channels/struct.CollectPixels.html\" title=\"struct exr::image::read::specific_channels::CollectPixels\">CollectPixels</a>&lt;Self, Pixel, PixelStorage, CreatePixels, SetPixel&gt;<div class=\"where\">where\n    &lt;Self::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#associatedtype.RecursivePixelReader\" title=\"type exr::image::read::specific_channels::ReadSpecificChannel::RecursivePixelReader\">RecursivePixelReader</a> as <a class=\"trait\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html\" title=\"trait exr::image::read::specific_channels::RecursivePixelReader\">RecursivePixelReader</a>&gt;::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursivePixel\" title=\"type exr::image::read::specific_channels::RecursivePixelReader::RecursivePixel\">RecursivePixel</a>: <a class=\"trait\" href=\"exr/image/recursive/trait.IntoTuple.html\" title=\"trait exr::image::recursive::IntoTuple\">IntoTuple</a>&lt;Pixel&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#associatedtype.RecursivePixelReader\" title=\"type exr::image::read::specific_channels::ReadSpecificChannel::RecursivePixelReader\">RecursivePixelReader</a> as <a class=\"trait\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html\" title=\"trait exr::image::read::specific_channels::RecursivePixelReader\">RecursivePixelReader</a>&gt;::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursiveChannelDescriptions\" title=\"type exr::image::read::specific_channels::RecursivePixelReader::RecursiveChannelDescriptions\">RecursiveChannelDescriptions</a>: <a class=\"trait\" href=\"exr/image/recursive/trait.IntoNonRecursive.html\" title=\"trait exr::image::recursive::IntoNonRecursive\">IntoNonRecursive</a>,\n    CreatePixels: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"exr/math/struct.Vec2.html\" title=\"struct exr::math::Vec2\">Vec2</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt;, &amp;&lt;&lt;Self::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.ReadSpecificChannel.html#associatedtype.RecursivePixelReader\" title=\"type exr::image::read::specific_channels::ReadSpecificChannel::RecursivePixelReader\">RecursivePixelReader</a> as <a class=\"trait\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html\" title=\"trait exr::image::read::specific_channels::RecursivePixelReader\">RecursivePixelReader</a>&gt;::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursiveChannelDescriptions\" title=\"type exr::image::read::specific_channels::RecursivePixelReader::RecursiveChannelDescriptions\">RecursiveChannelDescriptions</a> as <a class=\"trait\" href=\"exr/image/recursive/trait.IntoNonRecursive.html\" title=\"trait exr::image::recursive::IntoNonRecursive\">IntoNonRecursive</a>&gt;::<a class=\"associatedtype\" href=\"exr/image/recursive/trait.IntoNonRecursive.html#associatedtype.NonRecursive\" title=\"type exr::image::recursive::IntoNonRecursive::NonRecursive\">NonRecursive</a>) -&gt; PixelStorage,\n    SetPixel: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut PixelStorage</a>, <a class=\"struct\" href=\"exr/math/struct.Vec2.html\" title=\"struct exr::math::Vec2\">Vec2</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt;, Pixel),</div></h4></section></summary><div class='docblock'>Using two closures, define how to store the pixels.\nThe first closure creates an image, and the second closure inserts a single pixel.\nThe type of the pixel can be defined by the second closure;\nit must be a tuple containing <code>f16</code>, <code>f32</code>, <code>u32</code> or <code>Sample</code> values.\nSee the examples for more information.</div></details></div></details>","ReadSpecificChannel","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RecursivePixelReader-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#402-412\">source</a><a href=\"#impl-RecursivePixelReader-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html\" title=\"trait exr::image::read::specific_channels::RecursivePixelReader\">RecursivePixelReader</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RecursiveChannelDescriptions\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RecursiveChannelDescriptions\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursiveChannelDescriptions\" class=\"associatedtype\">RecursiveChannelDescriptions</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>The channel descriptions from the image.\nWill be converted to a tuple before being stored in <code>SpecificChannels&lt;_, ChannelDescriptions&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_descriptions\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#404\">source</a><a href=\"#method.get_descriptions\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#tymethod.get_descriptions\" class=\"fn\">get_descriptions</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursiveChannelDescriptions\" title=\"type exr::image::read::specific_channels::RecursivePixelReader::RecursiveChannelDescriptions\">RecursiveChannelDescriptions</a></h4></section></summary><div class='docblock'>Returns the channel descriptions based on the channels in the file.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RecursivePixel\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RecursivePixel\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#associatedtype.RecursivePixel\" class=\"associatedtype\">RecursivePixel</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>The pixel type. Will be converted to a tuple at the end of the process.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_pixels\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/read/specific_channels.rs.html#408-411\">source</a><a href=\"#method.read_pixels\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/read/specific_channels/trait.RecursivePixelReader.html#tymethod.read_pixels\" class=\"fn\">read_pixels</a>&lt;'s, FullPixel&gt;(\n    &amp;self,\n    _: &amp;'s [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>],\n    _: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[FullPixel]</a>,\n    _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut FullPixel</a>) -&gt; &amp;mut <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>,\n)</h4></section></summary><div class='docblock'>Read the line of pixels.</div></details></div></details>","RecursivePixelReader","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RecursivePixelWriter%3CNoneMore%3E-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/write/channels.rs.html#318-320\">source</a><a href=\"#impl-RecursivePixelWriter%3CNoneMore%3E-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/write/channels/trait.RecursivePixelWriter.html\" title=\"trait exr::image::write::channels::RecursivePixelWriter\">RecursivePixelWriter</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>&gt; for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_pixels\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/channels.rs.html#319\">source</a><a href=\"#method.write_pixels\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/channels/trait.RecursivePixelWriter.html#tymethod.write_pixels\" class=\"fn\">write_pixels</a>&lt;FullPixel&gt;(\n    &amp;self,\n    _: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>],\n    _: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[FullPixel]</a>,\n    _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;FullPixel</a>) -&gt; &amp;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>,\n)</h4></section></summary><div class='docblock'>Write pixels to a slice of bytes. Recursively do this for all channels.</div></details></div></details>","RecursivePixelWriter<NoneMore>","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValidateResult-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1088-1090\">source</a><a href=\"#impl-ValidateResult-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/validate_results/trait.ValidateResult.html\" title=\"trait exr::image::validate_results::ValidateResult\">ValidateResult</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#1089\">source</a><a href=\"#method.validate_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\" class=\"fn\">validate_result</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>,\n    _: <a class=\"struct\" href=\"exr/image/validate_results/struct.ValidationOptions.html\" title=\"struct exr::image::validate_results::ValidationOptions\">ValidationOptions</a>,\n    _: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>,\n) -&gt; <a class=\"type\" href=\"exr/image/validate_results/type.ValidationResult.html\" title=\"type exr::image::validate_results::ValidationResult\">ValidationResult</a></h4></section></summary><div class='docblock'>Compare self with the other.\nExceptional behaviour: <a href=\"exr/image/validate_results/trait.ValidateResult.html#tymethod.validate_result\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_equals_result\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/mod.rs.html#899-901\">source</a><a href=\"#method.assert_equals_result\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\" class=\"fn\">assert_equals_result</a>(&amp;self, result: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Compare self with the other. Panics if not equal. <a href=\"exr/image/validate_results/trait.ValidateResult.html#method.assert_equals_result\">Read more</a></div></details></div></details>","ValidateResult","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WritableChannelsDescription%3CNoneMore%3E-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/write/channels.rs.html#213-217\">source</a><a href=\"#impl-WritableChannelsDescription%3CNoneMore%3E-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"exr/image/write/channels/trait.WritableChannelsDescription.html\" title=\"trait exr::image::write::channels::WritableChannelsDescription\">WritableChannelsDescription</a>&lt;<a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a>&gt; for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RecursiveWriter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RecursiveWriter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/write/channels/trait.WritableChannelsDescription.html#associatedtype.RecursiveWriter\" class=\"associatedtype\">RecursiveWriter</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>A type that has a recursive entry for each channel in the image,\nwhich must accept the desired pixel type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_recursive_writer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/channels.rs.html#215\">source</a><a href=\"#method.create_recursive_writer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/channels/trait.WritableChannelsDescription.html#tymethod.create_recursive_writer\" class=\"fn\">create_recursive_writer</a>(&amp;self, _: &amp;<a class=\"struct\" href=\"exr/meta/attribute/struct.ChannelList.html\" title=\"struct exr::meta::attribute::ChannelList\">ChannelList</a>) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/write/channels/trait.WritableChannelsDescription.html#associatedtype.RecursiveWriter\" title=\"type exr::image::write::channels::WritableChannelsDescription::RecursiveWriter\">RecursiveWriter</a></h4></section></summary><div class='docblock'>Create the temporary writer, accepting the sorted list of channels from <code>channel_descriptions_list</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel_descriptions_list\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/channels.rs.html#216\">source</a><a href=\"#method.channel_descriptions_list\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/channels/trait.WritableChannelsDescription.html#tymethod.channel_descriptions_list\" class=\"fn\">channel_descriptions_list</a>(&amp;self) -&gt; <a class=\"struct\" href=\"exr/prelude/struct.SmallVec.html\" title=\"struct exr::prelude::SmallVec\">SmallVec</a>&lt;[<a class=\"struct\" href=\"exr/meta/attribute/struct.ChannelDescription.html\" title=\"struct exr::meta::attribute::ChannelDescription\">ChannelDescription</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">5</a>]&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SmallVec&lt;[ChannelDescription; 5]&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Return all the channels that should actually end up in the image, in any order.</div></details></div></details>","WritableChannelsDescription<NoneMore>","exr::image::read::specific_channels::ReadZeroChannels"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WritableLayers%3C'slf%3E-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/write/layers.rs.html#135-140\">source</a><a href=\"#impl-WritableLayers%3C'slf%3E-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'slf&gt; <a class=\"trait\" href=\"exr/image/write/layers/trait.WritableLayers.html\" title=\"trait exr::image::write::layers::WritableLayers\">WritableLayers</a>&lt;'slf&gt; for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.infer_headers\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/layers.rs.html#136\">source</a><a href=\"#method.infer_headers\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/layers/trait.WritableLayers.html#tymethod.infer_headers\" class=\"fn\">infer_headers</a>(&amp;self, _: &amp;<a class=\"struct\" href=\"exr/meta/header/struct.ImageAttributes.html\" title=\"struct exr::meta::header::ImageAttributes\">ImageAttributes</a>) -&gt; <a class=\"type\" href=\"exr/meta/type.Headers.html\" title=\"type exr::meta::Headers\">Headers</a></h4></section></summary><div class='docblock'>Generate the file meta data for this list of layers</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Writer\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Writer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"exr/image/write/layers/trait.WritableLayers.html#associatedtype.Writer\" class=\"associatedtype\">Writer</a> = <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h4></section></summary><div class='docblock'>The type of temporary writer</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_writer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/exr/image/write/layers.rs.html#139\">source</a><a href=\"#method.create_writer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"exr/image/write/layers/trait.WritableLayers.html#tymethod.create_writer\" class=\"fn\">create_writer</a>(&amp;'slf self, _: &amp;[<a class=\"struct\" href=\"exr/meta/header/struct.Header.html\" title=\"struct exr::meta::header::Header\">Header</a>]) -&gt; Self::<a class=\"associatedtype\" href=\"exr/image/write/layers/trait.WritableLayers.html#associatedtype.Writer\" title=\"type exr::image::write::layers::WritableLayers::Writer\">Writer</a></h4></section></summary><div class='docblock'>Create a temporary writer for this list of layers</div></details></div></details>","WritableLayers<'slf>","exr::image::read::specific_channels::ReadZeroChannels"],["<section id=\"impl-Copy-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-Copy-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section>","Copy","exr::image::read::specific_channels::ReadZeroChannels"],["<section id=\"impl-Eq-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-Eq-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section>","Eq","exr::image::read::specific_channels::ReadZeroChannels"],["<section id=\"impl-StructuralPartialEq-for-NoneMore\" class=\"impl\"><a class=\"src rightside\" href=\"src/exr/image/recursive.rs.html#5\">source</a><a href=\"#impl-StructuralPartialEq-for-NoneMore\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"exr/image/recursive/struct.NoneMore.html\" title=\"struct exr::image::recursive::NoneMore\">NoneMore</a></h3></section>","StructuralPartialEq","exr::image::read::specific_channels::ReadZeroChannels"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()