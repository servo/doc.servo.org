(function() {var type_impls = {
"tokio_util":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#95-99\">source</a><a href=\"#impl-Debug-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::reusable_box::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#96-98\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","tokio_util::sync::mpsc::InnerFuture"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#81-88\">source</a><a href=\"#impl-Future-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::reusable_box::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#85-87\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut Self</a>&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Poll the future stored inside this box.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details></div></details>","Future","tokio_util::sync::mpsc::InnerFuture"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReusableBoxFuture%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#17-79\">source</a><a href=\"#impl-ReusableBoxFuture%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"struct\" href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::reusable_box::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#19-26\">source</a><h4 class=\"code-header\">pub fn <a href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html#tymethod.new\" class=\"fn\">new</a>&lt;F&gt;(future: F) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Create a new <code>ReusableBoxFuture&lt;T&gt;</code> containing the provided future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#32-39\">source</a><h4 class=\"code-header\">pub fn <a href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html#tymethod.set\" class=\"fn\">set</a>&lt;F&gt;(&amp;mut self, future: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Replace the future currently stored in this box.</p>\n<p>This reallocates if and only if the layout of the provided future is\ndifferent from the layout of the currently stored future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_set\" class=\"method\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#46-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html#tymethod.try_set\" class=\"fn\">try_set</a>&lt;F&gt;(&amp;mut self, future: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a,</div></h4></section></summary><div class=\"docblock\"><p>Replace the future currently stored in this box.</p>\n<p>This function never reallocates, but returns an error if the provided\nfuture has a different size or alignment from the currently stored\nfuture.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_pin\" class=\"method\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#71-73\">source</a><h4 class=\"code-header\">pub fn <a href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html#tymethod.get_pin\" class=\"fn\">get_pin</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get a pinned reference to the underlying future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#76-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html#tymethod.poll\" class=\"fn\">poll</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Poll the future stored inside this box.</p>\n</div></details></div></details>",0,"tokio_util::sync::mpsc::InnerFuture"],["<section id=\"impl-Sync-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tokio_util/sync/reusable_box.rs.html#93\">source</a><a href=\"#impl-Sync-for-ReusableBoxFuture%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"tokio_util/sync/reusable_box/struct.ReusableBoxFuture.html\" title=\"struct tokio_util::sync::reusable_box::ReusableBoxFuture\">ReusableBoxFuture</a>&lt;'_, T&gt;</h3></section>","Sync","tokio_util::sync::mpsc::InnerFuture"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()