(function() {var type_impls = {
"icu_locid_transform":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-Debug-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_1\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><h4 class=\"code-header\">pub fn <a href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html#tymethod.field_1\" class=\"fn\">field_1</a>&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Access the VarULE type behind tuple struct field #1</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_2\" class=\"method\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><h4 class=\"code-header\">pub fn <a href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html#tymethod.field_2\" class=\"fn\">field_2</a>&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Access the VarULE type behind tuple struct field #2</p>\n</div></details></div></details>",0,"icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-Ord-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details></div></details>","Ord","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-PartialEq-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-PartialOrd-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VarULE-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-VarULE-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zerovec/ule/trait.VarULE.html\" title=\"trait zerovec::ule::VarULE\">VarULE</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#tymethod.validate_byte_slice\" class=\"fn\">validate_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a href=\"zerovec/ule/trait.VarULE.html#tymethod.validate_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"zerovec/ule/trait.VarULE.html#tymethod.from_byte_slice_unchecked\" class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a></h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;Self</code> with the same lifetime, assuming\nthat this byte slice has previously been run through <a href=\"zerovec/ule/trait.VarULE.html#method.parse_byte_slice\" title=\"associated function zerovec::ule::VarULE::parse_byte_slice::parse_byte_slice\"><code>Self::parse_byte_slice()</code></a> with\nsuccess. <a href=\"zerovec/ule/trait.VarULE.html#tymethod.from_byte_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#314\">source</a><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.parse_byte_slice\" class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;Self</code> with the same lifetime. <a href=\"zerovec/ule/trait.VarULE.html#method.parse_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#352\">source</a><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.as_byte_slice\" class=\"fn\">as_byte_slice</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;Self</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a href=\"zerovec/ule/trait.VarULE.html#method.as_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#358\">source</a><a href=\"#method.to_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.VarULE.html#method.to_boxed\" class=\"fn\">to_boxed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Allocate on the heap as a <code>Box&lt;T&gt;</code></div></details></div></details>","VarULE","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"enum\" href=\"zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\">VarZeroVec</a>&lt;'a, <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a>&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"zerovec/varzerovec/slice/struct.VarZeroSlice.html\" title=\"struct zerovec::varzerovec::slice::VarZeroSlice\">VarZeroSlice</a>&lt;<a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a>&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a>&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"],["<section id=\"impl-Eq-for-LanguageStrStrPairVarULE\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locid_transform/provider/mod.rs.html#118\">source</a><a href=\"#impl-Eq-for-LanguageStrStrPairVarULE\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"icu_locid_transform/provider/struct.LanguageStrStrPairVarULE.html\" title=\"struct icu_locid_transform::provider::LanguageStrStrPairVarULE\">LanguageStrStrPairVarULE</a></h3></section>","Eq","icu_locid_transform::provider::UnvalidatedLanguageVariantsPair"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()