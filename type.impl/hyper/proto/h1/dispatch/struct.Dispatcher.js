(function() {var type_impls = {
"hyper":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dispatcher%3CD,+Bs,+I,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#62-416\">source</a><a href=\"#impl-Dispatcher%3CD,+Bs,+I,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, Bs, I, T&gt; <a class=\"struct\" href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html\" title=\"struct hyper::proto::h1::dispatch::Dispatcher\">Dispatcher</a>&lt;D, Bs, I, T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"hyper/proto/h1/dispatch/trait.Dispatch.html\" title=\"trait hyper::proto::h1::dispatch::Dispatch\">Dispatch</a>&lt;PollItem = <a class=\"struct\" href=\"hyper/proto/struct.MessageHead.html\" title=\"struct hyper::proto::MessageHead\">MessageHead</a>&lt;T::<a class=\"associatedtype\" href=\"hyper/proto/h1/trait.Http1Transaction.html#associatedtype.Outgoing\" title=\"type hyper::proto::h1::Http1Transaction::Outgoing\">Outgoing</a>&gt;, PollBody = Bs, RecvItem = <a class=\"struct\" href=\"hyper/proto/struct.MessageHead.html\" title=\"struct hyper::proto::MessageHead\">MessageHead</a>&lt;T::<a class=\"associatedtype\" href=\"hyper/proto/h1/trait.Http1Transaction.html#associatedtype.Incoming\" title=\"type hyper::proto::h1::Http1Transaction::Incoming\">Incoming</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    D::<a class=\"associatedtype\" href=\"hyper/proto/h1/dispatch/trait.Dispatch.html#associatedtype.PollError\" title=\"type hyper::proto::h1::dispatch::Dispatch::PollError\">PollError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">StdError</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    I: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    T: <a class=\"trait\" href=\"hyper/proto/h1/trait.Http1Transaction.html\" title=\"trait hyper::proto::h1::Http1Transaction\">Http1Transaction</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    Bs: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + 'static,\n    Bs::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">StdError</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#75-83\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.new\" class=\"fn\">new</a>(dispatch: D, conn: <a class=\"struct\" href=\"hyper/proto/h1/conn/struct.Conn.html\" title=\"struct hyper::proto::h1::conn::Conn\">Conn</a>&lt;I, Bs::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Data\" title=\"type hyper::body::HttpBody::Data\">Data</a>, T&gt;) -&gt; Self</h4></section><section id=\"method.disable_keep_alive\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#86-91\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.disable_keep_alive\" class=\"fn\">disable_keep_alive</a>(&amp;mut self)</h4></section><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#93-96\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; (I, <a class=\"struct\" href=\"hyper/body/struct.Bytes.html\" title=\"struct hyper::body::Bytes\">Bytes</a>, D)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_without_shutdown\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#103-112\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_without_shutdown\" class=\"fn\">poll_without_shutdown</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h4></section></summary><div class=\"docblock\"><p>Run this dispatcher until HTTP says this connection is done,\nbut don’t call <code>AsyncWrite::shutdown</code> on the underlying IO.</p>\n<p>This is useful for old-style HTTP upgrades, but ignores\nnewer-style upgrade API.</p>\n</div></details><section id=\"method.poll_catch\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#114-131\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_catch\" class=\"fn\">poll_catch</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    should_shutdown: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"enum\" href=\"hyper/proto/enum.Dispatched.html\" title=\"enum hyper::proto::Dispatched\">Dispatched</a>&gt;&gt;</h4></section><section id=\"method.poll_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#133-154\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_inner\" class=\"fn\">poll_inner</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    should_shutdown: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"enum\" href=\"hyper/proto/enum.Dispatched.html\" title=\"enum hyper::proto::Dispatched\">Dispatched</a>&gt;&gt;</h4></section><section id=\"method.poll_loop\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#156-184\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_loop\" class=\"fn\">poll_loop</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section><section id=\"method.poll_read\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#186-238\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_read\" class=\"fn\">poll_read</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section><section id=\"method.poll_read_head\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#240-293\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_read_head\" class=\"fn\">poll_read_head</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section><section id=\"method.poll_write\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#295-385\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_write\" class=\"fn\">poll_write</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section><section id=\"method.poll_flush\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#387-392\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"hyper/error/type.Result.html\" title=\"type hyper::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section><section id=\"method.close\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#394-398\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.close\" class=\"fn\">close</a>(&amp;mut self)</h4></section><section id=\"method.is_done\" class=\"method\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#400-415\">source</a><h4 class=\"code-header\">fn <a href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html#tymethod.is_done\" class=\"fn\">is_done</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"hyper::client::conn::Http1Dispatcher","hyper::server::conn::Http1Dispatcher"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-Dispatcher%3CD,+Bs,+I,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#418-437\">source</a><a href=\"#impl-Future-for-Dispatcher%3CD,+Bs,+I,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;D, Bs, I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"hyper/proto/h1/dispatch/struct.Dispatcher.html\" title=\"struct hyper::proto::h1::dispatch::Dispatcher\">Dispatcher</a>&lt;D, Bs, I, T&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"hyper/proto/h1/dispatch/trait.Dispatch.html\" title=\"trait hyper::proto::h1::dispatch::Dispatch\">Dispatch</a>&lt;PollItem = <a class=\"struct\" href=\"hyper/proto/struct.MessageHead.html\" title=\"struct hyper::proto::MessageHead\">MessageHead</a>&lt;T::<a class=\"associatedtype\" href=\"hyper/proto/h1/trait.Http1Transaction.html#associatedtype.Outgoing\" title=\"type hyper::proto::h1::Http1Transaction::Outgoing\">Outgoing</a>&gt;, PollBody = Bs, RecvItem = <a class=\"struct\" href=\"hyper/proto/struct.MessageHead.html\" title=\"struct hyper::proto::MessageHead\">MessageHead</a>&lt;T::<a class=\"associatedtype\" href=\"hyper/proto/h1/trait.Http1Transaction.html#associatedtype.Incoming\" title=\"type hyper::proto::h1::Http1Transaction::Incoming\">Incoming</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    D::<a class=\"associatedtype\" href=\"hyper/proto/h1/dispatch/trait.Dispatch.html#associatedtype.PollError\" title=\"type hyper::proto::h1::dispatch::Dispatch::PollError\">PollError</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">StdError</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    I: <a class=\"trait\" href=\"tokio/io/async_read/trait.AsyncRead.html\" title=\"trait tokio::io::async_read::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"tokio/io/async_write/trait.AsyncWrite.html\" title=\"trait tokio::io::async_write::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    T: <a class=\"trait\" href=\"hyper/proto/h1/trait.Http1Transaction.html\" title=\"trait hyper::proto::h1::Http1Transaction\">Http1Transaction</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,\n    Bs: <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">HttpBody</a> + 'static,\n    Bs::<a class=\"associatedtype\" href=\"hyper/body/trait.HttpBody.html#associatedtype.Error\" title=\"type hyper::body::HttpBody::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/error/trait.Error.html\" title=\"trait core::error::Error\">StdError</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"hyper/proto/enum.Dispatched.html\" title=\"enum hyper::proto::Dispatched\">Dispatched</a>, <a class=\"struct\" href=\"hyper/error/struct.Error.html\" title=\"struct hyper::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hyper/proto/h1/dispatch.rs.html#434-436\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut Self</a>&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempt to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","hyper::client::conn::Http1Dispatcher","hyper::server::conn::Http1Dispatcher"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()