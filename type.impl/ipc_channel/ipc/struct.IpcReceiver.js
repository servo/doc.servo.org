(function() {var type_impls = {
"media":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IpcReceiver%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#242\">source</a><a href=\"#impl-Debug-for-IpcReceiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"ipc_channel/ipc/struct.IpcReceiver.html\" title=\"struct ipc_channel::ipc::IpcReceiver\">IpcReceiver</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#242\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","media::media_channel::ipc::GLPlayerReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-IpcReceiver%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#290\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-IpcReceiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"ipc_channel/ipc/struct.IpcReceiver.html\" title=\"struct ipc_channel::ipc::IpcReceiver\">IpcReceiver</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#291-293\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"ipc_channel/ipc/struct.IpcReceiver.html\" title=\"struct ipc_channel::ipc::IpcReceiver\">IpcReceiver</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","media::media_channel::ipc::GLPlayerReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IpcReceiver%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#248-250\">source</a><a href=\"#impl-IpcReceiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"ipc_channel/ipc/struct.IpcReceiver.html\" title=\"struct ipc_channel::ipc::IpcReceiver\">IpcReceiver</a>&lt;T&gt;<div class=\"where\">where\n    T: for&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv\" class=\"method\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#253\">source</a><h4 class=\"code-header\">pub fn <a href=\"ipc_channel/ipc/struct.IpcReceiver.html#tymethod.recv\" class=\"fn\">recv</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"ipc_channel/ipc/enum.IpcError.html\" title=\"enum ipc_channel::ipc::IpcError\">IpcError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Blocking receive.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_recv\" class=\"method\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#258\">source</a><h4 class=\"code-header\">pub fn <a href=\"ipc_channel/ipc/struct.IpcReceiver.html#tymethod.try_recv\" class=\"fn\">try_recv</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"ipc_channel/ipc/enum.TryRecvError.html\" title=\"enum ipc_channel::ipc::TryRecvError\">TryRecvError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Non-blocking receive</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_recv_timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#272\">source</a><h4 class=\"code-header\">pub fn <a href=\"ipc_channel/ipc/struct.IpcReceiver.html#tymethod.try_recv_timeout\" class=\"fn\">try_recv_timeout</a>(&amp;self, duration: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"enum\" href=\"ipc_channel/ipc/enum.TryRecvError.html\" title=\"enum ipc_channel::ipc::TryRecvError\">TryRecvError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Blocks for up to the specified duration attempting to receive a message.</p>\n<p>This may block for longer than the specified duration if the channel is busy. If your timeout\nexceeds the duration that your operating system can represent in milliseconds, this may\nblock forever. At the time of writing, the smallest duration that may trigger this behavior\nis over 24 days.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_opaque\" class=\"method\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#283\">source</a><h4 class=\"code-header\">pub fn <a href=\"ipc_channel/ipc/struct.IpcReceiver.html#tymethod.to_opaque\" class=\"fn\">to_opaque</a>(self) -&gt; <a class=\"struct\" href=\"ipc_channel/ipc/struct.OpaqueIpcReceiver.html\" title=\"struct ipc_channel::ipc::OpaqueIpcReceiver\">OpaqueIpcReceiver</a></h4></section></summary><div class=\"docblock\"><p>Erase the type of the channel.</p>\n<p>Useful for adding routes to a <code>RouterProxy</code>.</p>\n</div></details></div></details>",0,"media::media_channel::ipc::GLPlayerReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-IpcReceiver%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#303\">source</a><a href=\"#impl-Serialize-for-IpcReceiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"ipc_channel/ipc/struct.IpcReceiver.html\" title=\"struct ipc_channel::ipc::IpcReceiver\">IpcReceiver</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ipc_channel/ipc.rs.html#304-306\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","media::media_channel::ipc::GLPlayerReceiver"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()