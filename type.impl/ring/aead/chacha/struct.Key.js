(function() {var type_impls = {
"ring":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Key\" class=\"impl\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#32\">source</a><a href=\"#impl-Clone-for-Key\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"ring/aead/chacha/struct.Key.html\" title=\"struct ring::aead::chacha::Key\">Key</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#32\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"ring/aead/chacha/struct.Key.html\" title=\"struct ring::aead::chacha::Key\">Key</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","ring::aead::chacha20_poly1305::Key"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key\" class=\"impl\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#37-43\">source</a><a href=\"#impl-Key\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"ring/aead/chacha/struct.Key.html\" title=\"struct ring::aead::chacha::Key\">Key</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#38-42\">source</a><h4 class=\"code-header\">pub(super) fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.new\" class=\"fn\">new</a>(value: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>]) -&gt; Self</h4></section></div></details>",0,"ring::aead::chacha20_poly1305::Key"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key\" class=\"impl\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#45-143\">source</a><a href=\"#impl-Key\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"ring/aead/chacha/struct.Key.html\" title=\"struct ring::aead::chacha::Key\">Key</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.encrypt_in_place\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#47-49\">source</a><h4 class=\"code-header\">pub fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.encrypt_in_place\" class=\"fn\">encrypt_in_place</a>(&amp;self, counter: <a class=\"struct\" href=\"ring/aead/chacha/struct.Counter.html\" title=\"struct ring::aead::chacha::Counter\">Counter</a>, in_out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>])</h4></section><section id=\"method.encrypt_iv_xor_in_place\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#52-57\">source</a><h4 class=\"code-header\">pub fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.encrypt_iv_xor_in_place\" class=\"fn\">encrypt_iv_xor_in_place</a>(&amp;self, iv: <a class=\"struct\" href=\"ring/aead/chacha/struct.Iv.html\" title=\"struct ring::aead::chacha::Iv\">Iv</a>, in_out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">32</a>])</h4></section><section id=\"method.new_mask\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#60-68\">source</a><h4 class=\"code-header\">pub fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.new_mask\" class=\"fn\">new_mask</a>(&amp;self, sample: <a class=\"type\" href=\"ring/aead/quic/type.Sample.html\" title=\"type ring::aead::quic::Sample\">Sample</a>) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">5</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.encrypt_within\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#71-85\">source</a><h4 class=\"code-header\">pub fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.encrypt_within\" class=\"fn\">encrypt_within</a>(\n    &amp;self,\n    counter: <a class=\"struct\" href=\"ring/aead/chacha/struct.Counter.html\" title=\"struct ring::aead::chacha::Counter\">Counter</a>,\n    in_out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>],\n    src: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Analogous to <code>slice::copy_within()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encrypt_less_safe\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#90-137\">source</a><h4 class=\"code-header\">fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.encrypt_less_safe\" class=\"fn\">encrypt_less_safe</a>(\n    &amp;self,\n    counter: <a class=\"struct\" href=\"ring/aead/chacha/struct.Counter.html\" title=\"struct ring::aead::chacha::Counter\">Counter</a>,\n    in_out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>],\n    src: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>This is “less safe” because it skips the important check that <code>encrypt_within</code> does.\nOnly call this with <code>src</code> equal to <code>0..</code> or from <code>encrypt_within</code>.</p>\n</div></details><section id=\"method.words_less_safe\" class=\"method\"><a class=\"src rightside\" href=\"src/ring/aead/chacha.rs.html#140-142\">source</a><h4 class=\"code-header\">pub(super) fn <a href=\"ring/aead/chacha/struct.Key.html#tymethod.words_less_safe\" class=\"fn\">words_less_safe</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">8</a>]</h4></section></div></details>",0,"ring::aead::chacha20_poly1305::Key"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()