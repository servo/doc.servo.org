(function() {var type_impls = {
"strck_ident":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#332\">source</a><a href=\"#impl-AsRef%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#333\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Ck<I>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cstr%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#338\">source</a><a href=\"#impl-AsRef%3Cstr%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#339\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<str>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#344\">source</a><a href=\"#impl-Borrow%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#345\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;</h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<Ck<I>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#245\">source</a><a href=\"#impl-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_buf\" class=\"method\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#247\">source</a><h4 class=\"code-header\">pub fn <a href=\"strck/struct.Check.html#tymethod.from_buf\" class=\"fn\">from_buf</a>(buf: B) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;, &lt;I as <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>&gt;::<a class=\"associatedtype\" href=\"strck/trait.Invariant.html#associatedtype.Error\" title=\"type strck::Invariant::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an <code>Ok</code> if the buffer upholds the invariants, otherwise <code>Err</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_buf_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#259\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"strck/struct.Check.html#tymethod.from_buf_unchecked\" class=\"fn\">from_buf_unchecked</a>(buf: B) -&gt; <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"strck/struct.Check.html\" title=\"struct strck::Check\"><code>Check</code></a> without validating the buffer.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The buffer must contain a valid string.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ck\" class=\"method\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#267\">source</a><h4 class=\"code-header\">pub fn <a href=\"strck/struct.Check.html#tymethod.as_ck\" class=\"fn\">as_ck</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <a href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\"><code>&amp;Ck</code></a> that borrows from <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#273\">source</a><h4 class=\"code-header\">pub fn <a href=\"strck/struct.Check.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; B</h4></section></summary><div class=\"docblock\"><p>Returns the inner representation.</p>\n</div></details></div></details>",0,"strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#130\">source</a><a href=\"#impl-Clone-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#130\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#278-281\">source</a><a href=\"#impl-Debug-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#283\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#324\">source</a><a href=\"#impl-Deref-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#327\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#350\">source</a><a href=\"#impl-Display-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#351\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Ck%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#356-359\">source</a><a href=\"#impl-From%3C%26Ck%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#361\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(check: &amp;'a <a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;) -&gt; <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a Ck<I>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#366-369\">source</a><a href=\"#impl-FromStr-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; + for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = &lt;I as <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>&gt;::<a class=\"associatedtype\" href=\"strck/trait.Invariant.html#associatedtype.Error\" title=\"type strck::Invariant::Error\">Error</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#373\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;, &lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#318\">source</a><a href=\"#impl-Hash-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#319\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#312\">source</a><a href=\"#impl-Ord-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#313\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26Check%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#16-20\">source</a><a href=\"#impl-PartialEq%3C%26Check%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, B1, B2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;'a <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B1&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,\n    B2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#22\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;'a <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&'a Check<I, B2>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26Ck%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#63\">source</a><a href=\"#impl-PartialEq%3C%26Ck%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;'a <a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#63\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;'a <a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&'a Ck<I>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26String%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#77\">source</a><a href=\"#impl-PartialEq%3C%26String%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#77\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&'a String>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26str%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#70\">source</a><a href=\"#impl-PartialEq%3C%26str%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#70\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&'a str>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CCheck%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#288-292\">source</a><a href=\"#impl-PartialEq%3CCheck%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B1, B2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B1&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,\n    B2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#294\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Check<I, B2>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#61\">source</a><a href=\"#impl-PartialEq%3CCk%3CI%3E%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#61\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"strck/struct.Ck.html\" title=\"struct strck::Ck\">Ck</a>&lt;I&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<Ck<I>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#75\">source</a><a href=\"#impl-PartialEq%3CString%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#75\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#68\">source</a><a href=\"#impl-PartialEq%3Cstr%3E-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/partial_eq.rs.html#68\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CCheck%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#299-303\">source</a><a href=\"#impl-PartialOrd%3CCheck%3CI,+B2%3E%3E-for-Check%3CI,+B1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B1, B2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;&gt; for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B1&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,\n    B2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#305\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B2&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Check<I, B2>>","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"],["<section id=\"impl-Eq-for-Check%3CI,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/strck/lib.rs.html#310\">source</a><a href=\"#impl-Eq-for-Check%3CI,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"strck/struct.Check.html\" title=\"struct strck::Check\">Check</a>&lt;I, B&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"strck/trait.Invariant.html\" title=\"trait strck::Invariant\">Invariant</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;,</div></h3></section>","Eq","strck_ident::unicode::IdentBuf","strck_ident::rust::IdentBuf"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()