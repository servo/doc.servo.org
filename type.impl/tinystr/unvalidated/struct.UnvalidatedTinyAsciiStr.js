(function() {var type_impls = {
"icu_locid_transform":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#74\">source</a><a href=\"#impl-AsULE-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" class=\"associatedtype\">ULE</a> = <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#78\">source</a><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\" class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt; as <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a></h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a href=\"zerovec/ule/trait.AsULE.html#tymethod.to_unaligned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#83\">source</a><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\" class=\"fn\">from_unaligned</a>(\n    unaligned: &lt;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt; as <a class=\"trait\" href=\"zerovec/ule/trait.AsULE.html\" title=\"trait zerovec::ule::AsULE\">AsULE</a>&gt;::<a class=\"associatedtype\" href=\"zerovec/ule/trait.AsULE.html#associatedtype.ULE\" title=\"type zerovec::ule::AsULE::ULE\">ULE</a>,\n) -&gt; <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a href=\"zerovec/ule/trait.AsULE.html#tymethod.from_unaligned\">Read more</a></div></details></div></details>","AsULE","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-Clone-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#19\">source</a><a href=\"#impl-Debug-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#20\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTinyAsciiStr%3CN%3E%3E-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#50\">source</a><a href=\"#impl-From%3CTinyAsciiStr%3CN%3E%3E-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"tinystr/ascii/struct.TinyAsciiStr.html\" title=\"struct tinystr::ascii::TinyAsciiStr\">TinyAsciiStr</a>&lt;N&gt;&gt; for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#51\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"struct\" href=\"tinystr/ascii/struct.TinyAsciiStr.html\" title=\"struct tinystr::ascii::TinyAsciiStr\">TinyAsciiStr</a>&lt;N&gt;) -&gt; <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TinyAsciiStr<N>>","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-Ord-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-PartialEq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-PartialOrd-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ULE-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#64\">source</a><a href=\"#impl-ULE-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"zerovec/ule/trait.ULE.html\" title=\"trait zerovec::ule::ULE\">ULE</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#66\">source</a><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#tymethod.validate_byte_slice\" class=\"fn\">validate_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a href=\"zerovec/ule/trait.ULE.html#tymethod.validate_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#101\">source</a><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\" class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, <a class=\"enum\" href=\"zerovec/error/enum.ZeroVecError.html\" title=\"enum zerovec::error::ZeroVecError\">ZeroVecError</a>&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime. <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#132\">source</a><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"zerovec/ule/trait.ULE.html#method.from_byte_slice_unchecked\" class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a></h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime, assuming\nthat this byte slice has previously been run through <a href=\"zerovec/ule/trait.ULE.html#method.parse_byte_slice\" title=\"associated function zerovec::ule::ULE::parse_byte_slice::parse_byte_slice\"><code>Self::parse_byte_slice()</code></a> with\nsuccess. <a href=\"zerovec/ule/trait.ULE.html#method.from_byte_slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerovec/ule/mod.rs.html#151\">source</a><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zerovec/ule/trait.ULE.html#method.as_byte_slice\" class=\"fn\">as_byte_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;[Self]</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a href=\"zerovec/ule/trait.ULE.html#method.as_byte_slice\">Read more</a></div></details></div></details>","ULE","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#29\">source</a><a href=\"#impl-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.try_into_tinystr\" class=\"method\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#32\">source</a><h4 class=\"code-header\">pub fn <a href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html#tymethod.try_into_tinystr\" class=\"fn\">try_into_tinystr</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"tinystr/ascii/struct.TinyAsciiStr.html\" title=\"struct tinystr::ascii::TinyAsciiStr\">TinyAsciiStr</a>&lt;N&gt;, <a class=\"enum\" href=\"tinystr/error/enum.TinyStrError.html\" title=\"enum tinystr::error::TinyStrError\">TinyStrError</a>&gt;</h4></section></div></details>",0,"icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroMapKV%3C'a%3E-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/ule.rs.html#88\">source</a><a href=\"#impl-ZeroMapKV%3C'a%3E-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"zerovec/map/kv/trait.ZeroMapKV.html\" title=\"trait zerovec::map::kv::ZeroMapKV\">ZeroMapKV</a>&lt;'a&gt; for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Container\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Container\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Container\" class=\"associatedtype\">Container</a> = <a class=\"struct\" href=\"zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\">ZeroVec</a>&lt;'a, <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;&gt;</h4></section></summary><div class='docblock'>The container that can be used with this type: <a href=\"zerovec/zerovec/struct.ZeroVec.html\" title=\"struct zerovec::zerovec::ZeroVec\"><code>ZeroVec</code></a> or <a href=\"zerovec/varzerovec/vec/enum.VarZeroVec.html\" title=\"enum zerovec::varzerovec::vec::VarZeroVec\"><code>VarZeroVec</code></a>.</div></details><section id=\"associatedtype.Slice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Slice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.Slice\" class=\"associatedtype\">Slice</a> = <a class=\"struct\" href=\"zerovec/zerovec/slice/struct.ZeroSlice.html\" title=\"struct zerovec::zerovec::slice::ZeroSlice\">ZeroSlice</a>&lt;<a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;&gt;</h4></section><details class=\"toggle\" open><summary><section id=\"associatedtype.GetType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GetType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\" class=\"associatedtype\">GetType</a> = <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::get()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.GetType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.OwnedType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OwnedType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\" class=\"associatedtype\">OwnedType</a> = <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h4></section></summary><div class='docblock'>The type produced by <code>Container::replace()</code> and <code>Container::remove()</code>,\nalso used during deserialization. If <code>Self</code> is human readable serialized,\ndeserializing to <code>Self::OwnedType</code> should produce the same value once\npassed through <code>Self::owned_as_self()</code> <a href=\"zerovec/map/kv/trait.ZeroMapKV.html#associatedtype.OwnedType\">Read more</a></div></details></div></details>","ZeroMapKV<'a>","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<section id=\"impl-Copy-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-Copy-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section>","Copy","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<section id=\"impl-Eq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-Eq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section>","Eq","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"],["<section id=\"impl-StructuralPartialEq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tinystr/unvalidated.rs.html#16\">source</a><a href=\"#impl-StructuralPartialEq-for-UnvalidatedTinyAsciiStr%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"tinystr/unvalidated/struct.UnvalidatedTinyAsciiStr.html\" title=\"struct tinystr::unvalidated::UnvalidatedTinyAsciiStr\">UnvalidatedTinyAsciiStr</a>&lt;N&gt;</h3></section>","StructuralPartialEq","icu_locid_transform::provider::UnvalidatedLanguage","icu_locid_transform::provider::UnvalidatedScript","icu_locid_transform::provider::UnvalidatedRegion","icu_locid_transform::provider::UnvalidatedVariant","icu_locid_transform::provider::UnvalidatedSubdivision"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()