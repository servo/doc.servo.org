(function() {var type_impls = {
"rayon":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SplitProducer%3C'p,+P,+V,+INCL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#57-95\">source</a><a href=\"#impl-SplitProducer%3C'p,+P,+V,+INCL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p, P, V, const INCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"rayon/split_producer/struct.SplitProducer.html\" title=\"struct rayon::split_producer::SplitProducer\">SplitProducer</a>&lt;'p, P, V, INCL&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rayon/split_producer/trait.Fissile.html\" title=\"trait rayon::split_producer::Fissile\">Fissile</a>&lt;P&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#63-94\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rayon/split_producer/struct.SplitProducer.html#tymethod.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: F, skip_last: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rayon/iter/plumbing/trait.Folder.html\" title=\"trait rayon::iter::plumbing::Folder\">Folder</a>&lt;V&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Common <code>fold_with</code> implementation, integrating <code>SplitTerminator</code>’s\nneed to sometimes skip its final empty item.</p>\n</div></details></div></details>",0,"rayon::split_producer::SplitInclusiveProducer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SplitProducer%3C'p,+P,+V,+true%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#44-55\">source</a><a href=\"#impl-SplitProducer%3C'p,+P,+V,+true%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p, P, V&gt; <a class=\"struct\" href=\"rayon/split_producer/struct.SplitProducer.html\" title=\"struct rayon::split_producer::SplitProducer\">SplitProducer</a>&lt;'p, P, V, true&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rayon/split_producer/trait.Fissile.html\" title=\"trait rayon::split_producer::Fissile\">Fissile</a>&lt;P&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new_incl\" class=\"method\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#48-54\">source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rayon/split_producer/struct.SplitProducer.html#tymethod.new_incl\" class=\"fn\">new_incl</a>(data: V, separator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'p P</a>) -&gt; Self</h4></section></div></details>",0,"rayon::split_producer::SplitInclusiveProducer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnindexedProducer-for-SplitProducer%3C'p,+P,+V,+INCL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#97-152\">source</a><a href=\"#impl-UnindexedProducer-for-SplitProducer%3C'p,+P,+V,+INCL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'p, P, V, const INCL: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"rayon/iter/plumbing/trait.UnindexedProducer.html\" title=\"trait rayon::iter::plumbing::UnindexedProducer\">UnindexedProducer</a> for <a class=\"struct\" href=\"rayon/split_producer/struct.SplitProducer.html\" title=\"struct rayon::split_producer::SplitProducer\">SplitProducer</a>&lt;'p, P, V, INCL&gt;<div class=\"where\">where\n    V: <a class=\"trait\" href=\"rayon/split_producer/trait.Fissile.html\" title=\"trait rayon::split_producer::Fissile\">Fissile</a>&lt;P&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"rayon/iter/plumbing/trait.UnindexedProducer.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = V</h4></section></summary><div class='docblock'>The type of item returned by this producer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#104-144\">source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rayon/iter/plumbing/trait.UnindexedProducer.html#tymethod.split\" class=\"fn\">split</a>(self) -&gt; (Self, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;)</h4></section></summary><div class='docblock'>Split midway into a new producer if possible, otherwise return <code>None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rayon/split_producer.rs.html#146-151\">source</a><a href=\"#method.fold_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rayon/iter/plumbing/trait.UnindexedProducer.html#tymethod.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: F) -&gt; F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"rayon/iter/plumbing/trait.Folder.html\" title=\"trait rayon::iter::plumbing::Folder\">Folder</a>&lt;Self::<a class=\"associatedtype\" href=\"rayon/iter/plumbing/trait.UnindexedProducer.html#associatedtype.Item\" title=\"type rayon::iter::plumbing::UnindexedProducer::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterate the producer, feeding each element to <code>folder</code>, and\nstop when the folder is full (or all elements have been consumed).</div></details></div></details>","UnindexedProducer","rayon::split_producer::SplitInclusiveProducer"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()