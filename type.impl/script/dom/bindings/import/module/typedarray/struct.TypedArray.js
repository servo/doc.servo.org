(function() {var type_impls = {
"script":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CustomTrace-for-TypedArray%3CT,+*mut+JSObject%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#131-133\">source</a><a href=\"#impl-CustomTrace-for-TypedArray%3CT,+*mut+JSObject%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"mozjs/gc/custom/trait.CustomTrace.html\" title=\"trait mozjs::gc::custom::CustomTrace\">CustomTrace</a> for <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSObject.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSObject\">JSObject</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#135\">source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"mozjs/gc/custom/trait.CustomTrace.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;self, trc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSTracer.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSTracer\">JSTracer</a>)</h4></section></div></details>","CustomTrace","script::dom::bindings::import::module::typedarray::ArrayBuffer","script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::Float32Array","script::dom::bindings::import::module::typedarray::Float64Array","script::dom::bindings::import::module::typedarray::Uint8Array","script::dom::bindings::import::module::typedarray::Uint8ClampedArray","script::dom::bindings::import::module::typedarray::Int8Array","script::dom::bindings::import::module::typedarray::Uint16Array","script::dom::bindings::import::module::typedarray::Int16Array","script::dom::bindings::import::module::typedarray::Uint32Array","script::dom::bindings::import::module::typedarray::Int32Array"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromJSValConvertible-for-TypedArray%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#98\">source</a><a href=\"#impl-FromJSValConvertible-for-TypedArray%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html\" title=\"trait script::dom::bindings::import::base::FromJSValConvertible\">FromJSValConvertible</a> for <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,\n    S: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.JSObjectStorage.html\" title=\"trait script::dom::bindings::import::module::typedarray::JSObjectStorage\">JSObjectStorage</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Config\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Config\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html#associatedtype.Config\" class=\"associatedtype\">Config</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>Optional configurable behaviour switch; use () for no configuration.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_jsval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#100-104\">source</a><a href=\"#method.from_jsval\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/dom/bindings/import/base/trait.FromJSValConvertible.html#tymethod.from_jsval\" class=\"fn\">from_jsval</a>(\n    _cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSContext.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSContext\">JSContext</a>,\n    value: <a class=\"struct\" href=\"script/dom/bindings/import/module/struct.Handle.html\" title=\"struct script::dom::bindings::import::module::Handle\">Handle</a>&lt;'_, <a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/JS/struct.Value.html\" title=\"struct script::dom::bindings::import::module::jsapi::JS::Value\">Value</a>&gt;,\n    _option: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"script/dom/bindings/import/base/enum.ConversionResult.html\" title=\"enum script::dom::bindings::import::base::ConversionResult\">ConversionResult</a>&lt;<a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Convert <code>val</code> to type <code>Self</code>.\nOptional configuration of type <code>T</code> can be passed as the <code>option</code>\nargument.\nIf it returns <code>Err(())</code>, a JSAPI exception is pending.\nIf it returns <code>Ok(Failure(reason))</code>, there is no pending JSAPI exception.</div></details></div></details>","FromJSValConvertible","script::dom::bindings::import::module::typedarray::ArrayBuffer","script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::Float32Array","script::dom::bindings::import::module::typedarray::Float64Array","script::dom::bindings::import::module::typedarray::Uint8Array","script::dom::bindings::import::module::typedarray::Uint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8Array","script::dom::bindings::import::module::typedarray::Int8Array","script::dom::bindings::import::module::typedarray::HeapInt8Array","script::dom::bindings::import::module::typedarray::Uint16Array","script::dom::bindings::import::module::typedarray::HeapUint16Array","script::dom::bindings::import::module::typedarray::Int16Array","script::dom::bindings::import::module::typedarray::HeapInt16Array","script::dom::bindings::import::module::typedarray::Uint32Array","script::dom::bindings::import::module::typedarray::HeapUint32Array","script::dom::bindings::import::module::typedarray::Int32Array","script::dom::bindings::import::module::typedarray::HeapInt32Array","script::dom::bindings::import::module::typedarray::HeapFloat32Array","script::dom::bindings::import::module::typedarray::HeapFloat64Array","script::dom::bindings::import::module::typedarray::HeapArrayBuffer","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToJSValConvertible-for-TypedArray%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#113\">source</a><a href=\"#impl-ToJSValConvertible-for-TypedArray%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"script/dom/bindings/import/module/trait.ToJSValConvertible.html\" title=\"trait script::dom::bindings::import::module::ToJSValConvertible\">ToJSValConvertible</a> for <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,\n    S: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.JSObjectStorage.html\" title=\"trait script::dom::bindings::import::module::typedarray::JSObjectStorage\">JSObjectStorage</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_jsval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#115\">source</a><a href=\"#method.to_jsval\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/dom/bindings/import/module/trait.ToJSValConvertible.html#tymethod.to_jsval\" class=\"fn\">to_jsval</a>(&amp;self, cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSContext.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSContext\">JSContext</a>, rval: <a class=\"struct\" href=\"script/dom/bindings/import/module/struct.MutableHandle.html\" title=\"struct script::dom::bindings::import::module::MutableHandle\">MutableHandle</a>&lt;'_, <a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/JS/struct.Value.html\" title=\"struct script::dom::bindings::import::module::jsapi::JS::Value\">Value</a>&gt;)</h4></section></summary><div class='docblock'>Convert <code>self</code> to a <code>JSVal</code>. JSAPI failure causes a panic.</div></details></div></details>","ToJSValConvertible","script::dom::bindings::import::module::typedarray::ArrayBuffer","script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::Float32Array","script::dom::bindings::import::module::typedarray::Float64Array","script::dom::bindings::import::module::typedarray::Uint8Array","script::dom::bindings::import::module::typedarray::Uint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8Array","script::dom::bindings::import::module::typedarray::Int8Array","script::dom::bindings::import::module::typedarray::HeapInt8Array","script::dom::bindings::import::module::typedarray::Uint16Array","script::dom::bindings::import::module::typedarray::HeapUint16Array","script::dom::bindings::import::module::typedarray::Int16Array","script::dom::bindings::import::module::typedarray::HeapInt16Array","script::dom::bindings::import::module::typedarray::Uint32Array","script::dom::bindings::import::module::typedarray::HeapUint32Array","script::dom::bindings::import::module::typedarray::Int32Array","script::dom::bindings::import::module::typedarray::HeapInt32Array","script::dom::bindings::import::module::typedarray::HeapFloat32Array","script::dom::bindings::import::module::typedarray::HeapFloat64Array","script::dom::bindings::import::module::typedarray::HeapArrayBuffer","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace-for-TypedArray%3CT,+Box%3CHeap%3C*mut+JSObject%3E%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#289\">source</a><a href=\"#impl-Trace-for-TypedArray%3CT,+Box%3CHeap%3C*mut+JSObject%3E%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"script/trait.JSTraceable.html\" title=\"trait script::JSTraceable\">Traceable</a> for <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"mozjs_sys/jsgc/struct.Heap.html\" title=\"struct mozjs_sys::jsgc::Heap\">Heap</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSObject.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSObject\">JSObject</a>&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mozjs/gc/trace.rs.html#290\">source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"script/trait.JSTraceable.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;self, trc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSTracer.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSTracer\">JSTracer</a>)</h4></section></summary><div class='docblock'>Trace <code>self</code>.</div></details></div></details>","Traceable","script::dom::bindings::import::module::typedarray::HeapUint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8Array","script::dom::bindings::import::module::typedarray::HeapInt8Array","script::dom::bindings::import::module::typedarray::HeapUint16Array","script::dom::bindings::import::module::typedarray::HeapInt16Array","script::dom::bindings::import::module::typedarray::HeapUint32Array","script::dom::bindings::import::module::typedarray::HeapInt32Array","script::dom::bindings::import::module::typedarray::HeapFloat32Array","script::dom::bindings::import::module::typedarray::HeapFloat64Array","script::dom::bindings::import::module::typedarray::HeapArrayBuffer","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypedArray%3CArrayBufferViewU8,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#443\">source</a><a href=\"#impl-TypedArray%3CArrayBufferViewU8,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;<a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.ArrayBufferViewU8.html\" title=\"struct script::dom::bindings::import::module::typedarray::ArrayBufferViewU8\">ArrayBufferViewU8</a>, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.JSObjectStorage.html\" title=\"trait script::dom::bindings::import::module::typedarray::JSObjectStorage\">JSObjectStorage</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_array_type\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#444\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.get_array_type\" class=\"fn\">get_array_type</a>(&amp;self) -&gt; <a class=\"enum\" href=\"script/dom/bindings/import/module/jsapi/Scalar/enum.Type.html\" title=\"enum script::dom::bindings::import::module::jsapi::Scalar::Type\">Type</a></h4></section></div></details>",0,"script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypedArray%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#140\">source</a><a href=\"#impl-TypedArray%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,\n    S: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.JSObjectStorage.html\" title=\"trait script::dom::bindings::import::module::typedarray::JSObjectStorage\">JSObjectStorage</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#144\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.from\" class=\"fn\">from</a>(object: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSObject.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSObject\">JSObject</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a typed array representation that wraps an existing JS reflector.\nThis operation will fail if attempted on a JS object that does not match\nthe expected typed array details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#172\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the underlying typed array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.underlying_object\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#184\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.underlying_object\" class=\"fn\">underlying_object</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><h5 id=\"unsafety\"><a class=\"doc-anchor\" href=\"#unsafety\">§</a>Unsafety</h5>\n<p>Returned wrapped pointer to the underlying <code>JSObject</code> is meant to be\nread-only, modifying it can lead to Undefined Behaviour and violation\nof TypedArray API guarantees.</p>\n<p>Practically, this exists only to implement <code>JSTraceable</code> trait in Servo\nfor Box&lt;Heap&lt;*mut JSObject&gt;&gt; variant.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#189-191\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.to_vec\" class=\"fn\">to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>&gt;<div class=\"where\">where\n    &lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Retrieves an owned data that’s represented by the typed array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#205\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[&lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>]</h4></section></summary><div class=\"docblock\"><h5 id=\"unsafety-1\"><a class=\"doc-anchor\" href=\"#unsafety-1\">§</a>Unsafety</h5>\n<p>The returned slice can be invalidated if the underlying typed array\nis neutered.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#217\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(\n    &amp;mut self,\n) -&gt; &amp;mut [&lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>]</h4></section></summary><div class=\"docblock\"><h5 id=\"unsafety-2\"><a class=\"doc-anchor\" href=\"#unsafety-2\">§</a>Unsafety</h5>\n<p>The returned slice can be invalidated if the underlying typed array\nis neutered.</p>\n<p>The underlying <code>JSObject</code> can be aliased, which can lead to\nUndefined Behavior due to mutable aliasing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_shared\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#224\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.is_shared\" class=\"fn\">is_shared</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return a boolean flag which denotes whether the underlying buffer\nis a SharedArrayBuffer.</p>\n</div></details></div></details>",0,"script::dom::bindings::import::module::typedarray::ArrayBuffer","script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::Float32Array","script::dom::bindings::import::module::typedarray::Float64Array","script::dom::bindings::import::module::typedarray::Uint8Array","script::dom::bindings::import::module::typedarray::Uint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8Array","script::dom::bindings::import::module::typedarray::Int8Array","script::dom::bindings::import::module::typedarray::HeapInt8Array","script::dom::bindings::import::module::typedarray::Uint16Array","script::dom::bindings::import::module::typedarray::HeapUint16Array","script::dom::bindings::import::module::typedarray::Int16Array","script::dom::bindings::import::module::typedarray::HeapInt16Array","script::dom::bindings::import::module::typedarray::Uint32Array","script::dom::bindings::import::module::typedarray::HeapUint32Array","script::dom::bindings::import::module::typedarray::Int32Array","script::dom::bindings::import::module::typedarray::HeapInt32Array","script::dom::bindings::import::module::typedarray::HeapFloat32Array","script::dom::bindings::import::module::typedarray::HeapFloat64Array","script::dom::bindings::import::module::typedarray::HeapArrayBuffer","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypedArray%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#229\">source</a><a href=\"#impl-TypedArray%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"struct\" href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html\" title=\"struct script::dom::bindings::import::module::typedarray::TypedArray\">TypedArray</a>&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElementCreator.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElementCreator\">TypedArrayElementCreator</a> + <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>,\n    S: <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.JSObjectStorage.html\" title=\"trait script::dom::bindings::import::module::typedarray::JSObjectStorage\">JSObjectStorage</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#232-236\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.create\" class=\"fn\">create</a>(\n    cx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSContext.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSContext\">JSContext</a>,\n    with: <a class=\"enum\" href=\"script/dom/bindings/import/module/typedarray/enum.CreateWith.html\" title=\"enum script::dom::bindings::import::module::typedarray::CreateWith\">CreateWith</a>&lt;'_, &lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>&gt;,\n    result: <a class=\"struct\" href=\"script/dom/bindings/import/module/struct.MutableHandle.html\" title=\"struct script::dom::bindings::import::module::MutableHandle\">MutableHandle</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"script/dom/bindings/import/module/jsapi/struct.JSObject.html\" title=\"struct script::dom::bindings::import::module::jsapi::JSObject\">JSObject</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new JS typed array, optionally providing initial data that will\nbe copied into the newly-allocated buffer. Returns the new JS reflector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/mozjs/typedarray.rs.html#255\">source</a><h4 class=\"code-header\">pub fn <a href=\"script/dom/bindings/import/module/typedarray/struct.TypedArray.html#tymethod.update\" class=\"fn\">update</a>(&amp;mut self, data: &amp;[&lt;T as <a class=\"trait\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html\" title=\"trait script::dom::bindings::import::module::typedarray::TypedArrayElement\">TypedArrayElement</a>&gt;::<a class=\"associatedtype\" href=\"script/dom/bindings/import/module/typedarray/trait.TypedArrayElement.html#associatedtype.Element\" title=\"type script::dom::bindings::import::module::typedarray::TypedArrayElement::Element\">Element</a>])</h4></section></summary><div class=\"docblock\"><p>Update an existed JS typed array</p>\n</div></details></div></details>",0,"script::dom::bindings::import::module::typedarray::ArrayBuffer","script::dom::bindings::import::module::typedarray::ArrayBufferView","script::dom::bindings::import::module::typedarray::Float32Array","script::dom::bindings::import::module::typedarray::Float64Array","script::dom::bindings::import::module::typedarray::Uint8Array","script::dom::bindings::import::module::typedarray::Uint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8ClampedArray","script::dom::bindings::import::module::typedarray::HeapUint8Array","script::dom::bindings::import::module::typedarray::Int8Array","script::dom::bindings::import::module::typedarray::HeapInt8Array","script::dom::bindings::import::module::typedarray::Uint16Array","script::dom::bindings::import::module::typedarray::HeapUint16Array","script::dom::bindings::import::module::typedarray::Int16Array","script::dom::bindings::import::module::typedarray::HeapInt16Array","script::dom::bindings::import::module::typedarray::Uint32Array","script::dom::bindings::import::module::typedarray::HeapUint32Array","script::dom::bindings::import::module::typedarray::Int32Array","script::dom::bindings::import::module::typedarray::HeapInt32Array","script::dom::bindings::import::module::typedarray::HeapFloat32Array","script::dom::bindings::import::module::typedarray::HeapFloat64Array","script::dom::bindings::import::module::typedarray::HeapArrayBuffer","script::dom::bindings::import::module::typedarray::HeapArrayBufferView"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()