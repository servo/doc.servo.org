(function() {var type_impls = {
"euclid":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#553-558\">source</a><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T, Output = T&gt;, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#555-557\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#544-551\">source</a><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#548-550\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#572-578\">source</a><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#574-577\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#512-518\">source</a><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#515-517\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.ceil\" title=\"method euclid::size::Size2D::ceil\"><code>Size2D::ceil</code></a>.</p>\n</div></details></div></details>","Ceil","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#46-54\">source</a><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#47-53\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#131-137\">source</a><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#132-136\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#139-143\">source</a><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#140-142\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#57-73\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#62-72\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#647-654\">source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#651-653\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#630-637\">source</a><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#634-636\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#656-661\">source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#658-660\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#639-645\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#641-644\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#520-526\">source</a><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#523-525\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.floor\" title=\"method euclid::size::Size2D::floor\"><code>Size2D::floor</code></a>.</p>\n</div></details></div></details>","Floor","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#705-710\">source</a><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#707-709\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>([w, h]: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#719-724\">source</a><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#721-723\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#691-696\">source</a><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#693-695\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#121-129\">source</a><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#125-128\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#614-621\">source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#618-620\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#597-604\">source</a><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#601-603\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#623-628\">source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#625-627\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#606-612\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#608-611\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#535-542\">source</a><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#539-541\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#112-119\">source</a><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#116-118\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#504-510\">source</a><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#507-509\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.round\" title=\"method euclid::size::Size2D::round\"><code>Size2D::round</code></a>.</p>\n</div></details></div></details>","Round","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#76-87\">source</a><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#81-86\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#145-190\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#150-155\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" title=\"associated function euclid::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#159-165\">source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/size/struct.Size2D.html#tymethod.new\" class=\"fn\">new</a>(width: T, height: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#168-170\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(width: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;, height: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#174-183\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#187-189\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#192-313\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#195-197\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#201-203\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#207-209\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#213-215\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#219-221\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#235-240\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#254-259\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#273-278\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#281-286\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.area\" class=\"fn\">area</a>(self) -&gt; T::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#306-312\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: Self, t: T) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#315-401\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#322-324\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#331-336\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#342-344\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#348-350\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#358-360\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#368-370\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#378-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#388-390\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#398-400\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#403-409\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#406-408\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#411-425\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#417-419\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#422-424\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#427-484\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#430-432\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#436-438\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#445-450\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: Self, end: Self) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#454-456\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#459-464\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#467-472\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#475-483\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#486-502\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#488-493\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#496-501\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#580-587\">source</a><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#584-586\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#589-595\">source</a><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#591-594\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#566-570\">source</a><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U: 'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#567-569\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;'a Self</a>&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#560-564\">source</a><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#561-563\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","euclid::default::Size2D"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#528-533\">source</a><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#530-532\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></div></details>","Zero","euclid::default::Size2D"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#44\">source</a><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section>","Copy","euclid::default::Size2D"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#110\">source</a><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","euclid::default::Size2D"]],
"layout_2020":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#553\">source</a><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#555\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#544\">source</a><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#548\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#572\">source</a><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#574\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#512\">source</a><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#515\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.ceil\" title=\"method euclid::size::Size2D::ceil\"><code>Size2D::ceil</code></a>.</p>\n</div></details></div></details>","Ceil","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#46\">source</a><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#47\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComputeSquaredDistance-for-Size2D%3CT,+UnknownUnit%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/distance.rs.html#112-114\">source</a><a href=\"#impl-ComputeSquaredDistance-for-Size2D%3CT,+UnknownUnit%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"style/values/distance/trait.ComputeSquaredDistance.html\" title=\"trait style::values::distance::ComputeSquaredDistance\">ComputeSquaredDistance</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"style/values/distance/trait.ComputeSquaredDistance.html\" title=\"trait style::values::distance::ComputeSquaredDistance\">ComputeSquaredDistance</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_squared_distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/distance.rs.html#117\">source</a><a href=\"#method.compute_squared_distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/distance/trait.ComputeSquaredDistance.html#tymethod.compute_squared_distance\" class=\"fn\">compute_squared_distance</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"style/values/distance/struct.SquaredDistance.html\" title=\"struct style::values::distance::SquaredDistance\">SquaredDistance</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Computes the squared distance between two animatable values.</div></details></div></details>","ComputeSquaredDistance","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#131\">source</a><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#132\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#139\">source</a><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#140\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#57-59\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#62-64\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#647\">source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#651\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#630\">source</a><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#634\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#656\">source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#658\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#639\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#641\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#520\">source</a><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#523\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.floor\" title=\"method euclid::size::Size2D::floor\"><code>Size2D::floor</code></a>.</p>\n</div></details></div></details>","Floor","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#705\">source</a><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#707\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#719\">source</a><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#721\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#691\">source</a><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#693\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#121-123\">source</a><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#125\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#662\">source</a><a href=\"#impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"malloc_size_of/trait.MallocSizeOf.html\" title=\"trait malloc_size_of::MallocSizeOf\">MallocSizeOf</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/malloc_size_of/lib.rs.html#663\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#362\">source</a><a href=\"#impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#363\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wr_malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"wr_malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct wr_malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#614\">source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#618\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#597\">source</a><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#601\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#623\">source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#625\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#606\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#608\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#535\">source</a><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#539\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#112-114\">source</a><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#116\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peek-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#114\">source</a><a href=\"#impl-Peek-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"peek_poke/trait.Peek.html\" title=\"trait peek_poke::Peek\">Peek</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"peek_poke/trait.Peek.html\" title=\"trait peek_poke::Peek\">Peek</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#116\">source</a><a href=\"#method.peek_from\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\" class=\"fn\">peek_from</a>(bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Deserialize from the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\">Read more</a></div></details></div></details>","Peek","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Poke-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#102\">source</a><a href=\"#impl-Poke-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"peek_poke/trait.Poke.html\" title=\"trait peek_poke::Poke\">Poke</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"peek_poke/trait.Poke.html\" title=\"trait peek_poke::Poke\">Poke</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#104\">source</a><a href=\"#method.max_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\" class=\"fn\">max_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum number of bytes that the serialized version of <code>Self</code>\nwill occupy. <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poke_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#108\">source</a><a href=\"#method.poke_into\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\" class=\"fn\">poke_into</a>(&amp;self, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Serialize into the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\">Read more</a></div></details></div></details>","Poke","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#504\">source</a><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#507\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.round\" title=\"method euclid::size::Size2D::round\"><code>Size2D::round</code></a>.</p>\n</div></details></div></details>","Round","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#76-78\">source</a><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#81-83\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#145\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#150-152\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" title=\"associated function euclid::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#159\">source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/size/struct.Size2D.html#tymethod.new\" class=\"fn\">new</a>(width: T, height: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(width: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;, height: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#174-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#187\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#192\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#195\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#201\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#207\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#213\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#219\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#235-237\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#273-275\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#281-283\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.area\" class=\"fn\">area</a>(self) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#306-308\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, t: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#315\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#322\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#331\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#348\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#358\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#368\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#378\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#388\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#398\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#403\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#406\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#411\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#417\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#422\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#427\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#430\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#436\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#445-447\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, end: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#459\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#467\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#475-477\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#486\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#488\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#496\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#580\">source</a><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#584\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#589\">source</a><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#591\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#566\">source</a><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,\n    U: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#567\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#560\">source</a><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#561\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToComputedValue-for-Size2D%3CT,+UnknownUnit%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#557-559\">source</a><a href=\"#impl-ToComputedValue-for-Size2D%3CT,+UnknownUnit%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ComputedValue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ComputedValue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" class=\"associatedtype\">ComputedValue</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class='docblock'>The computed value type we’re going to be converted to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#564\">source</a><a href=\"#method.to_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.to_computed_value\" class=\"fn\">to_computed_value</a>(\n    &amp;self,\n    context: &amp;<a class=\"struct\" href=\"style/values/computed/struct.Context.html\" title=\"struct style::values::computed::Context\">Context</a>&lt;'_&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt; as <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a></h4></section></summary><div class='docblock'>Convert a specified value to a computed value, using itself and the data\ninside the <code>Context</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_computed_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/style/values/computed/mod.rs.html#572\">source</a><a href=\"#method.from_computed_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\" class=\"fn\">from_computed_value</a>(\n    computed: &amp;&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt; as <a class=\"trait\" href=\"style/values/computed/trait.ToComputedValue.html\" title=\"trait style::values::computed::ToComputedValue\">ToComputedValue</a>&gt;::<a class=\"associatedtype\" href=\"style/values/computed/trait.ToComputedValue.html#associatedtype.ComputedValue\" title=\"type style::values::computed::ToComputedValue::ComputedValue\">ComputedValue</a>,\n) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class='docblock'>Convert a computed value to specified value form. <a href=\"style/values/computed/trait.ToComputedValue.html#tymethod.from_computed_value\">Read more</a></div></details></div></details>","ToComputedValue","layout_2020::table::TableSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#528\">source</a><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#530\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></div></details>","Zero","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#44\">source</a><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#110\">source</a><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","layout_2020::geom::PhysicalSize","layout_2020::table::TableSize"]],
"lyon_geom":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#553\">source</a><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#555\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#544\">source</a><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#548\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#572\">source</a><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#574\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#512\">source</a><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#515\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.ceil\" title=\"method euclid::size::Size2D::ceil\"><code>Size2D::ceil</code></a>.</p>\n</div></details></div></details>","Ceil","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#46\">source</a><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#47\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#131\">source</a><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#132\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#139\">source</a><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#140\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#57-59\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#62-64\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#647\">source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#651\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#630\">source</a><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#634\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#656\">source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#658\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#639\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#641\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#520\">source</a><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#523\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.floor\" title=\"method euclid::size::Size2D::floor\"><code>Size2D::floor</code></a>.</p>\n</div></details></div></details>","Floor","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#705\">source</a><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#707\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#719\">source</a><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#721\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#691\">source</a><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#693\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#121-123\">source</a><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#125\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#614\">source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#618\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#597\">source</a><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#601\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#623\">source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#625\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#606\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#608\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#535\">source</a><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#539\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#112-114\">source</a><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#116\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#504\">source</a><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#507\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.round\" title=\"method euclid::size::Size2D::round\"><code>Size2D::round</code></a>.</p>\n</div></details></div></details>","Round","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#76-78\">source</a><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#81-83\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#145\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#150-152\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" title=\"associated function euclid::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#159\">source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/size/struct.Size2D.html#tymethod.new\" class=\"fn\">new</a>(width: T, height: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(width: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;, height: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#174-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#187\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#192\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#195\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#201\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#207\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#213\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#219\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#235-237\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#273-275\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#281-283\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.area\" class=\"fn\">area</a>(self) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#306-308\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, t: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#315\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"lyon_geom/scalar/trait.NumCast.html\" title=\"trait lyon_geom::scalar::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#322\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"lyon_geom/scalar/trait.NumCast.html\" title=\"trait lyon_geom::scalar::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#331\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"lyon_geom/scalar/trait.NumCast.html\" title=\"trait lyon_geom::scalar::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#348\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#358\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#368\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#378\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#388\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#398\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#403\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"lyon_geom/scalar/trait.Float.html\" title=\"trait lyon_geom::scalar::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#406\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#411\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#417\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#422\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#427\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#430\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#436\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#445-447\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, end: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#459\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#467\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#475-477\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#486\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#488\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#496\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#580\">source</a><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#584\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#589\">source</a><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#591\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#566\">source</a><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,\n    U: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#567\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#560\">source</a><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#561\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","lyon_geom::Size"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#528\">source</a><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#530\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></div></details>","Zero","lyon_geom::Size"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#44\">source</a><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","lyon_geom::Size"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#110\">source</a><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","lyon_geom::Size"]],
"webrender_api":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#553\">source</a><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#555\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#544\">source</a><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#548\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#572\">source</a><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#574\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#512\">source</a><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#515\">source</a><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.ceil\" title=\"method euclid::size::Size2D::ceil\"><code>Size2D::ceil</code></a>.</p>\n</div></details></div></details>","Ceil","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#46\">source</a><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#47\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#131\">source</a><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#132\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#139\">source</a><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#140\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#57-59\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#62-64\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#647\">source</a><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#651\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#630\">source</a><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#634\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#656\">source</a><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#658\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#639\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#641\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#520\">source</a><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#523\">source</a><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.floor\" title=\"method euclid::size::Size2D::floor\"><code>Size2D::floor</code></a>.</p>\n</div></details></div></details>","Floor","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#705\">source</a><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#707\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#719\">source</a><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#721\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a>) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#691\">source</a><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#693\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#121-123\">source</a><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#125\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#362\">source</a><a href=\"#impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"wr_malloc_size_of/trait.MallocSizeOf.html\" title=\"trait wr_malloc_size_of::MallocSizeOf\">MallocSizeOf</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wr_malloc_size_of/lib.rs.html#363\">source</a><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wr_malloc_size_of/trait.MallocSizeOf.html#tymethod.size_of\" class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut <a class=\"struct\" href=\"wr_malloc_size_of/struct.MallocSizeOfOps.html\" title=\"struct wr_malloc_size_of::MallocSizeOfOps\">MallocSizeOfOps</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#614\">source</a><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#618\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#597\">source</a><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#601\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#623\">source</a><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#625\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/scale/struct.Scale.html\" title=\"struct euclid::scale::Scale\">Scale</a>&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#606\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#608\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#535\">source</a><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#539\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#112-114\">source</a><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#116\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peek-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#114\">source</a><a href=\"#impl-Peek-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"peek_poke/trait.Peek.html\" title=\"trait peek_poke::Peek\">Peek</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"peek_poke/trait.Peek.html\" title=\"trait peek_poke::Peek\">Peek</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#116\">source</a><a href=\"#method.peek_from\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\" class=\"fn\">peek_from</a>(bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Deserialize from the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Peek.html#tymethod.peek_from\">Read more</a></div></details></div></details>","Peek","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Poke-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#102\">source</a><a href=\"#impl-Poke-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"peek_poke/trait.Poke.html\" title=\"trait peek_poke::Poke\">Poke</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"peek_poke/trait.Poke.html\" title=\"trait peek_poke::Poke\">Poke</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#104\">source</a><a href=\"#method.max_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\" class=\"fn\">max_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum number of bytes that the serialized version of <code>Self</code>\nwill occupy. <a href=\"peek_poke/trait.Poke.html#tymethod.max_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poke_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/peek_poke/euclid.rs.html#108\">source</a><a href=\"#method.poke_into\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\" class=\"fn\">poke_into</a>(&amp;self, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Serialize into the buffer pointed to by <code>bytes</code>. <a href=\"peek_poke/trait.Poke.html#tymethod.poke_into\">Read more</a></div></details></div></details>","Poke","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#504\">source</a><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#507\">source</a><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"euclid/size/struct.Size2D.html#method.round\" title=\"method euclid::size::Size2D::round\"><code>Size2D::round</code></a>.</p>\n</div></details></div></details>","Round","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#76-78\">source</a><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#81-83\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#145\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#150-152\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" title=\"associated function euclid::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#159\">source</a><h4 class=\"code-header\">pub const fn <a href=\"euclid/size/struct.Size2D.html#tymethod.new\" class=\"fn\">new</a>(width: T, height: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#168\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_lengths\" class=\"fn\">from_lengths</a>(width: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;, height: <a class=\"struct\" href=\"euclid/length/struct.Length.html\" title=\"struct euclid::length::Length\">Length</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#174-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.splat\" class=\"fn\">splat</a>(v: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#187\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.from_untyped\" class=\"fn\">from_untyped</a>(p: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#192\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#195\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_array\" class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#201\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_tuple\" class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#207\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_vector\" class=\"fn\">to_vector</a>(self) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.Vector2D.html\" title=\"struct euclid::vector::Vector2D\">Vector2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#213\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_untyped\" class=\"fn\">to_untyped</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, <a class=\"struct\" href=\"euclid/struct.UnknownUnit.html\" title=\"struct euclid::UnknownUnit\">UnknownUnit</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#219\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast_unit\" class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#235-237\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Round.html\" title=\"trait euclid::num::Round\">Round</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Ceil.html\" title=\"trait euclid::num::Ceil\">Ceil</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#273-275\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Floor.html\" title=\"trait euclid::num::Floor\">Floor</a>,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#281-283\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.area\" class=\"fn\">area</a>(self) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#306-308\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, t: T) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.One.html\" title=\"trait euclid::num::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#315\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#322\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.cast\" class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#331\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.try_cast\" class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#342\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f32\" class=\"fn\">to_f32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#348\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_f64\" class=\"fn\">to_f64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#358\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#368\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u32\" class=\"fn\">to_u32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#378\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#388\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i32\" class=\"fn\">to_i32</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#398\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#403\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#406\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#411\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#417\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#422\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#427\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#430\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#436\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#445-447\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.clamp\" class=\"fn\">clamp</a>(self, start: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;, end: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#454\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.contains\" class=\"fn\">contains</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#459\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.greater_than\" class=\"fn\">greater_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#467\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.lower_than\" class=\"fn\">lower_than</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#475-477\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#486\">source</a><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#488\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.equal\" class=\"fn\">equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#496\">source</a><h4 class=\"code-header\">pub fn <a href=\"euclid/size/struct.Size2D.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"euclid/vector/struct.BoolVector2D.html\" title=\"struct euclid::vector::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#580\">source</a><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#584\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;) -&gt; &lt;<a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#589\">source</a><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#591\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#566\">source</a><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,\n    U: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#567\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#560\">source</a><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#561\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#528\">source</a><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"euclid/num/trait.Zero.html\" title=\"trait euclid::num::Zero\">Zero</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#530\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"euclid/num/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;</h4></section></div></details>","Zero","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#44\">source</a><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/euclid/size.rs.html#110\">source</a><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"euclid/size/struct.Size2D.html\" title=\"struct euclid::size::Size2D\">Size2D</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","webrender_api::units::DeviceIntSize","webrender_api::units::DeviceSize","webrender_api::units::FramebufferIntSize","webrender_api::units::PictureIntSize","webrender_api::units::PictureSize","webrender_api::units::RasterIntSize","webrender_api::units::RasterSize","webrender_api::units::LayoutSize","webrender_api::units::LayoutIntSize","webrender_api::units::WorldSize","webrender_api::units::LayoutSizeAu"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()