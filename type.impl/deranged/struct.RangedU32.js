(function() {var type_impls = {
"time":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-AsRef%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<u32>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Binary-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Binary.html#tymethod.fmt\">Read more</a></div></details></div></details>","Binary","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Borrow%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.80.1/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<u32>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Clone-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Debug-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Display-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-FromStr-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"deranged/struct.ParseIntError.html\" title=\"struct deranged::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;, &lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.80.1/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Hash-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerExp-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-LowerExp-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerExp.html\" title=\"trait core::fmt::LowerExp\">LowerExp</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerExp","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-LowerHex-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Octal-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Octal.html#tymethod.fmt\">Read more</a></div></details></div></details>","Octal","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Ord-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRangedU32%3CMIN_B,+MAX_B%3E%3E-for-RangedU32%3CMIN_A,+MAX_A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-PartialEq%3CRangedU32%3CMIN_B,+MAX_B%3E%3E-for-RangedU32%3CMIN_A,+MAX_A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN_A: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX_A: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MIN_B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX_B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_B, MAX_B&gt;&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_A, MAX_A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_B, MAX_B&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<RangedU32<MIN_B, MAX_B>>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRangedU32%3CMIN_B,+MAX_B%3E%3E-for-RangedU32%3CMIN_A,+MAX_A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-PartialOrd%3CRangedU32%3CMIN_B,+MAX_B%3E%3E-for-RangedU32%3CMIN_A,+MAX_A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN_A: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX_A: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MIN_B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX_B: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_B, MAX_B&gt;&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_A, MAX_A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN_B, MAX_B&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<RangedU32<MIN_B, MAX_B>>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangedU32%3C0,+0%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-RangedU32%3C0,+0%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;0, 0&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.exact\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.exact\" class=\"fn\">exact</a>&lt;const VALUE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;() -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;VALUE, VALUE&gt;</h4></section></div></details>",0,"time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const <a href=\"deranged/struct.RangedU32.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const <a href=\"deranged/struct.RangedU32.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ranged integer without checking the value.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must be within the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ranged integer if the given value is in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_static\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.new_static\" class=\"fn\">new_static</a>&lt;const VALUE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;() -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ranged integer with a statically known value. <strong>Fails to compile</strong> if the\nvalue is not in range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_saturating\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.new_saturating\" class=\"fn\">new_saturating</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a ranged integer with the given value, saturating if it is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expand\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.expand\" class=\"fn\">expand</a>&lt;const NEW_MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const NEW_MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;NEW_MIN, NEW_MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Expand the range that the value may be in. <strong>Fails to compile</strong> if the new range is\nnot a superset of the current range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.narrow\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.narrow\" class=\"fn\">narrow</a>&lt;const NEW_MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const NEW_MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;(\n    self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;NEW_MIN, NEW_MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to narrow the range that the value may be in. Returns <code>None</code> if the value\nis outside the new range. <strong>Fails to compile</strong> if the new range is not a subset of\nthe current range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub fn <a href=\"deranged/struct.RangedU32.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>,\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;, <a class=\"struct\" href=\"deranged/struct.ParseIntError.html\" title=\"struct deranged::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a string slice in a given base to an integer.</p>\n<p>The string is expected to be an optional <code>+</code> or <code>-</code> sign followed by digits. Leading\nand trailing whitespace represent an error. Digits are a subset of these characters,\ndepending on <code>radix</code>:</p>\n<ul>\n<li><code>0-9</code></li>\n<li><code>a-z</code></li>\n<li><code>A-Z</code></li>\n</ul>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>radix</code> is not in the range <code>2..=36</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(RangedU32::&lt;<span class=\"number\">5</span>, <span class=\"number\">10</span>&gt;::from_str_radix(<span class=\"string\">\"A\"</span>, <span class=\"number\">16</span>), <span class=\"prelude-val\">Ok</span>(RangedU32::new_static::&lt;<span class=\"number\">10</span>&gt;()));</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+deranged::RangedU32;%0A++++assert_eq!(RangedU32::%3C5,+10%3E::from_str_radix(%22A%22,+16),+Ok(RangedU32::new_static::%3C10%3E()));%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self + rhs</code>, returning <code>None</code> if the resulting\nvalue is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked integer addition. Computes <code>self + rhs</code>, assuming that the result is in\nrange.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The result of <code>self + rhs</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self - rhs</code>, returning <code>None</code> if the resulting\nvalue is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_sub\" class=\"fn\">unchecked_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked integer subtraction. Computes <code>self - rhs</code>, assuming that the result is in\nrange.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>The result of <code>self - rhs</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self * rhs</code>, returning <code>None</code> if the resulting\nvalue is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked integer multiplication. Computes <code>self * rhs</code>, assuming that the result is\nin range.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<p>The result of <code>self * rhs</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer addition. Computes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or\nif the resulting value is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_div\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_div\" class=\"fn\">unchecked_div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked integer division. Computes <code>self / rhs</code>, assuming that <code>rhs != 0</code> and that\nthe result is in range.</p>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p><code>self</code> must not be zero and the result of <code>self / rhs</code> must be in the range\n<code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, returning <code>None</code> if\n<code>rhs == 0</code> or if the resulting value is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_div_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_div_euclid\" class=\"fn\">unchecked_div_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, assuming that\n<code>rhs != 0</code> and that the result is in range.</p>\n<h5 id=\"safety-5\"><a class=\"doc-anchor\" href=\"#safety-5\">§</a>Safety</h5>\n<p><code>self</code> must not be zero and the result of <code>self.div_euclid(rhs)</code> must be in the\nrange <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.rem\" class=\"fn\">rem</a>&lt;const RHS_VALUE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;(\n    self,\n    rhs: <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;RHS_VALUE, RHS_VALUE&gt;,\n) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;0, RHS_VALUE&gt;</h4></section></summary><div class=\"docblock\"><p>Remainder. Computes <code>self % rhs</code>, statically guaranteeing that the returned value\nis in range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked integer remainder. Computes <code>self % rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or\nif the resulting value is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_rem\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_rem\" class=\"fn\">unchecked_rem</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked remainder. Computes <code>self % rhs</code>, assuming that <code>rhs != 0</code> and that the\nresult is in range.</p>\n<h5 id=\"safety-6\"><a class=\"doc-anchor\" href=\"#safety-6\">§</a>Safety</h5>\n<p><code>self</code> must not be zero and the result of <code>self % rhs</code> must be in the range\n<code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>, returning <code>None</code> if\n<code>rhs == 0</code> or if the resulting value is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_rem_euclid\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_rem_euclid\" class=\"fn\">unchecked_rem_euclid</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>, assuming that\n<code>rhs != 0</code> and that the result is in range.</p>\n<h5 id=\"safety-7\"><a class=\"doc-anchor\" href=\"#safety-7\">§</a>Safety</h5>\n<p><code>self</code> must not be zero and the result of <code>self.rem_euclid(rhs)</code> must be in the\nrange <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>, returning <code>None</code> if the resulting value is out\nof range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_neg\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_neg\" class=\"fn\">unchecked_neg</a>(self) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is in range.</p>\n<h5 id=\"safety-8\"><a class=\"doc-anchor\" href=\"#safety-8\">§</a>Safety</h5>\n<p>The result of <code>-self</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Negation. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if the result is not\nguaranteed to be in range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> if the resulting value\nis out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shl\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_shl\" class=\"fn\">unchecked_shl</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that the result is in range.</p>\n<h5 id=\"safety-9\"><a class=\"doc-anchor\" href=\"#safety-9\">§</a>Safety</h5>\n<p>The result of <code>self &lt;&lt; rhs</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> if\nthe resulting value is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_shr\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_shr\" class=\"fn\">unchecked_shr</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that the result is in range.</p>\n<h5 id=\"safety-10\"><a class=\"doc-anchor\" href=\"#safety-10\">§</a>Safety</h5>\n<p>The result of <code>self &gt;&gt; rhs</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked exponentiation. Computes <code>self.pow(exp)</code>, returning <code>None</code> if the resulting\nvalue is out of range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_pow\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"deranged/struct.RangedU32.html#tymethod.unchecked_pow\" class=\"fn\">unchecked_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming that the result is in\nrange.</p>\n<h5 id=\"safety-11\"><a class=\"doc-anchor\" href=\"#safety-11\">§</a>Safety</h5>\n<p>The result of <code>self.pow(exp)</code> must be in the range <code>MIN..=MAX</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating integer addition. Computes <code>self + rhs</code>, saturating at the numeric\nbounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating integer subtraction. Computes <code>self - rhs</code>, saturating at the numeric\nbounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating integer multiplication. Computes <code>self * rhs</code>, saturating at the numeric\nbounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, saturating at the\nnumeric bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping integer addition. Computes <code>self + rhs</code>, wrapping around the numeric\nbounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><h4 class=\"code-header\">pub const fn <a href=\"deranged/struct.RangedU32.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping integer subtraction. Computes <code>self - rhs</code>, wrapping around the numeric\nbounds.</p>\n</div></details></div></details>",0,"time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Serialize-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SmartDisplay-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-SmartDisplay-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"powerfmt/smart_display/trait.SmartDisplay.html\" title=\"trait powerfmt::smart_display::SmartDisplay\">SmartDisplay</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#associatedtype.Metadata\" class=\"associatedtype\">Metadata</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"powerfmt/smart_display/trait.SmartDisplay.html\" title=\"trait powerfmt::smart_display::SmartDisplay\">SmartDisplay</a>&gt;::<a class=\"associatedtype\" href=\"powerfmt/smart_display/trait.SmartDisplay.html#associatedtype.Metadata\" title=\"type powerfmt::smart_display::SmartDisplay::Metadata\">Metadata</a></h4></section></summary><div class='docblock'>User-provided metadata type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#tymethod.metadata\" class=\"fn\">metadata</a>(&amp;self, f: <a class=\"struct\" href=\"powerfmt/smart_display/struct.FormatterOptions.html\" title=\"struct powerfmt::smart_display::FormatterOptions\">FormatterOptions</a>) -&gt; <a class=\"struct\" href=\"powerfmt/smart_display/struct.Metadata.html\" title=\"struct powerfmt::smart_display::Metadata\">Metadata</a>&lt;'_, <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;</h4></section></summary><div class='docblock'>Compute any information needed to format the value. This must, at a minimum, determine the\nwidth of the value before any padding is added by the formatter. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#tymethod.metadata\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_with_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt_with_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt_with_metadata\" class=\"fn\">fmt_with_metadata</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    metadata: <a class=\"struct\" href=\"powerfmt/smart_display/struct.Metadata.html\" title=\"struct powerfmt::smart_display::Metadata\">Metadata</a>&lt;'_, <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter and metadata. The formatted output should have\nthe width indicated by the metadata. This is before any padding is added by the\nformatter. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt_with_metadata\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/powerfmt/smart_display.rs.html#691\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter. This is the same as <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Display.html#tymethod.fmt\" title=\"method core::fmt::Display::fmt\"><code>Display::fmt</code></a>. <a href=\"powerfmt/smart_display/trait.SmartDisplay.html#method.fmt\">Read more</a></div></details></div></details>","SmartDisplay","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"deranged/struct.TryFromIntError.html\" title=\"struct deranged::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;, &lt;<a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperExp-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-UpperExp-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperExp.html\" title=\"trait core::fmt::UpperExp\">UpperExp</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperExp.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperExp.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperExp","time::time::Nanoseconds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-UpperHex-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","time::time::Nanoseconds"],["<section id=\"impl-Copy-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Copy-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section>","Copy","time::time::Nanoseconds"],["<section id=\"impl-Eq-for-RangedU32%3CMIN,+MAX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/deranged/lib.rs.html#1389-1474\">source</a><a href=\"#impl-Eq-for-RangedU32%3CMIN,+MAX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const MIN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>, const MAX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"deranged/struct.RangedU32.html\" title=\"struct deranged::RangedU32\">RangedU32</a>&lt;MIN, MAX&gt;</h3></section>","Eq","time::time::Nanoseconds"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()