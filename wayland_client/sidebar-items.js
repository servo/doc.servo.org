initSidebarItems({"enum":[["Argument","Enum of possible argument in an event"],["ConnectError","Enum representing the possible reasons why connecting to the wayland server failed"],["GlobalError","An error that occurred trying to bind a global"],["GlobalEvent","Event provided to the user callback of GlobalManager"],["NoMessage","An empty enum representing a MessageGroup with no messages"],["ProxyMap","This type only exists for type-level compatibility with the rust implementation."]],"macro":[["event_enum","Generate an enum joining several objects events"],["global_filter","Convenience macro to create a `GlobalManager` callback"]],"mod":[["anonymous_object",""],["display",""],["event_queue",""],["globals",""],["imp",""],["protocol",""],["proxy",""],["sys","C-associated types"]],"struct":[["AnonymousObject","Anonymous interface"],["Attached","A handle to a proxy that has been attached to an event queue"],["DispatchData","Holder of global dispatch-related data"],["Display","A connection to a wayland server"],["EventQueue","An event queue for protocol messages"],["Filter","An event filter"],["GlobalManager","An utility to manage global objects"],["Main","A main handle to a proxy"],["ProtocolError","A protocol error"],["Proxy","An handle to a wayland proxy"],["QueueToken","A token representing this event queue"],["RawEvent","An generic event"],["ReadEventsGuard","A guard over a read intention."],["UserData","A wrapper for user data, able to store any type, and correctly handling access from a wrong thread"]],"trait":[["GlobalImplementor","A trait for implementation of the global advertisement"],["Interface","The description of a wayland interface"],["MessageGroup","A group of messages"]]});