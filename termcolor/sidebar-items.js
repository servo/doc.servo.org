initSidebarItems({"enum":[["BufferInner","BufferInner is an enumeration of different buffer types."],["Color","The set of available colors for the terminal foreground/background."],["ColorChoice","ColorChoice represents the color preferences of an end user."],["IoStandardStream",""],["IoStandardStreamLock",""],["ParseColorErrorKind",""],["StandardStreamType","`std::io` implements `Stdout` and `Stderr` (and their `Lock` variants) as separate types, which makes it difficult to abstract over them. We use some simple internal enum types to work around this."],["WriterInner","WriterInner is a (limited) generic representation of a writer. It is limited because W should only ever be stdout/stderr on Windows."],["WriterInnerLock","WriterInnerLock is a (limited) generic representation of a writer. It is limited because W should only ever be stdout/stderr on Windows."]],"struct":[["Ansi","Satisfies `WriteColor` using standard ANSI escape sequences."],["Buffer","Write colored text to memory."],["BufferWriter","Writes colored buffers to stdout or stderr."],["BufferedStandardStream","Like `StandardStream`, but does buffered writing."],["ColorSpec","A color specification."],["LossyStandardStream",""],["NoColor","Satisfies `WriteColor` but ignores all color options."],["ParseColorError","An error from parsing an invalid color specification."],["StandardStream","Satisfies `io::Write` and `WriteColor`, and supports optional coloring to either of the standard output streams, stdout and stderr."],["StandardStreamLock","`StandardStreamLock` is a locked reference to a `StandardStream`."]],"trait":[["WriteColor","This trait describes the behavior of writers that support colored output."]]});