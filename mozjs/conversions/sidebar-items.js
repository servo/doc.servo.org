initSidebarItems({"enum":[["ConversionBehavior","Behavior for converting out-of-range integers."],["ConversionResult","An enum to better support enums through FromJSValConvertible::from_jsval."]],"fn":[["clamp_to","Try to cast the number to a smaller type, but if it doesn’t fit, round it to the MAX or MIN of the source type before casting it to the destination type."],["convert_int_from_jsval",""],["enforce_range","Try to cast the number to a smaller type, but if it doesn’t fit, it will return an error."],["jsstr_to_string","Converts a `JSString` into a `String`, regardless of used encoding."],["latin1_to_string","Converts a `JSString`, encoded in “Latin1” (i.e. U+0000-U+00FF encoded as 0x00-0xFF) into a `String`."]],"macro":[["impl_as",""]],"struct":[["ForOfIteratorGuard","Rooting guard for the iterator field of ForOfIterator. Behaves like RootedGuard (roots on creation, unroots on drop), but borrows and allows access to the whole ForOfIterator, so that methods on ForOfIterator can still be used through it."]],"trait":[["As",""],["FromJSValConvertible","A trait to convert `JSVal`s to Rust types."],["ToJSValConvertible","A trait to convert Rust types to `JSVal`s."]]});