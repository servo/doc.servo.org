initSidebarItems({"enum":[["Pat","A pattern in a local binding, function signature, match expression, or various other places."]],"mod":[["parsing",""],["printing",""]],"struct":[["FieldPat","A single field in a struct pattern."],["PatBox","A box pattern: `box v`."],["PatIdent","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`."],["PatLit","A literal pattern: `0`."],["PatMacro","A macro in pattern position."],["PatOr","A pattern that matches any one of a set of cases."],["PatPath","A path pattern like `Color::Red`, optionally qualified with a self-type."],["PatRange","A range pattern: `1..=2`."],["PatReference","A reference pattern: `&mut var`."],["PatRest","The dots in a tuple or slice pattern: `[0, 1, ..]`"],["PatSlice","A dynamically sized slice pattern: `[a, b, ref i @ .., y, z]`."],["PatStruct","A struct or struct variant pattern: `Variant { x, y, .. }`."],["PatTuple","A tuple pattern: `(a, b)`."],["PatTupleStruct","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`."],["PatType","A type ascription pattern: `foo: f64`."],["PatWild","A pattern that matches any value: `_`."]]});