initSidebarItems({"struct":[["Directories","An iterator that walks over a directory"],["File","Unconstrained file access type that exposes read and write operations"]],"trait":[["PathExtensions","Utility methods for paths."]],"fn":[["change_file_times","Changes the timestamps for a file's last modification and access time. The file at the path specified will have its last access time set to `atime` and its modification time set to `mtime`. The times specified should be in milliseconds."],["chmod","Changes the permission mode bits found on a file or a directory. This function takes a mask from the `io` module"],["chown","Change the user and group owners of a file at the specified path."],["copy","Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file."],["link","Creates a new hard link on the filesystem. The `dst` path will be a link pointing to the `src` path. Note that systems often require these two paths to both be located on the same filesystem."],["lstat","Perform the same operation as the `stat` function, except that this function does not traverse through symlinks. This will return information about the symlink file instead of the file that it points to."],["mkdir","Create a new, empty directory at the provided path"],["mkdir_recursive","Recursively create a directory and all of its parent components if they are missing."],["readdir","Retrieve a vector containing all entries within a provided directory"],["readlink","Reads a symlink, returning the file that the symlink points to."],["rename","Rename a file or directory to a new name."],["rmdir","Remove an existing, empty directory"],["rmdir_recursive","Removes a directory at this path, after removing all its contents. Use carefully!"],["stat","Given a path, query the file system to get information about a file, directory, etc. This function will traverse symlinks to query information about the destination file."],["symlink","Creates a new symbolic link on the filesystem. The `dst` path will be a symlink pointing to the `src` path."],["unlink","Unlink a file from the underlying filesystem."],["walk_dir","Returns an iterator that will recursively walk the directory structure rooted at `path`. The path given will not be iterated over, and this will perform iteration in some top-down order.  The contents of unreadable subdirectories are ignored."]]});