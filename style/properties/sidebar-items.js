initSidebarItems({"constant":[["COUNTED_UNKNOWN_PROPERTY_COUNT","The length of all counted unknown properties."],["NON_CUSTOM_PROPERTY_ID_COUNT","The length of all the non-custom properties."],["_IMPL_NUM_FromPrimitive_FOR_CountedUnknownProperty",""]],"enum":[["AliasId","An identifier for a given alias property."],["AliasedPropertyId",""],["AllShorthand",""],["CSSWideKeyword","An enum to represent a CSS Wide keyword."],["CountedUnknownProperty","The counted unknown property list which is used for css use counters."],["CustomDeclarationValue","A custom property declaration value is either an unparsed value or a CSS wide-keyword."],["LogicalGroup","A group for properties which may override each other via logical resolution."],["LonghandId","An identifier for a given longhand property."],["PropertyDeclaration","Servo’s representation for a property declaration."],["PropertyDeclarationId","An identifier for a given property declaration, which can be either a longhand or a custom property."],["PropertyId","Servo’s representation of a CSS property, that is, either a longhand, a shorthand, or a custom property."],["ShorthandId","An identifier for a given shorthand property."],["StyleStructRef","A reference to a style struct of the parent, or our own style struct."]],"fn":[["adjust_border_width","See StyleAdjuster::adjust_for_border_width."],["clone_arc","Clone an arc, returning a regular arc"]],"macro":[["expanded",""],["restyle_damage_rebuild_and_reflow",""],["restyle_damage_rebuild_and_reflow_inline",""],["restyle_damage_reflow",""],["restyle_damage_reflow_out_of_flow",""],["restyle_damage_repaint",""],["unwrap_or_initial",""]],"mod":[["animated_properties","A module with all the code related to animated properties."],["cascade","The main cascading algorithm of the style system."],["declaration_block","A property declaration block."],["lazy_static_module",""],["longhands","A module with all the code for longhand properties."],["shorthands","A module with code for all the shorthand css properties, and a few serialization helpers."],["style_structs","The module where all the style structs are defined."]],"static":[["CASCADE_PROPERTY","A per-longhand array of functions to perform the CSS cascade on each of them, effectively doing virtual dispatch."]],"struct":[["AllShorthandDeclarationIterator",""],["AnimationDelayIter","An iterator over the values of the animation-delay properties."],["AnimationDirectionIter","An iterator over the values of the animation-direction properties."],["AnimationDurationIter","An iterator over the values of the animation-duration properties."],["AnimationFillModeIter","An iterator over the values of the animation-fill-mode properties."],["AnimationIterationCountIter","An iterator over the values of the animation-iteration-count properties."],["AnimationNameIter","An iterator over the values of the animation-name properties."],["AnimationPlayStateIter","An iterator over the values of the animation-play-state properties."],["AnimationTimingFunctionIter","An iterator over the values of the animation-timing-function properties."],["BuilderArc","An atomically reference counted shared pointer"],["ComputedValues","The struct that Servo uses to represent computed values."],["ComputedValuesInner","Actual data of ComputedValues, to match up with Gecko"],["CustomDeclaration","A custom property declaration with the property name and the declared value."],["INITIAL_SERVO_VALUES","The initial values for all style structs as defined by the specification."],["LogicalGroupSet","A set of logical groups."],["LonghandIdSet","A set of longhand properties"],["LonghandIdSetIterator","An iterator over a set of longhand ids."],["NonCustomPropertyId","A longhand or shorthand property."],["NonCustomPropertyIdSet","A set of all properties"],["NonCustomPropertyIterator","An iterator over all the property ids that are enabled for a given shorthand, if that shorthand is enabled for all content too."],["PropertyDeclarationVariantRepr",""],["PropertyFlags","A set of flags for properties."],["SourcePropertyDeclaration","A stack-allocated vector of `PropertyDeclaration` large enough to parse one CSS `key: value` declaration. (Shorthands expand to multiple `PropertyDeclaration`s.)"],["SourcePropertyDeclarationDrain","Return type of SourcePropertyDeclaration::drain"],["StyleBuilder","A type used to compute a struct with minimal overhead."],["TransitionDelayIter","An iterator over the values of the transition-delay properties."],["TransitionDurationIter","An iterator over the values of the transition-duration properties."],["TransitionPropertyIter","An iterator over the values of the transition-property properties."],["TransitionTimingFunctionIter","An iterator over the values of the transition-timing-function properties."],["UnparsedValue","An unparsed property value that contains `var()` functions."],["VariableDeclaration","An unparsed declaration that contains `var()` functions."],["WideKeywordDeclaration","A declaration using a CSS-wide keyword."]],"trait":[["MaybeBoxed","Conversion with fewer impls than From/Into"]],"type":[["CascadePropertyFn","A per-longhand function that performs the CSS cascade for that longhand."],["ShorthandsWithPropertyReferencesCache","A simple cache for properties that come from a shorthand and have variable references."],["SubpropertiesArray",""],["SubpropertiesVec",""]]});