initSidebarItems({"enum":[["AuthorStylesEnabled","Whether author styles are enabled."],["RuleInclusion","What cascade levels to include when styling elements."]],"fn":[["component_needs_revalidation",""],["needs_revalidation_for_testing","A function to be able to test the revalidation stuff."]],"struct":[["CascadeData","Data resulting from performing the CSS cascade that is specific to a given origin."],["DocumentCascadeData","All the computed information for all the stylesheets that apply to the document."],["DocumentCascadeDataIter","An iterator over the cascade data of a given document."],["ExtraStyleData","This struct holds data which users of Stylist may want to extract from stylesheets which can be done at the same time as updating."],["ExtraStyleDataIterator","An iterator over the different ExtraStyleData."],["GenericElementAndPseudoRules","A set of rules for element and pseudo-elements."],["RevalidationSelectorAndHashes","SelectorMapEntry implementation for use in our revalidation selector map."],["Rule","A rule, that wraps a style rule, but represents a single selector of the rule."],["Stylist","This structure holds all the selectors and device characteristics for a given document. The selectors are converted into `Rule`s and sorted into `SelectorMap`s keyed off stylesheet origin and pseudo-element (see `CascadeData`)."],["StylistSelectorVisitor","A selector visitor implementation that collects all the state the Stylist cares about a selector."],["StylistStylesheetSet","A wrapper over a DocumentStylesheetSet that can be `Sync`, since itâ€™s only used and exposed via mutable methods in the `Stylist`."],["UA_CASCADE_DATA_CACHE","A cache of computed user-agent data, to be shared across documents."],["UserAgentCascadeData",""],["UserAgentCascadeDataCache",""]],"type":[["ElementAndPseudoRules",""],["PartElementAndPseudoRules",""],["PartMap",""],["PrecomputedPseudoElementDeclarations",""],["StylistSheet","The type of the stylesheets that the stylist contains."]]});