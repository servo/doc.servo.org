initSidebarItems({"fn":[["get_safearea_inset_bottom",""],["get_safearea_inset_left",""],["get_safearea_inset_right",""],["get_safearea_inset_top",""],["parse_declaration_value","https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value"],["parse_declaration_value_block","Like parse_declaration_value, but accept `!` and `;` since they are only invalid at the top level"],["parse_env_function",""],["parse_fallback",""],["parse_name","Parse a custom property name."],["parse_non_custom_with_var","Parse the value of a non-custom property that contains `var()` references."],["parse_self_contained_declaration_value",""],["parse_var_function",""],["substitute","Replace `var()` and `env()` functions for a non-custom property."],["substitute_all","Resolve all custom properties to either substituted, invalid, or unset (meaning we should use the inherited value)."],["substitute_block","Replace `var()` functions in an arbitrary bit of input."],["substitute_references_in_value","Replace `var()` and `env()` functions in a pre-existing variable value."]],"static":[["ENVIRONMENT_VARIABLES",""]],"struct":[["CssEnvironment","The environment from which to get `env` function values."],["CustomPropertiesBuilder","A struct that takes care of encapsulating the cascade process for custom properties."],["EnvironmentVariable",""],["VarOrEnvReferences","A struct holding information about the external references to that a custom property value may have."],["VariableValue","A value for a custom property is just a set of tokens."]],"type":[["ComputedValue","Both specified and computed values are VariableValues, the difference is whether var() functions are expanded."],["CustomPropertiesMap","A map from CSS variable names to CSS variable computed values, used for resolving."],["EnvironmentEvaluator",""],["Name","A custom property name is just an `Atom`."],["SpecifiedValue","Both specified and computed values are VariableValues, the difference is whether var() functions are expanded."]]});