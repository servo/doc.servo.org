initSidebarItems({"constant":[["CASCADE_LEVEL_SHIFT","We pack the cascade level in a single byte, see CascadeLevel::to_byte_lossy for the different trade-offs there."],["SOURCE_ORDER_BITS",""],["SOURCE_ORDER_MASK",""],["SOURCE_ORDER_MAX",""],["SOURCE_ORDER_SHIFT","Blink uses 18 bits to store source order, and does not check overflow [1]. Thatâ€™s a limit that could be reached in realistic webpages, so we use 24 bits and enforce defined behavior in the overflow case."]],"struct":[["ApplicableDeclarationBits","Stores the source order of a block, the cascade level it belongs to, and the counter needed to handle Shadow DOM cascade order properly."],["ApplicableDeclarationBlock","A property declaration together with its precedence among rules of equal specificity so that we can sort them."]],"type":[["ApplicableDeclarationList","List of applicable declarations. This is a transient structure that shuttles declarations between selector matching and inserting into the rule tree, and therefore we want to avoid heap-allocation where possible."]]});